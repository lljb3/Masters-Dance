/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/js/dist/site.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/css/dist/style.css":
/*!***********************************!*\
  !*** ./assets/css/dist/style.css ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./assets/css/dist/style.css?");

/***/ }),

/***/ "./assets/css/lib/animate.min.css":
/*!****************************************!*\
  !*** ./assets/css/lib/animate.min.css ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./assets/css/lib/animate.min.css?");

/***/ }),

/***/ "./assets/css/lib/bootstrap-grid.min.css":
/*!***********************************************!*\
  !*** ./assets/css/lib/bootstrap-grid.min.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./assets/css/lib/bootstrap-grid.min.css?");

/***/ }),

/***/ "./assets/css/lib/bootstrap-reboot.min.css":
/*!*************************************************!*\
  !*** ./assets/css/lib/bootstrap-reboot.min.css ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./assets/css/lib/bootstrap-reboot.min.css?");

/***/ }),

/***/ "./assets/css/lib/bootstrap.jasny.min.css":
/*!************************************************!*\
  !*** ./assets/css/lib/bootstrap.jasny.min.css ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./assets/css/lib/bootstrap.jasny.min.css?");

/***/ }),

/***/ "./assets/css/lib/bootstrap.min.css":
/*!******************************************!*\
  !*** ./assets/css/lib/bootstrap.min.css ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./assets/css/lib/bootstrap.min.css?");

/***/ }),

/***/ "./assets/css/lib/fontawesome.all.min.css":
/*!************************************************!*\
  !*** ./assets/css/lib/fontawesome.all.min.css ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./assets/css/lib/fontawesome.all.min.css?");

/***/ }),

/***/ "./assets/js/dist/site.js":
/*!********************************!*\
  !*** ./assets/js/dist/site.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ../lib/barba */ \"./assets/js/lib/barba.js\");\n\n__webpack_require__(/*! ../lib/bootstrap.bundle */ \"./assets/js/lib/bootstrap.bundle.js\");\n\n__webpack_require__(/*! ../lib/bootstrap.jasny */ \"./assets/js/lib/bootstrap.jasny.js\");\n\n__webpack_require__(/*! ../lib/modernizr */ \"./assets/js/lib/modernizr.js\");\n\n__webpack_require__(/*! ../lib/retina */ \"./assets/js/lib/retina.js\");\n\n__webpack_require__(/*! ../lib/flowtype */ \"./assets/js/lib/flowtype.js\");\n\n__webpack_require__(/*! ../lib/isotope.pkgd */ \"./assets/js/lib/isotope.pkgd.js\");\n\n__webpack_require__(/*! ../lib/smooth-scroll.polyfills */ \"./assets/js/lib/smooth-scroll.polyfills.js\");\n\n__webpack_require__(/*! ../lib/site.js */ \"./assets/js/lib/site.js\");\n\n__webpack_require__(/*! ../../css/lib/bootstrap.min.css */ \"./assets/css/lib/bootstrap.min.css\");\n\n__webpack_require__(/*! ../../css/lib/bootstrap-grid.min.css */ \"./assets/css/lib/bootstrap-grid.min.css\");\n\n__webpack_require__(/*! ../../css/lib/bootstrap-reboot.min.css */ \"./assets/css/lib/bootstrap-reboot.min.css\");\n\n__webpack_require__(/*! ../../css/lib/bootstrap.jasny.min.css */ \"./assets/css/lib/bootstrap.jasny.min.css\");\n\n__webpack_require__(/*! ../../css/lib/fontawesome.all.min.css */ \"./assets/css/lib/fontawesome.all.min.css\");\n\n__webpack_require__(/*! ../../css/lib/animate.min.css */ \"./assets/css/lib/animate.min.css\");\n\n__webpack_require__(/*! ../../css/dist/style.css */ \"./assets/css/dist/style.css\");\n\n// Import JS\n'use strict';\n\n// Import CSS\n\n//# sourceURL=webpack:///./assets/js/dist/site.js?");

/***/ }),

/***/ "./assets/js/lib/barba.js":
/*!********************************!*\
  !*** ./assets/js/lib/barba.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif (( false ? undefined : _typeof(exports)) === 'object' && ( false ? undefined : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}\n})(undefined, function () {\n\treturn (/******/function (modules) {\n\t\t\t// webpackBootstrap\n\t\t\t/******/ // The module cache\n\t\t\t/******/var installedModules = {};\n\t\t\t/******/\n\t\t\t/******/ // The require function\n\t\t\t/******/function __webpack_require__(moduleId) {\n\t\t\t\t/******/\n\t\t\t\t/******/ // Check if module is in cache\n\t\t\t\t/******/if (installedModules[moduleId])\n\t\t\t\t\t/******/return installedModules[moduleId].exports;\n\t\t\t\t/******/\n\t\t\t\t/******/ // Create a new module (and put it into the cache)\n\t\t\t\t/******/var module = installedModules[moduleId] = {\n\t\t\t\t\t/******/exports: {},\n\t\t\t\t\t/******/id: moduleId,\n\t\t\t\t\t/******/loaded: false\n\t\t\t\t\t/******/ };\n\t\t\t\t/******/\n\t\t\t\t/******/ // Execute the module function\n\t\t\t\t/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\t\t\t/******/\n\t\t\t\t/******/ // Flag the module as loaded\n\t\t\t\t/******/module.loaded = true;\n\t\t\t\t/******/\n\t\t\t\t/******/ // Return the exports of the module\n\t\t\t\t/******/return module.exports;\n\t\t\t\t/******/\n\t\t\t}\n\t\t\t/******/\n\t\t\t/******/\n\t\t\t/******/ // expose the modules object (__webpack_modules__)\n\t\t\t/******/__webpack_require__.m = modules;\n\t\t\t/******/\n\t\t\t/******/ // expose the module cache\n\t\t\t/******/__webpack_require__.c = installedModules;\n\t\t\t/******/\n\t\t\t/******/ // __webpack_public_path__\n\t\t\t/******/__webpack_require__.p = \"http://localhost:8080/dist\";\n\t\t\t/******/\n\t\t\t/******/ // Load entry module and return exports\n\t\t\t/******/return __webpack_require__(0);\n\t\t\t/******/\n\t\t}(\n\t\t/************************************************************************/\n\t\t/******/[\n\t\t/* 0 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\t//Promise polyfill https://github.com/taylorhakes/promise-polyfill\n\n\t\t\tif (typeof Promise !== 'function') {\n\t\t\t\twindow.Promise = __webpack_require__(1);\n\t\t\t}\n\n\t\t\tvar Barba = {\n\t\t\t\tversion: '1.0.0',\n\t\t\t\tBaseTransition: __webpack_require__(4),\n\t\t\t\tBaseView: __webpack_require__(6),\n\t\t\t\tBaseCache: __webpack_require__(8),\n\t\t\t\tDispatcher: __webpack_require__(7),\n\t\t\t\tHistoryManager: __webpack_require__(9),\n\t\t\t\tPjax: __webpack_require__(10),\n\t\t\t\tPrefetch: __webpack_require__(13),\n\t\t\t\tUtils: __webpack_require__(5)\n\t\t\t};\n\n\t\t\tmodule.exports = Barba;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 1 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\t/* WEBPACK VAR INJECTION */(function (setImmediate) {\n\t\t\t\t(function (root) {\n\n\t\t\t\t\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t\t\t\t\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\t\t\t\t\tvar setTimeoutFunc = setTimeout;\n\n\t\t\t\t\tfunction noop() {}\n\n\t\t\t\t\t// Use polyfill for setImmediate for performance gains\n\t\t\t\t\tvar asap = typeof setImmediate === 'function' && setImmediate || function (fn) {\n\t\t\t\t\t\tsetTimeoutFunc(fn, 0);\n\t\t\t\t\t};\n\n\t\t\t\t\tvar onUnhandledRejection = function onUnhandledRejection(err) {\n\t\t\t\t\t\tif (typeof console !== 'undefined' && console) {\n\t\t\t\t\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// Polyfill for Function.prototype.bind\n\t\t\t\t\tfunction bind(fn, thisArg) {\n\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\tfn.apply(thisArg, arguments);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction Promise(fn) {\n\t\t\t\t\t\tif (_typeof(this) !== 'object') throw new TypeError('Promises must be constructed via new');\n\t\t\t\t\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t\t\t\t\tthis._state = 0;\n\t\t\t\t\t\tthis._handled = false;\n\t\t\t\t\t\tthis._value = undefined;\n\t\t\t\t\t\tthis._deferreds = [];\n\n\t\t\t\t\t\tdoResolve(fn, this);\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction handle(self, deferred) {\n\t\t\t\t\t\twhile (self._state === 3) {\n\t\t\t\t\t\t\tself = self._value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (self._state === 0) {\n\t\t\t\t\t\t\tself._deferreds.push(deferred);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself._handled = true;\n\t\t\t\t\t\tasap(function () {\n\t\t\t\t\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\t\t\t\t\tif (cb === null) {\n\t\t\t\t\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar ret;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tret = cb(self._value);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\treject(deferred.promise, e);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(deferred.promise, ret);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction resolve(self, newValue) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\t\t\t\t\tif (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\t\t\t\t\t\t\tif (newValue && ((typeof newValue === 'undefined' ? 'undefined' : _typeof(newValue)) === 'object' || typeof newValue === 'function')) {\n\t\t\t\t\t\t\t\tvar then = newValue.then;\n\t\t\t\t\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\t\t\t\t\tself._state = 3;\n\t\t\t\t\t\t\t\t\tself._value = newValue;\n\t\t\t\t\t\t\t\t\tfinale(self);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tself._state = 1;\n\t\t\t\t\t\t\tself._value = newValue;\n\t\t\t\t\t\t\tfinale(self);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\treject(self, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction reject(self, newValue) {\n\t\t\t\t\t\tself._state = 2;\n\t\t\t\t\t\tself._value = newValue;\n\t\t\t\t\t\tfinale(self);\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction finale(self) {\n\t\t\t\t\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\t\t\t\t\tasap(function () {\n\t\t\t\t\t\t\t\tif (!self._handled) {\n\t\t\t\t\t\t\t\t\tonUnhandledRejection(self._value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\t\t\t\t\thandle(self, self._deferreds[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself._deferreds = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\t\t\t\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\t\t\t\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\t\t\t\t\tthis.promise = promise;\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\r\n      * Take a potentially misbehaving resolver function and make sure\r\n      * onFulfilled and onRejected are only called once.\r\n      *\r\n      * Makes no guarantees about asynchrony.\r\n      */\n\t\t\t\t\tfunction doResolve(fn, self) {\n\t\t\t\t\t\tvar done = false;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tfn(function (value) {\n\t\t\t\t\t\t\t\tif (done) return;\n\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\tresolve(self, value);\n\t\t\t\t\t\t\t}, function (reason) {\n\t\t\t\t\t\t\t\tif (done) return;\n\t\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\t\treject(self, reason);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\tif (done) return;\n\t\t\t\t\t\t\tdone = true;\n\t\t\t\t\t\t\treject(self, ex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tPromise.prototype['catch'] = function (onRejected) {\n\t\t\t\t\t\treturn this.then(null, onRejected);\n\t\t\t\t\t};\n\n\t\t\t\t\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t\t\t\t\tvar prom = new this.constructor(noop);\n\n\t\t\t\t\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\t\t\t\t\treturn prom;\n\t\t\t\t\t};\n\n\t\t\t\t\tPromise.all = function (arr) {\n\t\t\t\t\t\tvar args = Array.prototype.slice.call(arr);\n\n\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\tif (args.length === 0) return resolve([]);\n\t\t\t\t\t\t\tvar remaining = args.length;\n\n\t\t\t\t\t\t\tfunction res(i, val) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (val && ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(val, function (val) {\n\t\t\t\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t\t\t\t}, reject);\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\targs[i] = val;\n\t\t\t\t\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\t\t\t\treject(ex);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\t\tres(i, args[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tPromise.resolve = function (value) {\n\t\t\t\t\t\tif (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.constructor === Promise) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\t\tresolve(value);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tPromise.reject = function (value) {\n\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\treject(value);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tPromise.race = function (values) {\n\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\t\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\r\n      * Set the immediate function to execute callbacks\r\n      * @param fn {function} Function to execute\r\n      * @private\r\n      */\n\t\t\t\t\tPromise._setImmediateFn = function _setImmediateFn(fn) {\n\t\t\t\t\t\tasap = fn;\n\t\t\t\t\t};\n\n\t\t\t\t\tPromise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n\t\t\t\t\t\tonUnhandledRejection = fn;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\t\t\t\tmodule.exports = Promise;\n\t\t\t\t\t} else if (!root.Promise) {\n\t\t\t\t\t\troot.Promise = Promise;\n\t\t\t\t\t}\n\t\t\t\t})(this);\n\n\t\t\t\t/* WEBPACK VAR INJECTION */\n\t\t\t}).call(exports, __webpack_require__(2).setImmediate);\n\n\t\t\t/***/\n\t\t},\n\t\t/* 2 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\t/* WEBPACK VAR INJECTION */(function (setImmediate, clearImmediate) {\n\t\t\t\tvar nextTick = __webpack_require__(3).nextTick;\n\t\t\t\tvar apply = Function.prototype.apply;\n\t\t\t\tvar slice = Array.prototype.slice;\n\t\t\t\tvar immediateIds = {};\n\t\t\t\tvar nextImmediateId = 0;\n\n\t\t\t\t// DOM APIs, for completeness\n\n\t\t\t\texports.setTimeout = function () {\n\t\t\t\t\treturn new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t\t\t\t};\n\t\t\t\texports.setInterval = function () {\n\t\t\t\t\treturn new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t\t\t\t};\n\t\t\t\texports.clearTimeout = exports.clearInterval = function (timeout) {\n\t\t\t\t\ttimeout.close();\n\t\t\t\t};\n\n\t\t\t\tfunction Timeout(id, clearFn) {\n\t\t\t\t\tthis._id = id;\n\t\t\t\t\tthis._clearFn = clearFn;\n\t\t\t\t}\n\t\t\t\tTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\t\t\t\tTimeout.prototype.close = function () {\n\t\t\t\t\tthis._clearFn.call(window, this._id);\n\t\t\t\t};\n\n\t\t\t\t// Does not start the time, just sets up the members needed.\n\t\t\t\texports.enroll = function (item, msecs) {\n\t\t\t\t\tclearTimeout(item._idleTimeoutId);\n\t\t\t\t\titem._idleTimeout = msecs;\n\t\t\t\t};\n\n\t\t\t\texports.unenroll = function (item) {\n\t\t\t\t\tclearTimeout(item._idleTimeoutId);\n\t\t\t\t\titem._idleTimeout = -1;\n\t\t\t\t};\n\n\t\t\t\texports._unrefActive = exports.active = function (item) {\n\t\t\t\t\tclearTimeout(item._idleTimeoutId);\n\n\t\t\t\t\tvar msecs = item._idleTimeout;\n\t\t\t\t\tif (msecs >= 0) {\n\t\t\t\t\t\titem._idleTimeoutId = setTimeout(function onTimeout() {\n\t\t\t\t\t\t\tif (item._onTimeout) item._onTimeout();\n\t\t\t\t\t\t}, msecs);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// That's not how node.js implements it but the exposed api is the same.\n\t\t\t\texports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function (fn) {\n\t\t\t\t\tvar id = nextImmediateId++;\n\t\t\t\t\tvar args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n\t\t\t\t\timmediateIds[id] = true;\n\n\t\t\t\t\tnextTick(function onNextTick() {\n\t\t\t\t\t\tif (immediateIds[id]) {\n\t\t\t\t\t\t\t// fn.call() is faster so we optimize for the common use-case\n\t\t\t\t\t\t\t// @see http://jsperf.com/call-apply-segu\n\t\t\t\t\t\t\tif (args) {\n\t\t\t\t\t\t\t\tfn.apply(null, args);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfn.call(null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Prevent ids from leaking\n\t\t\t\t\t\t\texports.clearImmediate(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn id;\n\t\t\t\t};\n\n\t\t\t\texports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function (id) {\n\t\t\t\t\tdelete immediateIds[id];\n\t\t\t\t};\n\t\t\t\t/* WEBPACK VAR INJECTION */\n\t\t\t}).call(exports, __webpack_require__(2).setImmediate, __webpack_require__(2).clearImmediate);\n\n\t\t\t/***/\n\t\t},\n\t\t/* 3 */\n\t\t/***/function (module, exports) {\n\n\t\t\t// shim for using process in browser\n\n\t\t\tvar process = module.exports = {};\n\n\t\t\t// cached from whatever global is present so that test runners that stub it\n\t\t\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t\t\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t\t\t// function because try/catches deoptimize in certain engines.\n\n\t\t\tvar cachedSetTimeout;\n\t\t\tvar cachedClearTimeout;\n\n\t\t\t(function () {\n\t\t\t\ttry {\n\t\t\t\t\tcachedSetTimeout = setTimeout;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcachedSetTimeout = function cachedSetTimeout() {\n\t\t\t\t\t\tthrow new Error('setTimeout is not defined');\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tcachedClearTimeout = clearTimeout;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcachedClearTimeout = function cachedClearTimeout() {\n\t\t\t\t\t\tthrow new Error('clearTimeout is not defined');\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t})();\n\t\t\tvar queue = [];\n\t\t\tvar draining = false;\n\t\t\tvar currentQueue;\n\t\t\tvar queueIndex = -1;\n\n\t\t\tfunction cleanUpNextTick() {\n\t\t\t\tif (!draining || !currentQueue) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdraining = false;\n\t\t\t\tif (currentQueue.length) {\n\t\t\t\t\tqueue = currentQueue.concat(queue);\n\t\t\t\t} else {\n\t\t\t\t\tqueueIndex = -1;\n\t\t\t\t}\n\t\t\t\tif (queue.length) {\n\t\t\t\t\tdrainQueue();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction drainQueue() {\n\t\t\t\tif (draining) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar timeout = cachedSetTimeout(cleanUpNextTick);\n\t\t\t\tdraining = true;\n\n\t\t\t\tvar len = queue.length;\n\t\t\t\twhile (len) {\n\t\t\t\t\tcurrentQueue = queue;\n\t\t\t\t\tqueue = [];\n\t\t\t\t\twhile (++queueIndex < len) {\n\t\t\t\t\t\tif (currentQueue) {\n\t\t\t\t\t\t\tcurrentQueue[queueIndex].run();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tqueueIndex = -1;\n\t\t\t\t\tlen = queue.length;\n\t\t\t\t}\n\t\t\t\tcurrentQueue = null;\n\t\t\t\tdraining = false;\n\t\t\t\tcachedClearTimeout(timeout);\n\t\t\t}\n\n\t\t\tprocess.nextTick = function (fun) {\n\t\t\t\tvar args = new Array(arguments.length - 1);\n\t\t\t\tif (arguments.length > 1) {\n\t\t\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tqueue.push(new Item(fun, args));\n\t\t\t\tif (queue.length === 1 && !draining) {\n\t\t\t\t\tcachedSetTimeout(drainQueue, 0);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// v8 likes predictible objects\n\t\t\tfunction Item(fun, array) {\n\t\t\t\tthis.fun = fun;\n\t\t\t\tthis.array = array;\n\t\t\t}\n\t\t\tItem.prototype.run = function () {\n\t\t\t\tthis.fun.apply(null, this.array);\n\t\t\t};\n\t\t\tprocess.title = 'browser';\n\t\t\tprocess.browser = true;\n\t\t\tprocess.env = {};\n\t\t\tprocess.argv = [];\n\t\t\tprocess.version = ''; // empty string to avoid regexp issues\n\t\t\tprocess.versions = {};\n\n\t\t\tfunction noop() {}\n\n\t\t\tprocess.on = noop;\n\t\t\tprocess.addListener = noop;\n\t\t\tprocess.once = noop;\n\t\t\tprocess.off = noop;\n\t\t\tprocess.removeListener = noop;\n\t\t\tprocess.removeAllListeners = noop;\n\t\t\tprocess.emit = noop;\n\n\t\t\tprocess.binding = function (name) {\n\t\t\t\tthrow new Error('process.binding is not supported');\n\t\t\t};\n\n\t\t\tprocess.cwd = function () {\n\t\t\t\treturn '/';\n\t\t\t};\n\t\t\tprocess.chdir = function (dir) {\n\t\t\t\tthrow new Error('process.chdir is not supported');\n\t\t\t};\n\t\t\tprocess.umask = function () {\n\t\t\t\treturn 0;\n\t\t\t};\n\n\t\t\t/***/\n\t\t},\n\t\t/* 4 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\tvar Utils = __webpack_require__(5);\n\n\t\t\t/**\r\n    * BaseTransition to extend\r\n    *\r\n    * @namespace Barba.BaseTransition\r\n    * @type {Object}\r\n    */\n\t\t\tvar BaseTransition = {\n\t\t\t\t/**\r\n     * @memberOf Barba.BaseTransition\r\n     * @type {HTMLElement}\r\n     */\n\t\t\t\toldContainer: undefined,\n\n\t\t\t\t/**\r\n     * @memberOf Barba.BaseTransition\r\n     * @type {HTMLElement}\r\n     */\n\t\t\t\tnewContainer: undefined,\n\n\t\t\t\t/**\r\n     * @memberOf Barba.BaseTransition\r\n     * @type {Promise}\r\n     */\n\t\t\t\tnewContainerLoading: undefined,\n\n\t\t\t\t/**\r\n     * Helper to extend the object\r\n     *\r\n     * @memberOf Barba.BaseTransition\r\n     * @param  {Object} newObject\r\n     * @return {Object} newInheritObject\r\n     */\n\t\t\t\textend: function extend(obj) {\n\t\t\t\t\treturn Utils.extend(this, obj);\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * This function is called from Pjax module to initialize\r\n     * the transition.\r\n     *\r\n     * @memberOf Barba.BaseTransition\r\n     * @private\r\n     * @param  {HTMLElement} oldContainer\r\n     * @param  {Promise} newContainer\r\n     * @return {Promise}\r\n     */\n\t\t\t\tinit: function init(oldContainer, newContainer) {\n\t\t\t\t\tvar _this = this;\n\n\t\t\t\t\tthis.oldContainer = oldContainer;\n\t\t\t\t\tthis._newContainerPromise = newContainer;\n\n\t\t\t\t\tthis.deferred = Utils.deferred();\n\t\t\t\t\tthis.newContainerReady = Utils.deferred();\n\t\t\t\t\tthis.newContainerLoading = this.newContainerReady.promise;\n\n\t\t\t\t\tthis.start();\n\n\t\t\t\t\tthis._newContainerPromise.then(function (newContainer) {\n\t\t\t\t\t\t_this.newContainer = newContainer;\n\t\t\t\t\t\t_this.newContainerReady.resolve();\n\t\t\t\t\t});\n\n\t\t\t\t\treturn this.deferred.promise;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * This function needs to be called as soon the Transition is finished\r\n     *\r\n     * @memberOf Barba.BaseTransition\r\n     */\n\t\t\t\tdone: function done() {\n\t\t\t\t\tthis.oldContainer.parentNode.removeChild(this.oldContainer);\n\t\t\t\t\tthis.newContainer.style.visibility = 'visible';\n\t\t\t\t\tthis.deferred.resolve();\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Constructor for your Transition\r\n     *\r\n     * @memberOf Barba.BaseTransition\r\n     * @abstract\r\n     */\n\t\t\t\tstart: function start() {}\n\t\t\t};\n\n\t\t\tmodule.exports = BaseTransition;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 5 */\n\t\t/***/function (module, exports) {\n\n\t\t\t/**\r\n    * Just an object with some helpful functions\r\n    *\r\n    * @type {Object}\r\n    * @namespace Barba.Utils\r\n    */\n\t\t\tvar Utils = {\n\t\t\t\t/**\r\n     * Return the current url\r\n     *\r\n     * @memberOf Barba.Utils\r\n     * @return {String} currentUrl\r\n     */\n\t\t\t\tgetCurrentUrl: function getCurrentUrl() {\n\t\t\t\t\treturn window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.search;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Given an url, return it without the hash\r\n     *\r\n     * @memberOf Barba.Utils\r\n     * @private\r\n     * @param  {String} url\r\n     * @return {String} newCleanUrl\r\n     */\n\t\t\t\tcleanLink: function cleanLink(url) {\n\t\t\t\t\treturn url.replace(/#.*/, '');\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Time in millisecond after the xhr request goes in timeout\r\n     *\r\n     * @memberOf Barba.Utils\r\n     * @type {Number}\r\n     * @default\r\n     */\n\t\t\t\txhrTimeout: 5000,\n\n\t\t\t\t/**\r\n     * Start an XMLHttpRequest() and return a Promise\r\n     *\r\n     * @memberOf Barba.Utils\r\n     * @param  {String} url\r\n     * @return {Promise}\r\n     */\n\t\t\t\txhr: function xhr(url) {\n\t\t\t\t\tvar deferred = this.deferred();\n\t\t\t\t\tvar req = new XMLHttpRequest();\n\n\t\t\t\t\treq.onreadystatechange = function () {\n\t\t\t\t\t\tif (req.readyState === 4) {\n\t\t\t\t\t\t\tif (req.status === 200) {\n\t\t\t\t\t\t\t\treturn deferred.resolve(req.responseText);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn deferred.reject(new Error('xhr: HTTP code is not 200'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\treq.ontimeout = function () {\n\t\t\t\t\t\treturn deferred.reject(new Error('xhr: Timeout exceeded'));\n\t\t\t\t\t};\n\n\t\t\t\t\treq.open('GET', url);\n\t\t\t\t\treq.timeout = this.xhrTimeout;\n\t\t\t\t\treq.setRequestHeader('x-barba', 'yes');\n\t\t\t\t\treq.send();\n\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Get obj and props and return a new object with the property merged\r\n     *\r\n     * @memberOf Barba.Utils\r\n     * @param  {object} obj\r\n     * @param  {object} props\r\n     * @return {object}\r\n     */\n\t\t\t\textend: function extend(obj, props) {\n\t\t\t\t\tvar newObj = Object.create(obj);\n\n\t\t\t\t\tfor (var prop in props) {\n\t\t\t\t\t\tif (props.hasOwnProperty(prop)) {\n\t\t\t\t\t\t\tnewObj[prop] = props[prop];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn newObj;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Return a new \"Deferred\" object\r\n     * https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred\r\n     *\r\n     * @memberOf Barba.Utils\r\n     * @return {Deferred}\r\n     */\n\t\t\t\tdeferred: function deferred() {\n\t\t\t\t\treturn new function () {\n\t\t\t\t\t\tthis.resolve = null;\n\t\t\t\t\t\tthis.reject = null;\n\n\t\t\t\t\t\tthis.promise = new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\tthis.resolve = resolve;\n\t\t\t\t\t\t\tthis.reject = reject;\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t\t}();\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Return the port number normalized, eventually you can pass a string to be normalized.\r\n     *\r\n     * @memberOf Barba.Utils\r\n     * @private\r\n     * @param  {String} p\r\n     * @return {Int} port\r\n     */\n\t\t\t\tgetPort: function getPort(p) {\n\t\t\t\t\tvar port = typeof p !== 'undefined' ? p : window.location.port;\n\t\t\t\t\tvar protocol = window.location.protocol;\n\n\t\t\t\t\tif (port != '') return parseInt(port);\n\n\t\t\t\t\tif (protocol === 'http:') return 80;\n\n\t\t\t\t\tif (protocol === 'https:') return 443;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmodule.exports = Utils;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 6 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\tvar Dispatcher = __webpack_require__(7);\n\t\t\tvar Utils = __webpack_require__(5);\n\n\t\t\t/**\r\n    * BaseView to be extended\r\n    *\r\n    * @namespace Barba.BaseView\r\n    * @type {Object}\r\n    */\n\t\t\tvar BaseView = {\n\t\t\t\t/**\r\n     * Namespace of the view.\r\n     * (need to be associated with the data-namespace of the container)\r\n     *\r\n     * @memberOf Barba.BaseView\r\n     * @type {String}\r\n     */\n\t\t\t\tnamespace: null,\n\n\t\t\t\t/**\r\n     * Helper to extend the object\r\n     *\r\n     * @memberOf Barba.BaseView\r\n     * @param  {Object} newObject\r\n     * @return {Object} newInheritObject\r\n     */\n\t\t\t\textend: function extend(obj) {\n\t\t\t\t\treturn Utils.extend(this, obj);\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Init the view.\r\n     * P.S. Is suggested to init the view before starting Barba.Pjax.start(),\r\n     * in this way .onEnter() and .onEnterCompleted() will be fired for the current\r\n     * container when the page is loaded.\r\n     *\r\n     * @memberOf Barba.BaseView\r\n     */\n\t\t\t\tinit: function init() {\n\t\t\t\t\tvar _this = this;\n\n\t\t\t\t\tDispatcher.on('initStateChange', function (newStatus, oldStatus) {\n\t\t\t\t\t\tif (oldStatus && oldStatus.namespace === _this.namespace) _this.onLeave();\n\t\t\t\t\t});\n\n\t\t\t\t\tDispatcher.on('newPageReady', function (newStatus, oldStatus, container) {\n\t\t\t\t\t\t_this.container = container;\n\n\t\t\t\t\t\tif (newStatus.namespace === _this.namespace) _this.onEnter();\n\t\t\t\t\t});\n\n\t\t\t\t\tDispatcher.on('transitionCompleted', function (newStatus, oldStatus) {\n\t\t\t\t\t\tif (newStatus.namespace === _this.namespace) _this.onEnterCompleted();\n\n\t\t\t\t\t\tif (oldStatus && oldStatus.namespace === _this.namespace) _this.onLeaveCompleted();\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * This function will be fired when the container\r\n     * is ready and attached to the DOM.\r\n     *\r\n     * @memberOf Barba.BaseView\r\n     * @abstract\r\n     */\n\t\t\t\tonEnter: function onEnter() {},\n\n\t\t\t\t/**\r\n     * This function will be fired when the transition\r\n     * to this container has just finished.\r\n     *\r\n     * @memberOf Barba.BaseView\r\n     * @abstract\r\n     */\n\t\t\t\tonEnterCompleted: function onEnterCompleted() {},\n\n\t\t\t\t/**\r\n     * This function will be fired when the transition\r\n     * to a new container has just started.\r\n     *\r\n     * @memberOf Barba.BaseView\r\n     * @abstract\r\n     */\n\t\t\t\tonLeave: function onLeave() {},\n\n\t\t\t\t/**\r\n     * This function will be fired when the container\r\n     * has just been removed from the DOM.\r\n     *\r\n     * @memberOf Barba.BaseView\r\n     * @abstract\r\n     */\n\t\t\t\tonLeaveCompleted: function onLeaveCompleted() {}\n\t\t\t};\n\n\t\t\tmodule.exports = BaseView;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 7 */\n\t\t/***/function (module, exports) {\n\n\t\t\t/**\r\n    * Little Dispatcher inspired by MicroEvent.js\r\n    *\r\n    * @namespace Barba.Dispatcher\r\n    * @type {Object}\r\n    */\n\t\t\tvar Dispatcher = {\n\t\t\t\t/**\r\n     * Object that keeps all the events\r\n     *\r\n     * @memberOf Barba.Dispatcher\r\n     * @readOnly\r\n     * @type {Object}\r\n     */\n\t\t\t\tevents: {},\n\n\t\t\t\t/**\r\n     * Bind a callback to an event\r\n     *\r\n     * @memberOf Barba.Dispatcher\r\n     * @param  {String} eventName\r\n     * @param  {Function} function\r\n     */\n\t\t\t\ton: function on(e, f) {\n\t\t\t\t\tthis.events[e] = this.events[e] || [];\n\t\t\t\t\tthis.events[e].push(f);\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Unbind event\r\n     *\r\n     * @memberOf Barba.Dispatcher\r\n     * @param  {String} eventName\r\n     * @param  {Function} function\r\n     */\n\t\t\t\toff: function off(e, f) {\n\t\t\t\t\tif (e in this.events === false) return;\n\n\t\t\t\t\tthis.events[e].splice(this.events[e].indexOf(f), 1);\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Fire the event running all the event associated to it\r\n     *\r\n     * @memberOf Barba.Dispatcher\r\n     * @param  {String} eventName\r\n     * @param  {...*} args\r\n     */\n\t\t\t\ttrigger: function trigger(e) {\n\t\t\t\t\t//e, ...args\n\t\t\t\t\tif (e in this.events === false) return;\n\n\t\t\t\t\tfor (var i = 0; i < this.events[e].length; i++) {\n\t\t\t\t\t\tthis.events[e][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmodule.exports = Dispatcher;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 8 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\tvar Utils = __webpack_require__(5);\n\n\t\t\t/**\r\n    * BaseCache it's a simple static cache\r\n    *\r\n    * @namespace Barba.BaseCache\r\n    * @type {Object}\r\n    */\n\t\t\tvar BaseCache = {\n\t\t\t\t/**\r\n     * The Object that keeps all the key value information\r\n     *\r\n     * @memberOf Barba.BaseCache\r\n     * @type {Object}\r\n     */\n\t\t\t\tdata: {},\n\n\t\t\t\t/**\r\n     * Helper to extend this object\r\n     *\r\n     * @memberOf Barba.BaseCache\r\n     * @private\r\n     * @param  {Object} newObject\r\n     * @return {Object} newInheritObject\r\n     */\n\t\t\t\textend: function extend(obj) {\n\t\t\t\t\treturn Utils.extend(this, obj);\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Set a key and value data, mainly Barba is going to save promises\r\n     *\r\n     * @memberOf Barba.BaseCache\r\n     * @param {String} key\r\n     * @param {*} value\r\n     */\n\t\t\t\tset: function set(key, val) {\n\t\t\t\t\tthis.data[key] = val;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Retrieve the data using the key\r\n     *\r\n     * @memberOf Barba.BaseCache\r\n     * @param  {String} key\r\n     * @return {*}\r\n     */\n\t\t\t\tget: function get(key) {\n\t\t\t\t\treturn this.data[key];\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Flush the cache\r\n     *\r\n     * @memberOf Barba.BaseCache\r\n     */\n\t\t\t\treset: function reset() {\n\t\t\t\t\tthis.data = {};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmodule.exports = BaseCache;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 9 */\n\t\t/***/function (module, exports) {\n\n\t\t\t/**\r\n    * HistoryManager helps to keep track of the navigation\r\n    *\r\n    * @namespace Barba.HistoryManager\r\n    * @type {Object}\r\n    */\n\t\t\tvar HistoryManager = {\n\t\t\t\t/**\r\n     * Keep track of the status in historic order\r\n     *\r\n     * @memberOf Barba.HistoryManager\r\n     * @readOnly\r\n     * @type {Array}\r\n     */\n\t\t\t\thistory: [],\n\n\t\t\t\t/**\r\n     * Add a new set of url and namespace\r\n     *\r\n     * @memberOf Barba.HistoryManager\r\n     * @param {String} url\r\n     * @param {String} namespace\r\n     * @private\r\n     */\n\t\t\t\tadd: function add(url, namespace) {\n\t\t\t\t\tif (!namespace) namespace = undefined;\n\n\t\t\t\t\tthis.history.push({\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\tnamespace: namespace\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Return information about the current status\r\n     *\r\n     * @memberOf Barba.HistoryManager\r\n     * @return {Object}\r\n     */\n\t\t\t\tcurrentStatus: function currentStatus() {\n\t\t\t\t\treturn this.history[this.history.length - 1];\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Return information about the previous status\r\n     *\r\n     * @memberOf Barba.HistoryManager\r\n     * @return {Object}\r\n     */\n\t\t\t\tprevStatus: function prevStatus() {\n\t\t\t\t\tvar history = this.history;\n\n\t\t\t\t\tif (history.length < 2) return null;\n\n\t\t\t\t\treturn history[history.length - 2];\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmodule.exports = HistoryManager;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 10 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\tvar Utils = __webpack_require__(5);\n\t\t\tvar Dispatcher = __webpack_require__(7);\n\t\t\tvar HideShowTransition = __webpack_require__(11);\n\t\t\tvar BaseCache = __webpack_require__(8);\n\n\t\t\tvar HistoryManager = __webpack_require__(9);\n\t\t\tvar Dom = __webpack_require__(12);\n\n\t\t\t/**\r\n    * Pjax is a static object with main function\r\n    *\r\n    * @namespace Barba.Pjax\r\n    * @borrows Dom as Dom\r\n    * @type {Object}\r\n    */\n\t\t\tvar Pjax = {\n\t\t\t\tDom: Dom,\n\t\t\t\tHistory: HistoryManager,\n\t\t\t\tCache: BaseCache,\n\n\t\t\t\t/**\r\n     * Indicate wether or not use the cache\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @type {Boolean}\r\n     * @default\r\n     */\n\t\t\t\tcacheEnabled: true,\n\n\t\t\t\t/**\r\n     * Indicate if there is an animation in progress\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @readOnly\r\n     * @type {Boolean}\r\n     */\n\t\t\t\ttransitionProgress: false,\n\n\t\t\t\t/**\r\n     * Class name used to ignore links\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @type {String}\r\n     * @default\r\n     */\n\t\t\t\tignoreClassLink: 'no-barba',\n\n\t\t\t\t/**\r\n     * Function to be called to start Pjax\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     */\n\t\t\t\tstart: function start() {\n\t\t\t\t\tthis.init();\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Init the events\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @private\r\n     */\n\t\t\t\tinit: function init() {\n\t\t\t\t\tvar container = this.Dom.getContainer();\n\t\t\t\t\tvar wrapper = this.Dom.getWrapper();\n\n\t\t\t\t\twrapper.setAttribute('aria-live', 'polite');\n\n\t\t\t\t\tthis.History.add(this.getCurrentUrl(), this.Dom.getNamespace(container));\n\n\t\t\t\t\t//Fire for the current view.\n\t\t\t\t\tDispatcher.trigger('initStateChange', this.History.currentStatus());\n\t\t\t\t\tDispatcher.trigger('newPageReady', this.History.currentStatus(), {}, container, this.Dom.currentHTML);\n\t\t\t\t\tDispatcher.trigger('transitionCompleted', this.History.currentStatus());\n\n\t\t\t\t\tthis.bindEvents();\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Attach the eventlisteners\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @private\r\n     */\n\t\t\t\tbindEvents: function bindEvents() {\n\t\t\t\t\tdocument.addEventListener('click', this.onLinkClick.bind(this));\n\n\t\t\t\t\twindow.addEventListener('popstate', this.onStateChange.bind(this));\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Return the currentURL cleaned\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @return {String} currentUrl\r\n     */\n\t\t\t\tgetCurrentUrl: function getCurrentUrl() {\n\t\t\t\t\treturn Utils.cleanLink(Utils.getCurrentUrl());\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Change the URL with pushstate and trigger the state change\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @param {String} newUrl\r\n     */\n\t\t\t\tgoTo: function goTo(url) {\n\t\t\t\t\twindow.history.pushState(null, null, url);\n\t\t\t\t\tthis.onStateChange();\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Force the browser to go to a certain url\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @param {String} url\r\n     * @private\r\n     */\n\t\t\t\tforceGoTo: function forceGoTo(url) {\n\t\t\t\t\twindow.location = url;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Load an url, will start an xhr request or load from the cache\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @private\r\n     * @param  {String} url\r\n     * @return {Promise}\r\n     */\n\t\t\t\tload: function load(url) {\n\t\t\t\t\tvar deferred = Utils.deferred();\n\t\t\t\t\tvar _this = this;\n\t\t\t\t\tvar xhr;\n\n\t\t\t\t\txhr = this.Cache.get(url);\n\n\t\t\t\t\tif (!xhr) {\n\t\t\t\t\t\txhr = Utils.xhr(url);\n\t\t\t\t\t\tthis.Cache.set(url, xhr);\n\t\t\t\t\t}\n\n\t\t\t\t\txhr.then(function (data) {\n\t\t\t\t\t\tvar container = _this.Dom.parseResponse(data);\n\n\t\t\t\t\t\t_this.Dom.putContainer(container);\n\n\t\t\t\t\t\tif (!_this.cacheEnabled) _this.Cache.reset();\n\n\t\t\t\t\t\tdeferred.resolve(container);\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\t//Something went wrong (timeout, 404, 505...)\n\t\t\t\t\t\t_this.forceGoTo(url);\n\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t});\n\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Get the .href parameter out of an element\r\n     * and handle special cases (like xlink:href)\r\n     *\r\n     * @private\r\n     * @memberOf Barba.Pjax\r\n     * @param  {HTMLElement} el\r\n     * @return {String} href\r\n     */\n\t\t\t\tgetHref: function getHref(el) {\n\t\t\t\t\tif (!el) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (el.getAttribute && typeof el.getAttribute('xlink:href') === 'string') {\n\t\t\t\t\t\treturn el.getAttribute('xlink:href');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof el.href === 'string') {\n\t\t\t\t\t\treturn el.href;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Callback called from click event\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @private\r\n     * @param {MouseEvent} evt\r\n     */\n\t\t\t\tonLinkClick: function onLinkClick(evt) {\n\t\t\t\t\tvar el = evt.target;\n\n\t\t\t\t\t//Go up in the nodelist until we\n\t\t\t\t\t//find something with an href\n\t\t\t\t\twhile (el && !this.getHref(el)) {\n\t\t\t\t\t\tel = el.parentNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.preventCheck(evt, el)) {\n\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\tevt.preventDefault();\n\n\t\t\t\t\t\tDispatcher.trigger('linkClicked', el, evt);\n\n\t\t\t\t\t\tvar href = this.getHref(el);\n\t\t\t\t\t\tthis.goTo(href);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Determine if the link should be followed\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @param  {MouseEvent} evt\r\n     * @param  {HTMLElement} element\r\n     * @return {Boolean}\r\n     */\n\t\t\t\tpreventCheck: function preventCheck(evt, element) {\n\t\t\t\t\tif (!window.history.pushState) return false;\n\n\t\t\t\t\tvar href = this.getHref(element);\n\n\t\t\t\t\t//User\n\t\t\t\t\tif (!element || !href) return false;\n\n\t\t\t\t\t//Middle click, cmd click, and ctrl click\n\t\t\t\t\tif (evt.which > 1 || evt.metaKey || evt.ctrlKey || evt.shiftKey || evt.altKey) return false;\n\n\t\t\t\t\t//Ignore target with _blank target\n\t\t\t\t\tif (element.target && element.target === '_blank') return false;\n\n\t\t\t\t\t//Check if it's the same domain\n\t\t\t\t\tif (window.location.protocol !== element.protocol || window.location.hostname !== element.hostname) return false;\n\n\t\t\t\t\t//Check if the port is the same\n\t\t\t\t\tif (Utils.getPort() !== Utils.getPort(element.port)) return false;\n\n\t\t\t\t\t//Ignore case when a hash is being tacked on the current URL\n\t\t\t\t\tif (href.indexOf('#') > -1) return false;\n\n\t\t\t\t\t//Ignore case where there is download attribute\n\t\t\t\t\tif (element.getAttribute && typeof element.getAttribute('download') === 'string') return false;\n\n\t\t\t\t\t//In case you're trying to load the same page\n\t\t\t\t\tif (Utils.cleanLink(href) == Utils.cleanLink(location.href)) return false;\n\n\t\t\t\t\tif (element.classList.contains(this.ignoreClassLink)) return false;\n\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Return a transition object\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @return {Barba.Transition} Transition object\r\n     */\n\t\t\t\tgetTransition: function getTransition() {\n\t\t\t\t\t//User customizable\n\t\t\t\t\treturn HideShowTransition;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Method called after a 'popstate' or from .goTo()\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @private\r\n     */\n\t\t\t\tonStateChange: function onStateChange() {\n\t\t\t\t\tvar newUrl = this.getCurrentUrl();\n\n\t\t\t\t\tif (this.transitionProgress) this.forceGoTo(newUrl);\n\n\t\t\t\t\tif (this.History.currentStatus().url === newUrl) return false;\n\n\t\t\t\t\tthis.History.add(newUrl);\n\n\t\t\t\t\tvar newContainer = this.load(newUrl);\n\t\t\t\t\tvar transition = Object.create(this.getTransition());\n\n\t\t\t\t\tthis.transitionProgress = true;\n\n\t\t\t\t\tDispatcher.trigger('initStateChange', this.History.currentStatus(), this.History.prevStatus());\n\n\t\t\t\t\tvar transitionInstance = transition.init(this.Dom.getContainer(), newContainer);\n\n\t\t\t\t\tnewContainer.then(this.onNewContainerLoaded.bind(this));\n\n\t\t\t\t\ttransitionInstance.then(this.onTransitionEnd.bind(this));\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Function called as soon the new container is ready\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @private\r\n     * @param {HTMLElement} container\r\n     */\n\t\t\t\tonNewContainerLoaded: function onNewContainerLoaded(container) {\n\t\t\t\t\tvar currentStatus = this.History.currentStatus();\n\t\t\t\t\tcurrentStatus.namespace = this.Dom.getNamespace(container);\n\n\t\t\t\t\tDispatcher.trigger('newPageReady', this.History.currentStatus(), this.History.prevStatus(), container, this.Dom.currentHTML);\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Function called as soon the transition is finished\r\n     *\r\n     * @memberOf Barba.Pjax\r\n     * @private\r\n     */\n\t\t\t\tonTransitionEnd: function onTransitionEnd() {\n\t\t\t\t\tthis.transitionProgress = false;\n\n\t\t\t\t\tDispatcher.trigger('transitionCompleted', this.History.currentStatus(), this.History.prevStatus());\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmodule.exports = Pjax;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 11 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\tvar BaseTransition = __webpack_require__(4);\n\n\t\t\t/**\r\n    * Basic Transition object, wait for the new Container to be ready,\r\n    * scroll top, and finish the transition (removing the old container and displaying the new one)\r\n    *\r\n    * @private\r\n    * @namespace Barba.HideShowTransition\r\n    * @augments Barba.BaseTransition\r\n    */\n\t\t\tvar HideShowTransition = BaseTransition.extend({\n\t\t\t\tstart: function start() {\n\t\t\t\t\tthis.newContainerLoading.then(this.finish.bind(this));\n\t\t\t\t},\n\n\t\t\t\tfinish: function finish() {\n\t\t\t\t\tdocument.body.scrollTop = 0;\n\t\t\t\t\tthis.done();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmodule.exports = HideShowTransition;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 12 */\n\t\t/***/function (module, exports) {\n\n\t\t\t/**\r\n    * Object that is going to deal with DOM parsing/manipulation\r\n    *\r\n    * @namespace Barba.Pjax.Dom\r\n    * @type {Object}\r\n    */\n\t\t\tvar Dom = {\n\t\t\t\t/**\r\n     * The name of the data attribute on the container\r\n     *\r\n     * @memberOf Barba.Pjax.Dom\r\n     * @type {String}\r\n     * @default\r\n     */\n\t\t\t\tdataNamespace: 'namespace',\n\n\t\t\t\t/**\r\n     * Id of the main wrapper\r\n     *\r\n     * @memberOf Barba.Pjax.Dom\r\n     * @type {String}\r\n     * @default\r\n     */\n\t\t\t\twrapperId: 'barba-wrapper',\n\n\t\t\t\t/**\r\n     * Class name used to identify the containers\r\n     *\r\n     * @memberOf Barba.Pjax.Dom\r\n     * @type {String}\r\n     * @default\r\n     */\n\t\t\t\tcontainerClass: 'barba-container',\n\n\t\t\t\t/**\r\n     * Full HTML String of the current page.\r\n     * By default is the innerHTML of the initial loaded page.\r\n     *\r\n     * Each time a new page is loaded, the value is the response of the xhr call.\r\n     *\r\n     * @memberOf Barba.Pjax.Dom\r\n     * @type {String}\r\n     */\n\t\t\t\tcurrentHTML: document.documentElement.innerHTML,\n\n\t\t\t\t/**\r\n     * Parse the responseText obtained from the xhr call\r\n     *\r\n     * @memberOf Barba.Pjax.Dom\r\n     * @private\r\n     * @param  {String} responseText\r\n     * @return {HTMLElement}\r\n     */\n\t\t\t\tparseResponse: function parseResponse(responseText) {\n\t\t\t\t\tthis.currentHTML = responseText;\n\n\t\t\t\t\tvar wrapper = document.createElement('div');\n\t\t\t\t\twrapper.innerHTML = responseText;\n\n\t\t\t\t\tvar titleEl = wrapper.querySelector('title');\n\n\t\t\t\t\tif (titleEl) document.title = titleEl.textContent;\n\n\t\t\t\t\treturn this.getContainer(wrapper);\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Get the main barba wrapper by the ID `wrapperId`\r\n     *\r\n     * @memberOf Barba.Pjax.Dom\r\n     * @return {HTMLElement} element\r\n     */\n\t\t\t\tgetWrapper: function getWrapper() {\n\t\t\t\t\tvar wrapper = document.getElementById(this.wrapperId);\n\n\t\t\t\t\tif (!wrapper) throw new Error('Barba.js: wrapper not found!');\n\n\t\t\t\t\treturn wrapper;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Get the container on the current DOM,\r\n     * or from an HTMLElement passed via argument\r\n     *\r\n     * @memberOf Barba.Pjax.Dom\r\n     * @private\r\n     * @param  {HTMLElement} element\r\n     * @return {HTMLElement}\r\n     */\n\t\t\t\tgetContainer: function getContainer(element) {\n\t\t\t\t\tif (!element) element = document.body;\n\n\t\t\t\t\tif (!element) throw new Error('Barba.js: DOM not ready!');\n\n\t\t\t\t\tvar container = this.parseContainer(element);\n\n\t\t\t\t\tif (container && container.jquery) container = container[0];\n\n\t\t\t\t\tif (!container) throw new Error('Barba.js: no container found');\n\n\t\t\t\t\treturn container;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Get the namespace of the container\r\n     *\r\n     * @memberOf Barba.Pjax.Dom\r\n     * @private\r\n     * @param  {HTMLElement} element\r\n     * @return {String}\r\n     */\n\t\t\t\tgetNamespace: function getNamespace(element) {\n\t\t\t\t\tif (element && element.dataset) {\n\t\t\t\t\t\treturn element.dataset[this.dataNamespace];\n\t\t\t\t\t} else if (element) {\n\t\t\t\t\t\treturn element.getAttribute('data-' + this.dataNamespace);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Put the container on the page\r\n     *\r\n     * @memberOf Barba.Pjax.Dom\r\n     * @private\r\n     * @param  {HTMLElement} element\r\n     */\n\t\t\t\tputContainer: function putContainer(element) {\n\t\t\t\t\telement.style.visibility = 'hidden';\n\n\t\t\t\t\tvar wrapper = this.getWrapper();\n\t\t\t\t\twrapper.appendChild(element);\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Get container selector\r\n     *\r\n     * @memberOf Barba.Pjax.Dom\r\n     * @private\r\n     * @param  {HTMLElement} element\r\n     * @return {HTMLElement} element\r\n     */\n\t\t\t\tparseContainer: function parseContainer(element) {\n\t\t\t\t\treturn element.querySelector('.' + this.containerClass);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmodule.exports = Dom;\n\n\t\t\t/***/\n\t\t},\n\t\t/* 13 */\n\t\t/***/function (module, exports, __webpack_require__) {\n\n\t\t\tvar Utils = __webpack_require__(5);\n\t\t\tvar Pjax = __webpack_require__(10);\n\n\t\t\t/**\r\n    * Prefetch\r\n    *\r\n    * @namespace Barba.Prefetch\r\n    * @type {Object}\r\n    */\n\t\t\tvar Prefetch = {\n\t\t\t\t/**\r\n     * Class name used to ignore prefetch on links\r\n     *\r\n     * @memberOf Barba.Prefetch\r\n     * @type {String}\r\n     * @default\r\n     */\n\t\t\t\tignoreClassLink: 'no-barba-prefetch',\n\n\t\t\t\t/**\r\n     * Init the event listener on mouseover and touchstart\r\n     * for the prefetch\r\n     *\r\n     * @memberOf Barba.Prefetch\r\n     */\n\t\t\t\tinit: function init() {\n\t\t\t\t\tif (!window.history.pushState) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tdocument.body.addEventListener('mouseover', this.onLinkEnter.bind(this));\n\t\t\t\t\tdocument.body.addEventListener('touchstart', this.onLinkEnter.bind(this));\n\t\t\t\t},\n\n\t\t\t\t/**\r\n     * Callback for the mousehover/touchstart\r\n     *\r\n     * @memberOf Barba.Prefetch\r\n     * @private\r\n     * @param  {Object} evt\r\n     */\n\t\t\t\tonLinkEnter: function onLinkEnter(evt) {\n\t\t\t\t\tvar el = evt.target;\n\n\t\t\t\t\twhile (el && !Pjax.getHref(el)) {\n\t\t\t\t\t\tel = el.parentNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!el || el.classList.contains(this.ignoreClassLink)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar url = Pjax.getHref(el);\n\n\t\t\t\t\t//Check if the link is elegible for Pjax\n\t\t\t\t\tif (Pjax.preventCheck(evt, el) && !Pjax.Cache.get(url)) {\n\t\t\t\t\t\tvar xhr = Utils.xhr(url);\n\t\t\t\t\t\tPjax.Cache.set(url, xhr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tmodule.exports = Prefetch;\n\n\t\t\t/***/\n\t\t}\n\t\t/******/])\n\t);\n});\n;\n//# sourceMappingURL=barba.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./assets/js/lib/barba.js?");

/***/ }),

/***/ "./assets/js/lib/bootstrap.bundle.js":
/*!*******************************************!*\
  !*** ./assets/js/lib/bootstrap.bundle.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\r\n  * Bootstrap v4.1.3 (https://getbootstrap.com/)\r\n  * Copyright 2011-2018 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\r\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n  */\n(function (global, factory) {\n  ( false ? undefined : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports, __webpack_require__(/*! jquery */ \"jquery\")) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! jquery */ \"jquery\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n})(undefined, function (exports, $) {\n  'use strict';\n\n  $ = $ && $.hasOwnProperty('default') ? $['default'] : $;\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n\n      ownKeys.forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    }\n\n    return target;\n  }\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): util.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var Util = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Private TransitionEnd Helpers\r\n     * ------------------------------------------------------------------------\r\n     */\n    var TRANSITION_END = 'transitionend';\n    var MAX_UID = 1000000;\n    var MILLISECONDS_MULTIPLIER = 1000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)\n\n    function toType(obj) {\n      return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase();\n    }\n\n    function getSpecialTransitionEndEvent() {\n      return {\n        bindType: TRANSITION_END,\n        delegateType: TRANSITION_END,\n        handle: function handle(event) {\n          if ($$$1(event.target).is(this)) {\n            return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\n          }\n\n          return undefined; // eslint-disable-line no-undefined\n        }\n      };\n    }\n\n    function transitionEndEmulator(duration) {\n      var _this = this;\n\n      var called = false;\n      $$$1(this).one(Util.TRANSITION_END, function () {\n        called = true;\n      });\n      setTimeout(function () {\n        if (!called) {\n          Util.triggerTransitionEnd(_this);\n        }\n      }, duration);\n      return this;\n    }\n\n    function setTransitionEndSupport() {\n      $$$1.fn.emulateTransitionEnd = transitionEndEmulator;\n      $$$1.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n    }\n    /**\r\n     * --------------------------------------------------------------------------\r\n     * Public Util Api\r\n     * --------------------------------------------------------------------------\r\n     */\n\n    var Util = {\n      TRANSITION_END: 'bsTransitionEnd',\n      getUID: function getUID(prefix) {\n        do {\n          // eslint-disable-next-line no-bitwise\n          prefix += ~~(Math.random() * MAX_UID); // \"~~\" acts like a faster Math.floor() here\n        } while (document.getElementById(prefix));\n\n        return prefix;\n      },\n      getSelectorFromElement: function getSelectorFromElement(element) {\n        var selector = element.getAttribute('data-target');\n\n        if (!selector || selector === '#') {\n          selector = element.getAttribute('href') || '';\n        }\n\n        try {\n          return document.querySelector(selector) ? selector : null;\n        } catch (err) {\n          return null;\n        }\n      },\n      getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {\n        if (!element) {\n          return 0;\n        } // Get transition-duration of the element\n\n\n        var transitionDuration = $$$1(element).css('transition-duration');\n        var floatTransitionDuration = parseFloat(transitionDuration); // Return 0 if element or transition duration is not found\n\n        if (!floatTransitionDuration) {\n          return 0;\n        } // If multiple durations are defined, take the first\n\n\n        transitionDuration = transitionDuration.split(',')[0];\n        return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER;\n      },\n      reflow: function reflow(element) {\n        return element.offsetHeight;\n      },\n      triggerTransitionEnd: function triggerTransitionEnd(element) {\n        $$$1(element).trigger(TRANSITION_END);\n      },\n      // TODO: Remove in v5\n      supportsTransitionEnd: function supportsTransitionEnd() {\n        return Boolean(TRANSITION_END);\n      },\n      isElement: function isElement(obj) {\n        return (obj[0] || obj).nodeType;\n      },\n      typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\n        for (var property in configTypes) {\n          if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n            var expectedTypes = configTypes[property];\n            var value = config[property];\n            var valueType = value && Util.isElement(value) ? 'element' : toType(value);\n\n            if (!new RegExp(expectedTypes).test(valueType)) {\n              throw new Error(componentName.toUpperCase() + \": \" + (\"Option \\\"\" + property + \"\\\" provided type \\\"\" + valueType + \"\\\" \") + (\"but expected type \\\"\" + expectedTypes + \"\\\".\"));\n            }\n          }\n        }\n      }\n    };\n    setTransitionEndSupport();\n    return Util;\n  }($);\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): alert.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var Alert = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Constants\r\n     * ------------------------------------------------------------------------\r\n     */\n    var NAME = 'alert';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.alert';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var Selector = {\n      DISMISS: '[data-dismiss=\"alert\"]'\n    };\n    var Event = {\n      CLOSE: \"close\" + EVENT_KEY,\n      CLOSED: \"closed\" + EVENT_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      ALERT: 'alert',\n      FADE: 'fade',\n      SHOW: 'show'\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * Class Definition\r\n       * ------------------------------------------------------------------------\r\n       */\n\n    };\n\n    var Alert =\n    /*#__PURE__*/\n    function () {\n      function Alert(element) {\n        this._element = element;\n      } // Getters\n\n\n      var _proto = Alert.prototype;\n\n      // Public\n      _proto.close = function close(element) {\n        var rootElement = this._element;\n\n        if (element) {\n          rootElement = this._getRootElement(element);\n        }\n\n        var customEvent = this._triggerCloseEvent(rootElement);\n\n        if (customEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        this._removeElement(rootElement);\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        this._element = null;\n      }; // Private\n\n\n      _proto._getRootElement = function _getRootElement(element) {\n        var selector = Util.getSelectorFromElement(element);\n        var parent = false;\n\n        if (selector) {\n          parent = document.querySelector(selector);\n        }\n\n        if (!parent) {\n          parent = $$$1(element).closest(\".\" + ClassName.ALERT)[0];\n        }\n\n        return parent;\n      };\n\n      _proto._triggerCloseEvent = function _triggerCloseEvent(element) {\n        var closeEvent = $$$1.Event(Event.CLOSE);\n        $$$1(element).trigger(closeEvent);\n        return closeEvent;\n      };\n\n      _proto._removeElement = function _removeElement(element) {\n        var _this = this;\n\n        $$$1(element).removeClass(ClassName.SHOW);\n\n        if (!$$$1(element).hasClass(ClassName.FADE)) {\n          this._destroyElement(element);\n\n          return;\n        }\n\n        var transitionDuration = Util.getTransitionDurationFromElement(element);\n        $$$1(element).one(Util.TRANSITION_END, function (event) {\n          return _this._destroyElement(element, event);\n        }).emulateTransitionEnd(transitionDuration);\n      };\n\n      _proto._destroyElement = function _destroyElement(element) {\n        $$$1(element).detach().trigger(Event.CLOSED).remove();\n      }; // Static\n\n\n      Alert._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var $element = $$$1(this);\n          var data = $element.data(DATA_KEY);\n\n          if (!data) {\n            data = new Alert(this);\n            $element.data(DATA_KEY, data);\n          }\n\n          if (config === 'close') {\n            data[config](this);\n          }\n        });\n      };\n\n      Alert._handleDismiss = function _handleDismiss(alertInstance) {\n        return function (event) {\n          if (event) {\n            event.preventDefault();\n          }\n\n          alertInstance.close(this);\n        };\n      };\n\n      _createClass(Alert, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }]);\n\n      return Alert;\n    }();\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Data Api implementation\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * jQuery\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1.fn[NAME] = Alert._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Alert;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Alert._jQueryInterface;\n    };\n\n    return Alert;\n  }($);\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): button.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var Button = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Constants\r\n     * ------------------------------------------------------------------------\r\n     */\n    var NAME = 'button';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.button';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var ClassName = {\n      ACTIVE: 'active',\n      BUTTON: 'btn',\n      FOCUS: 'focus'\n    };\n    var Selector = {\n      DATA_TOGGLE_CARROT: '[data-toggle^=\"button\"]',\n      DATA_TOGGLE: '[data-toggle=\"buttons\"]',\n      INPUT: 'input',\n      ACTIVE: '.active',\n      BUTTON: '.btn'\n    };\n    var Event = {\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY,\n      FOCUS_BLUR_DATA_API: \"focus\" + EVENT_KEY + DATA_API_KEY + \" \" + (\"blur\" + EVENT_KEY + DATA_API_KEY)\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * Class Definition\r\n       * ------------------------------------------------------------------------\r\n       */\n\n    };\n\n    var Button =\n    /*#__PURE__*/\n    function () {\n      function Button(element) {\n        this._element = element;\n      } // Getters\n\n\n      var _proto = Button.prototype;\n\n      // Public\n      _proto.toggle = function toggle() {\n        var triggerChangeEvent = true;\n        var addAriaPressed = true;\n        var rootElement = $$$1(this._element).closest(Selector.DATA_TOGGLE)[0];\n\n        if (rootElement) {\n          var input = this._element.querySelector(Selector.INPUT);\n\n          if (input) {\n            if (input.type === 'radio') {\n              if (input.checked && this._element.classList.contains(ClassName.ACTIVE)) {\n                triggerChangeEvent = false;\n              } else {\n                var activeElement = rootElement.querySelector(Selector.ACTIVE);\n\n                if (activeElement) {\n                  $$$1(activeElement).removeClass(ClassName.ACTIVE);\n                }\n              }\n            }\n\n            if (triggerChangeEvent) {\n              if (input.hasAttribute('disabled') || rootElement.hasAttribute('disabled') || input.classList.contains('disabled') || rootElement.classList.contains('disabled')) {\n                return;\n              }\n\n              input.checked = !this._element.classList.contains(ClassName.ACTIVE);\n              $$$1(input).trigger('change');\n            }\n\n            input.focus();\n            addAriaPressed = false;\n          }\n        }\n\n        if (addAriaPressed) {\n          this._element.setAttribute('aria-pressed', !this._element.classList.contains(ClassName.ACTIVE));\n        }\n\n        if (triggerChangeEvent) {\n          $$$1(this._element).toggleClass(ClassName.ACTIVE);\n        }\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        this._element = null;\n      }; // Static\n\n\n      Button._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          if (!data) {\n            data = new Button(this);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (config === 'toggle') {\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(Button, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }]);\n\n      return Button;\n    }();\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Data Api implementation\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\n      event.preventDefault();\n      var button = event.target;\n\n      if (!$$$1(button).hasClass(ClassName.BUTTON)) {\n        button = $$$1(button).closest(Selector.BUTTON);\n      }\n\n      Button._jQueryInterface.call($$$1(button), 'toggle');\n    }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\n      var button = $$$1(event.target).closest(Selector.BUTTON)[0];\n      $$$1(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * jQuery\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1.fn[NAME] = Button._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Button;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Button._jQueryInterface;\n    };\n\n    return Button;\n  }($);\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): carousel.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var Carousel = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Constants\r\n     * ------------------------------------------------------------------------\r\n     */\n    var NAME = 'carousel';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.carousel';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key\n\n    var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key\n\n    var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\n\n    var Default = {\n      interval: 5000,\n      keyboard: true,\n      slide: false,\n      pause: 'hover',\n      wrap: true\n    };\n    var DefaultType = {\n      interval: '(number|boolean)',\n      keyboard: 'boolean',\n      slide: '(boolean|string)',\n      pause: '(string|boolean)',\n      wrap: 'boolean'\n    };\n    var Direction = {\n      NEXT: 'next',\n      PREV: 'prev',\n      LEFT: 'left',\n      RIGHT: 'right'\n    };\n    var Event = {\n      SLIDE: \"slide\" + EVENT_KEY,\n      SLID: \"slid\" + EVENT_KEY,\n      KEYDOWN: \"keydown\" + EVENT_KEY,\n      MOUSEENTER: \"mouseenter\" + EVENT_KEY,\n      MOUSELEAVE: \"mouseleave\" + EVENT_KEY,\n      TOUCHEND: \"touchend\" + EVENT_KEY,\n      LOAD_DATA_API: \"load\" + EVENT_KEY + DATA_API_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      CAROUSEL: 'carousel',\n      ACTIVE: 'active',\n      SLIDE: 'slide',\n      RIGHT: 'carousel-item-right',\n      LEFT: 'carousel-item-left',\n      NEXT: 'carousel-item-next',\n      PREV: 'carousel-item-prev',\n      ITEM: 'carousel-item'\n    };\n    var Selector = {\n      ACTIVE: '.active',\n      ACTIVE_ITEM: '.active.carousel-item',\n      ITEM: '.carousel-item',\n      NEXT_PREV: '.carousel-item-next, .carousel-item-prev',\n      INDICATORS: '.carousel-indicators',\n      DATA_SLIDE: '[data-slide], [data-slide-to]',\n      DATA_RIDE: '[data-ride=\"carousel\"]'\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * Class Definition\r\n       * ------------------------------------------------------------------------\r\n       */\n\n    };\n\n    var Carousel =\n    /*#__PURE__*/\n    function () {\n      function Carousel(element, config) {\n        this._items = null;\n        this._interval = null;\n        this._activeElement = null;\n        this._isPaused = false;\n        this._isSliding = false;\n        this.touchTimeout = null;\n        this._config = this._getConfig(config);\n        this._element = $$$1(element)[0];\n        this._indicatorsElement = this._element.querySelector(Selector.INDICATORS);\n\n        this._addEventListeners();\n      } // Getters\n\n\n      var _proto = Carousel.prototype;\n\n      // Public\n      _proto.next = function next() {\n        if (!this._isSliding) {\n          this._slide(Direction.NEXT);\n        }\n      };\n\n      _proto.nextWhenVisible = function nextWhenVisible() {\n        // Don't call next when the page isn't visible\n        // or the carousel or its parent isn't visible\n        if (!document.hidden && $$$1(this._element).is(':visible') && $$$1(this._element).css('visibility') !== 'hidden') {\n          this.next();\n        }\n      };\n\n      _proto.prev = function prev() {\n        if (!this._isSliding) {\n          this._slide(Direction.PREV);\n        }\n      };\n\n      _proto.pause = function pause(event) {\n        if (!event) {\n          this._isPaused = true;\n        }\n\n        if (this._element.querySelector(Selector.NEXT_PREV)) {\n          Util.triggerTransitionEnd(this._element);\n          this.cycle(true);\n        }\n\n        clearInterval(this._interval);\n        this._interval = null;\n      };\n\n      _proto.cycle = function cycle(event) {\n        if (!event) {\n          this._isPaused = false;\n        }\n\n        if (this._interval) {\n          clearInterval(this._interval);\n          this._interval = null;\n        }\n\n        if (this._config.interval && !this._isPaused) {\n          this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\n        }\n      };\n\n      _proto.to = function to(index) {\n        var _this = this;\n\n        this._activeElement = this._element.querySelector(Selector.ACTIVE_ITEM);\n\n        var activeIndex = this._getItemIndex(this._activeElement);\n\n        if (index > this._items.length - 1 || index < 0) {\n          return;\n        }\n\n        if (this._isSliding) {\n          $$$1(this._element).one(Event.SLID, function () {\n            return _this.to(index);\n          });\n          return;\n        }\n\n        if (activeIndex === index) {\n          this.pause();\n          this.cycle();\n          return;\n        }\n\n        var direction = index > activeIndex ? Direction.NEXT : Direction.PREV;\n\n        this._slide(direction, this._items[index]);\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1(this._element).off(EVENT_KEY);\n        $$$1.removeData(this._element, DATA_KEY);\n        this._items = null;\n        this._config = null;\n        this._element = null;\n        this._interval = null;\n        this._isPaused = null;\n        this._isSliding = null;\n        this._activeElement = null;\n        this._indicatorsElement = null;\n      }; // Private\n\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, Default, config);\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      };\n\n      _proto._addEventListeners = function _addEventListeners() {\n        var _this2 = this;\n\n        if (this._config.keyboard) {\n          $$$1(this._element).on(Event.KEYDOWN, function (event) {\n            return _this2._keydown(event);\n          });\n        }\n\n        if (this._config.pause === 'hover') {\n          $$$1(this._element).on(Event.MOUSEENTER, function (event) {\n            return _this2.pause(event);\n          }).on(Event.MOUSELEAVE, function (event) {\n            return _this2.cycle(event);\n          });\n\n          if ('ontouchstart' in document.documentElement) {\n            // If it's a touch-enabled device, mouseenter/leave are fired as\n            // part of the mouse compatibility events on first tap - the carousel\n            // would stop cycling until user tapped out of it;\n            // here, we listen for touchend, explicitly pause the carousel\n            // (as if it's the second time we tap on it, mouseenter compat event\n            // is NOT fired) and after a timeout (to allow for mouse compatibility\n            // events to fire) we explicitly restart cycling\n            $$$1(this._element).on(Event.TOUCHEND, function () {\n              _this2.pause();\n\n              if (_this2.touchTimeout) {\n                clearTimeout(_this2.touchTimeout);\n              }\n\n              _this2.touchTimeout = setTimeout(function (event) {\n                return _this2.cycle(event);\n              }, TOUCHEVENT_COMPAT_WAIT + _this2._config.interval);\n            });\n          }\n        }\n      };\n\n      _proto._keydown = function _keydown(event) {\n        if (/input|textarea/i.test(event.target.tagName)) {\n          return;\n        }\n\n        switch (event.which) {\n          case ARROW_LEFT_KEYCODE:\n            event.preventDefault();\n            this.prev();\n            break;\n\n          case ARROW_RIGHT_KEYCODE:\n            event.preventDefault();\n            this.next();\n            break;\n\n          default:\n        }\n      };\n\n      _proto._getItemIndex = function _getItemIndex(element) {\n        this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(Selector.ITEM)) : [];\n        return this._items.indexOf(element);\n      };\n\n      _proto._getItemByDirection = function _getItemByDirection(direction, activeElement) {\n        var isNextDirection = direction === Direction.NEXT;\n        var isPrevDirection = direction === Direction.PREV;\n\n        var activeIndex = this._getItemIndex(activeElement);\n\n        var lastItemIndex = this._items.length - 1;\n        var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\n\n        if (isGoingToWrap && !this._config.wrap) {\n          return activeElement;\n        }\n\n        var delta = direction === Direction.PREV ? -1 : 1;\n        var itemIndex = (activeIndex + delta) % this._items.length;\n        return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\n      };\n\n      _proto._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {\n        var targetIndex = this._getItemIndex(relatedTarget);\n\n        var fromIndex = this._getItemIndex(this._element.querySelector(Selector.ACTIVE_ITEM));\n\n        var slideEvent = $$$1.Event(Event.SLIDE, {\n          relatedTarget: relatedTarget,\n          direction: eventDirectionName,\n          from: fromIndex,\n          to: targetIndex\n        });\n        $$$1(this._element).trigger(slideEvent);\n        return slideEvent;\n      };\n\n      _proto._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {\n        if (this._indicatorsElement) {\n          var indicators = [].slice.call(this._indicatorsElement.querySelectorAll(Selector.ACTIVE));\n          $$$1(indicators).removeClass(ClassName.ACTIVE);\n\n          var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\n\n          if (nextIndicator) {\n            $$$1(nextIndicator).addClass(ClassName.ACTIVE);\n          }\n        }\n      };\n\n      _proto._slide = function _slide(direction, element) {\n        var _this3 = this;\n\n        var activeElement = this._element.querySelector(Selector.ACTIVE_ITEM);\n\n        var activeElementIndex = this._getItemIndex(activeElement);\n\n        var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\n\n        var nextElementIndex = this._getItemIndex(nextElement);\n\n        var isCycling = Boolean(this._interval);\n        var directionalClassName;\n        var orderClassName;\n        var eventDirectionName;\n\n        if (direction === Direction.NEXT) {\n          directionalClassName = ClassName.LEFT;\n          orderClassName = ClassName.NEXT;\n          eventDirectionName = Direction.LEFT;\n        } else {\n          directionalClassName = ClassName.RIGHT;\n          orderClassName = ClassName.PREV;\n          eventDirectionName = Direction.RIGHT;\n        }\n\n        if (nextElement && $$$1(nextElement).hasClass(ClassName.ACTIVE)) {\n          this._isSliding = false;\n          return;\n        }\n\n        var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\n\n        if (slideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        if (!activeElement || !nextElement) {\n          // Some weirdness is happening, so we bail\n          return;\n        }\n\n        this._isSliding = true;\n\n        if (isCycling) {\n          this.pause();\n        }\n\n        this._setActiveIndicatorElement(nextElement);\n\n        var slidEvent = $$$1.Event(Event.SLID, {\n          relatedTarget: nextElement,\n          direction: eventDirectionName,\n          from: activeElementIndex,\n          to: nextElementIndex\n        });\n\n        if ($$$1(this._element).hasClass(ClassName.SLIDE)) {\n          $$$1(nextElement).addClass(orderClassName);\n          Util.reflow(nextElement);\n          $$$1(activeElement).addClass(directionalClassName);\n          $$$1(nextElement).addClass(directionalClassName);\n          var transitionDuration = Util.getTransitionDurationFromElement(activeElement);\n          $$$1(activeElement).one(Util.TRANSITION_END, function () {\n            $$$1(nextElement).removeClass(directionalClassName + \" \" + orderClassName).addClass(ClassName.ACTIVE);\n            $$$1(activeElement).removeClass(ClassName.ACTIVE + \" \" + orderClassName + \" \" + directionalClassName);\n            _this3._isSliding = false;\n            setTimeout(function () {\n              return $$$1(_this3._element).trigger(slidEvent);\n            }, 0);\n          }).emulateTransitionEnd(transitionDuration);\n        } else {\n          $$$1(activeElement).removeClass(ClassName.ACTIVE);\n          $$$1(nextElement).addClass(ClassName.ACTIVE);\n          this._isSliding = false;\n          $$$1(this._element).trigger(slidEvent);\n        }\n\n        if (isCycling) {\n          this.cycle();\n        }\n      }; // Static\n\n\n      Carousel._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = _objectSpread({}, Default, $$$1(this).data());\n\n          if ((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') {\n            _config = _objectSpread({}, _config, config);\n          }\n\n          var action = typeof config === 'string' ? config : _config.slide;\n\n          if (!data) {\n            data = new Carousel(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'number') {\n            data.to(config);\n          } else if (typeof action === 'string') {\n            if (typeof data[action] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + action + \"\\\"\");\n            }\n\n            data[action]();\n          } else if (_config.interval) {\n            data.pause();\n            data.cycle();\n          }\n        });\n      };\n\n      Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {\n        var selector = Util.getSelectorFromElement(this);\n\n        if (!selector) {\n          return;\n        }\n\n        var target = $$$1(selector)[0];\n\n        if (!target || !$$$1(target).hasClass(ClassName.CAROUSEL)) {\n          return;\n        }\n\n        var config = _objectSpread({}, $$$1(target).data(), $$$1(this).data());\n\n        var slideIndex = this.getAttribute('data-slide-to');\n\n        if (slideIndex) {\n          config.interval = false;\n        }\n\n        Carousel._jQueryInterface.call($$$1(target), config);\n\n        if (slideIndex) {\n          $$$1(target).data(DATA_KEY).to(slideIndex);\n        }\n\n        event.preventDefault();\n      };\n\n      _createClass(Carousel, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return Carousel;\n    }();\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Data Api implementation\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);\n    $$$1(window).on(Event.LOAD_DATA_API, function () {\n      var carousels = [].slice.call(document.querySelectorAll(Selector.DATA_RIDE));\n\n      for (var i = 0, len = carousels.length; i < len; i++) {\n        var $carousel = $$$1(carousels[i]);\n\n        Carousel._jQueryInterface.call($carousel, $carousel.data());\n      }\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * jQuery\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1.fn[NAME] = Carousel._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Carousel;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Carousel._jQueryInterface;\n    };\n\n    return Carousel;\n  }($);\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): collapse.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var Collapse = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Constants\r\n     * ------------------------------------------------------------------------\r\n     */\n    var NAME = 'collapse';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.collapse';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var Default = {\n      toggle: true,\n      parent: ''\n    };\n    var DefaultType = {\n      toggle: 'boolean',\n      parent: '(string|element)'\n    };\n    var Event = {\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      SHOW: 'show',\n      COLLAPSE: 'collapse',\n      COLLAPSING: 'collapsing',\n      COLLAPSED: 'collapsed'\n    };\n    var Dimension = {\n      WIDTH: 'width',\n      HEIGHT: 'height'\n    };\n    var Selector = {\n      ACTIVES: '.show, .collapsing',\n      DATA_TOGGLE: '[data-toggle=\"collapse\"]'\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * Class Definition\r\n       * ------------------------------------------------------------------------\r\n       */\n\n    };\n\n    var Collapse =\n    /*#__PURE__*/\n    function () {\n      function Collapse(element, config) {\n        this._isTransitioning = false;\n        this._element = element;\n        this._config = this._getConfig(config);\n        this._triggerArray = $$$1.makeArray(document.querySelectorAll(\"[data-toggle=\\\"collapse\\\"][href=\\\"#\" + element.id + \"\\\"],\" + (\"[data-toggle=\\\"collapse\\\"][data-target=\\\"#\" + element.id + \"\\\"]\")));\n        var toggleList = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE));\n\n        for (var i = 0, len = toggleList.length; i < len; i++) {\n          var elem = toggleList[i];\n          var selector = Util.getSelectorFromElement(elem);\n          var filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {\n            return foundElem === element;\n          });\n\n          if (selector !== null && filterElement.length > 0) {\n            this._selector = selector;\n\n            this._triggerArray.push(elem);\n          }\n        }\n\n        this._parent = this._config.parent ? this._getParent() : null;\n\n        if (!this._config.parent) {\n          this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n        }\n\n        if (this._config.toggle) {\n          this.toggle();\n        }\n      } // Getters\n\n\n      var _proto = Collapse.prototype;\n\n      // Public\n      _proto.toggle = function toggle() {\n        if ($$$1(this._element).hasClass(ClassName.SHOW)) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      };\n\n      _proto.show = function show() {\n        var _this = this;\n\n        if (this._isTransitioning || $$$1(this._element).hasClass(ClassName.SHOW)) {\n          return;\n        }\n\n        var actives;\n        var activesData;\n\n        if (this._parent) {\n          actives = [].slice.call(this._parent.querySelectorAll(Selector.ACTIVES)).filter(function (elem) {\n            return elem.getAttribute('data-parent') === _this._config.parent;\n          });\n\n          if (actives.length === 0) {\n            actives = null;\n          }\n        }\n\n        if (actives) {\n          activesData = $$$1(actives).not(this._selector).data(DATA_KEY);\n\n          if (activesData && activesData._isTransitioning) {\n            return;\n          }\n        }\n\n        var startEvent = $$$1.Event(Event.SHOW);\n        $$$1(this._element).trigger(startEvent);\n\n        if (startEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        if (actives) {\n          Collapse._jQueryInterface.call($$$1(actives).not(this._selector), 'hide');\n\n          if (!activesData) {\n            $$$1(actives).data(DATA_KEY, null);\n          }\n        }\n\n        var dimension = this._getDimension();\n\n        $$$1(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\n        this._element.style[dimension] = 0;\n\n        if (this._triggerArray.length) {\n          $$$1(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\n        }\n\n        this.setTransitioning(true);\n\n        var complete = function complete() {\n          $$$1(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);\n          _this._element.style[dimension] = '';\n\n          _this.setTransitioning(false);\n\n          $$$1(_this._element).trigger(Event.SHOWN);\n        };\n\n        var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n        var scrollSize = \"scroll\" + capitalizedDimension;\n        var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n        $$$1(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n        this._element.style[dimension] = this._element[scrollSize] + \"px\";\n      };\n\n      _proto.hide = function hide() {\n        var _this2 = this;\n\n        if (this._isTransitioning || !$$$1(this._element).hasClass(ClassName.SHOW)) {\n          return;\n        }\n\n        var startEvent = $$$1.Event(Event.HIDE);\n        $$$1(this._element).trigger(startEvent);\n\n        if (startEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        var dimension = this._getDimension();\n\n        this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + \"px\";\n        Util.reflow(this._element);\n        $$$1(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);\n        var triggerArrayLength = this._triggerArray.length;\n\n        if (triggerArrayLength > 0) {\n          for (var i = 0; i < triggerArrayLength; i++) {\n            var trigger = this._triggerArray[i];\n            var selector = Util.getSelectorFromElement(trigger);\n\n            if (selector !== null) {\n              var $elem = $$$1([].slice.call(document.querySelectorAll(selector)));\n\n              if (!$elem.hasClass(ClassName.SHOW)) {\n                $$$1(trigger).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\n              }\n            }\n          }\n        }\n\n        this.setTransitioning(true);\n\n        var complete = function complete() {\n          _this2.setTransitioning(false);\n\n          $$$1(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\n        };\n\n        this._element.style[dimension] = '';\n        var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n        $$$1(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      };\n\n      _proto.setTransitioning = function setTransitioning(isTransitioning) {\n        this._isTransitioning = isTransitioning;\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        this._config = null;\n        this._parent = null;\n        this._element = null;\n        this._triggerArray = null;\n        this._isTransitioning = null;\n      }; // Private\n\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, Default, config);\n        config.toggle = Boolean(config.toggle); // Coerce string values\n\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      };\n\n      _proto._getDimension = function _getDimension() {\n        var hasWidth = $$$1(this._element).hasClass(Dimension.WIDTH);\n        return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\n      };\n\n      _proto._getParent = function _getParent() {\n        var _this3 = this;\n\n        var parent = null;\n\n        if (Util.isElement(this._config.parent)) {\n          parent = this._config.parent; // It's a jQuery object\n\n          if (typeof this._config.parent.jquery !== 'undefined') {\n            parent = this._config.parent[0];\n          }\n        } else {\n          parent = document.querySelector(this._config.parent);\n        }\n\n        var selector = \"[data-toggle=\\\"collapse\\\"][data-parent=\\\"\" + this._config.parent + \"\\\"]\";\n        var children = [].slice.call(parent.querySelectorAll(selector));\n        $$$1(children).each(function (i, element) {\n          _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n        });\n        return parent;\n      };\n\n      _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {\n        if (element) {\n          var isOpen = $$$1(element).hasClass(ClassName.SHOW);\n\n          if (triggerArray.length) {\n            $$$1(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n          }\n        }\n      }; // Static\n\n\n      Collapse._getTargetFromElement = function _getTargetFromElement(element) {\n        var selector = Util.getSelectorFromElement(element);\n        return selector ? document.querySelector(selector) : null;\n      };\n\n      Collapse._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var $this = $$$1(this);\n          var data = $this.data(DATA_KEY);\n\n          var _config = _objectSpread({}, Default, $this.data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config ? config : {});\n\n          if (!data && _config.toggle && /show|hide/.test(config)) {\n            _config.toggle = false;\n          }\n\n          if (!data) {\n            data = new Collapse(this, _config);\n            $this.data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(Collapse, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return Collapse;\n    }();\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Data Api implementation\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n      if (event.currentTarget.tagName === 'A') {\n        event.preventDefault();\n      }\n\n      var $trigger = $$$1(this);\n      var selector = Util.getSelectorFromElement(this);\n      var selectors = [].slice.call(document.querySelectorAll(selector));\n      $$$1(selectors).each(function () {\n        var $target = $$$1(this);\n        var data = $target.data(DATA_KEY);\n        var config = data ? 'toggle' : $trigger.data();\n\n        Collapse._jQueryInterface.call($target, config);\n      });\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * jQuery\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1.fn[NAME] = Collapse._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Collapse;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Collapse._jQueryInterface;\n    };\n\n    return Collapse;\n  }($);\n\n  /**!\r\n   * @fileOverview Kickass library to create and place poppers near their reference elements.\r\n   * @version 1.14.3\r\n   * @license\r\n   * Copyright (c) 2016 Federico Zivolo and contributors\r\n   *\r\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n   * of this software and associated documentation files (the \"Software\"), to deal\r\n   * in the Software without restriction, including without limitation the rights\r\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n   * copies of the Software, and to permit persons to whom the Software is\r\n   * furnished to do so, subject to the following conditions:\r\n   *\r\n   * The above copyright notice and this permission notice shall be included in all\r\n   * copies or substantial portions of the Software.\r\n   *\r\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n   * SOFTWARE.\r\n   */\n  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  var timeoutDuration = 0;\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      timeoutDuration = 1;\n      break;\n    }\n  }\n\n  function microtaskDebounce(fn) {\n    var called = false;\n    return function () {\n      if (called) {\n        return;\n      }\n      called = true;\n      window.Promise.resolve().then(function () {\n        called = false;\n        fn();\n      });\n    };\n  }\n\n  function taskDebounce(fn) {\n    var scheduled = false;\n    return function () {\n      if (!scheduled) {\n        scheduled = true;\n        setTimeout(function () {\n          scheduled = false;\n          fn();\n        }, timeoutDuration);\n      }\n    };\n  }\n\n  var supportsMicroTasks = isBrowser && window.Promise;\n\n  /**\r\n  * Create a debounced version of a method, that's asynchronously deferred\r\n  * but called in the minimum time possible.\r\n  *\r\n  * @method\r\n  * @memberof Popper.Utils\r\n  * @argument {Function} fn\r\n  * @returns {Function}\r\n  */\n  var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n  /**\r\n   * Check if the given variable is a function\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Any} functionToCheck - variable to check\r\n   * @returns {Boolean} answer to: is a function?\r\n   */\n  function isFunction(functionToCheck) {\n    var getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n  }\n\n  /**\r\n   * Get CSS computed property of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Eement} element\r\n   * @argument {String} property\r\n   */\n  function getStyleComputedProperty(element, property) {\n    if (element.nodeType !== 1) {\n      return [];\n    }\n    // NOTE: 1 DOM access here\n    var css = getComputedStyle(element, null);\n    return property ? css[property] : css;\n  }\n\n  /**\r\n   * Returns the parentNode or the host of the element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} parent\r\n   */\n  function getParentNode(element) {\n    if (element.nodeName === 'HTML') {\n      return element;\n    }\n    return element.parentNode || element.host;\n  }\n\n  /**\r\n   * Returns the scrolling parent of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} scroll parent\r\n   */\n  function getScrollParent(element) {\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    if (!element) {\n      return document.body;\n    }\n\n    switch (element.nodeName) {\n      case 'HTML':\n      case 'BODY':\n        return element.ownerDocument.body;\n      case '#document':\n        return element.body;\n    }\n\n    // Firefox want us to check `-x` and `-y` variations as well\n\n    var _getStyleComputedProp = getStyleComputedProperty(element),\n        overflow = _getStyleComputedProp.overflow,\n        overflowX = _getStyleComputedProp.overflowX,\n        overflowY = _getStyleComputedProp.overflowY;\n\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n      return element;\n    }\n\n    return getScrollParent(getParentNode(element));\n  }\n\n  var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\n  var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n  /**\r\n   * Determines if the browser is Internet Explorer\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Number} version to check\r\n   * @returns {Boolean} isIE\r\n   */\n  function isIE(version) {\n    if (version === 11) {\n      return isIE11;\n    }\n    if (version === 10) {\n      return isIE10;\n    }\n    return isIE11 || isIE10;\n  }\n\n  /**\r\n   * Returns the offset parent of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} offset parent\r\n   */\n  function getOffsetParent(element) {\n    if (!element) {\n      return document.documentElement;\n    }\n\n    var noOffsetParent = isIE(10) ? document.body : null;\n\n    // NOTE: 1 DOM access here\n    var offsetParent = element.offsetParent;\n    // Skip hidden elements which don't have an offsetParent\n    while (offsetParent === noOffsetParent && element.nextElementSibling) {\n      offsetParent = (element = element.nextElementSibling).offsetParent;\n    }\n\n    var nodeName = offsetParent && offsetParent.nodeName;\n\n    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n      return element ? element.ownerDocument.documentElement : document.documentElement;\n    }\n\n    // .offsetParent will return the closest TD or TABLE in case\n    // no offsetParent is present, I hate this job...\n    if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n      return getOffsetParent(offsetParent);\n    }\n\n    return offsetParent;\n  }\n\n  function isOffsetContainer(element) {\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY') {\n      return false;\n    }\n    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n  }\n\n  /**\r\n   * Finds the root node (document, shadowDOM root) of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} node\r\n   * @returns {Element} root node\r\n   */\n  function getRoot(node) {\n    if (node.parentNode !== null) {\n      return getRoot(node.parentNode);\n    }\n\n    return node;\n  }\n\n  /**\r\n   * Finds the offset parent common to the two provided nodes\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element1\r\n   * @argument {Element} element2\r\n   * @returns {Element} common offset parent\r\n   */\n  function findCommonOffsetParent(element1, element2) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n      return document.documentElement;\n    }\n\n    // Here we make sure to give as \"start\" the element that comes first in the DOM\n    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n    var start = order ? element1 : element2;\n    var end = order ? element2 : element1;\n\n    // Get common ancestor container\n    var range = document.createRange();\n    range.setStart(start, 0);\n    range.setEnd(end, 0);\n    var commonAncestorContainer = range.commonAncestorContainer;\n\n    // Both nodes are inside #document\n\n    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n      if (isOffsetContainer(commonAncestorContainer)) {\n        return commonAncestorContainer;\n      }\n\n      return getOffsetParent(commonAncestorContainer);\n    }\n\n    // one of the nodes is inside shadowDOM, find which one\n    var element1root = getRoot(element1);\n    if (element1root.host) {\n      return findCommonOffsetParent(element1root.host, element2);\n    } else {\n      return findCommonOffsetParent(element1, getRoot(element2).host);\n    }\n  }\n\n  /**\r\n   * Gets the scroll value of the given element in the given side (top and left)\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @argument {String} side `top` or `left`\r\n   * @returns {number} amount of scrolled pixels\r\n   */\n  function getScroll(element) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n    var nodeName = element.nodeName;\n\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      var html = element.ownerDocument.documentElement;\n      var scrollingElement = element.ownerDocument.scrollingElement || html;\n      return scrollingElement[upperSide];\n    }\n\n    return element[upperSide];\n  }\n\n  /*\r\n   * Sum or subtract the element scroll values (left and top) from a given rect object\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Object} rect - Rect object you want to change\r\n   * @param {HTMLElement} element - The element from the function reads the scroll values\r\n   * @param {Boolean} subtract - set to true if you want to subtract the scroll values\r\n   * @return {Object} rect - The modifier rect object\r\n   */\n  function includeScroll(rect, element) {\n    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var scrollTop = getScroll(element, 'top');\n    var scrollLeft = getScroll(element, 'left');\n    var modifier = subtract ? -1 : 1;\n    rect.top += scrollTop * modifier;\n    rect.bottom += scrollTop * modifier;\n    rect.left += scrollLeft * modifier;\n    rect.right += scrollLeft * modifier;\n    return rect;\n  }\n\n  /*\r\n   * Helper to detect borders of a given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {CSSStyleDeclaration} styles\r\n   * Result of `getStyleComputedProperty` on the given element\r\n   * @param {String} axis - `x` or `y`\r\n   * @return {number} borders - The borders size of the given axis\r\n   */\n\n  function getBordersSize(styles, axis) {\n    var sideA = axis === 'x' ? 'Left' : 'Top';\n    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n    return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n  }\n\n  function getSize(axis, body, html, computedStyle) {\n    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n  }\n\n  function getWindowSizes() {\n    var body = document.body;\n    var html = document.documentElement;\n    var computedStyle = isIE(10) && getComputedStyle(html);\n\n    return {\n      height: getSize('Height', body, html, computedStyle),\n      width: getSize('Width', body, html, computedStyle)\n    };\n  }\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var defineProperty = function defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\r\n   * Given element offsets, generate an output similar to getBoundingClientRect\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Object} offsets\r\n   * @returns {Object} ClientRect like output\r\n   */\n  function getClientRect(offsets) {\n    return _extends({}, offsets, {\n      right: offsets.left + offsets.width,\n      bottom: offsets.top + offsets.height\n    });\n  }\n\n  /**\r\n   * Get bounding client rect of given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {HTMLElement} element\r\n   * @return {Object} client rect\r\n   */\n  function getBoundingClientRect(element) {\n    var rect = {};\n\n    // IE10 10 FIX: Please, don't ask, the element isn't\n    // considered in DOM in some circumstances...\n    // This isn't reproducible in IE10 compatibility mode of IE11\n    try {\n      if (isIE(10)) {\n        rect = element.getBoundingClientRect();\n        var scrollTop = getScroll(element, 'top');\n        var scrollLeft = getScroll(element, 'left');\n        rect.top += scrollTop;\n        rect.left += scrollLeft;\n        rect.bottom += scrollTop;\n        rect.right += scrollLeft;\n      } else {\n        rect = element.getBoundingClientRect();\n      }\n    } catch (e) {}\n\n    var result = {\n      left: rect.left,\n      top: rect.top,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n\n    // subtract scrollbar size from sizes\n    var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n    var width = sizes.width || element.clientWidth || result.right - result.left;\n    var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n    var horizScrollbar = element.offsetWidth - width;\n    var vertScrollbar = element.offsetHeight - height;\n\n    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n    // we make this check conditional for performance reasons\n    if (horizScrollbar || vertScrollbar) {\n      var styles = getStyleComputedProperty(element);\n      horizScrollbar -= getBordersSize(styles, 'x');\n      vertScrollbar -= getBordersSize(styles, 'y');\n\n      result.width -= horizScrollbar;\n      result.height -= vertScrollbar;\n    }\n\n    return getClientRect(result);\n  }\n\n  function getOffsetRectRelativeToArbitraryNode(children, parent) {\n    var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var isIE10 = isIE(10);\n    var isHTML = parent.nodeName === 'HTML';\n    var childrenRect = getBoundingClientRect(children);\n    var parentRect = getBoundingClientRect(parent);\n    var scrollParent = getScrollParent(children);\n\n    var styles = getStyleComputedProperty(parent);\n    var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n    var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n    // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n    if (fixedPosition && parent.nodeName === 'HTML') {\n      parentRect.top = Math.max(parentRect.top, 0);\n      parentRect.left = Math.max(parentRect.left, 0);\n    }\n    var offsets = getClientRect({\n      top: childrenRect.top - parentRect.top - borderTopWidth,\n      left: childrenRect.left - parentRect.left - borderLeftWidth,\n      width: childrenRect.width,\n      height: childrenRect.height\n    });\n    offsets.marginTop = 0;\n    offsets.marginLeft = 0;\n\n    // Subtract margins of documentElement in case it's being used as parent\n    // we do this only on HTML because it's the only element that behaves\n    // differently when margins are applied to it. The margins are included in\n    // the box of the documentElement, in the other cases not.\n    if (!isIE10 && isHTML) {\n      var marginTop = parseFloat(styles.marginTop, 10);\n      var marginLeft = parseFloat(styles.marginLeft, 10);\n\n      offsets.top -= borderTopWidth - marginTop;\n      offsets.bottom -= borderTopWidth - marginTop;\n      offsets.left -= borderLeftWidth - marginLeft;\n      offsets.right -= borderLeftWidth - marginLeft;\n\n      // Attach marginTop and marginLeft because in some circumstances we may need them\n      offsets.marginTop = marginTop;\n      offsets.marginLeft = marginLeft;\n    }\n\n    if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n      offsets = includeScroll(offsets, parent);\n    }\n\n    return offsets;\n  }\n\n  function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n    var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var html = element.ownerDocument.documentElement;\n    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n    var width = Math.max(html.clientWidth, window.innerWidth || 0);\n    var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n    var scrollTop = !excludeScroll ? getScroll(html) : 0;\n    var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n    var offset = {\n      top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n      left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n      width: width,\n      height: height\n    };\n\n    return getClientRect(offset);\n  }\n\n  /**\r\n   * Check if the given element is fixed or is inside a fixed parent\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @argument {Element} customContainer\r\n   * @returns {Boolean} answer to \"isFixed?\"\r\n   */\n  function isFixed(element) {\n    var nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      return false;\n    }\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\n      return true;\n    }\n    return isFixed(getParentNode(element));\n  }\n\n  /**\r\n   * Finds the first parent of an element that has a transformed property defined\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} first transformed parent or documentElement\r\n   */\n\n  function getFixedPositionOffsetParent(element) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element || !element.parentElement || isIE()) {\n      return document.documentElement;\n    }\n    var el = element.parentElement;\n    while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n      el = el.parentElement;\n    }\n    return el || document.documentElement;\n  }\n\n  /**\r\n   * Computed the boundaries limits and return them\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {HTMLElement} popper\r\n   * @param {HTMLElement} reference\r\n   * @param {number} padding\r\n   * @param {HTMLElement} boundariesElement - Element used to define the boundaries\r\n   * @param {Boolean} fixedPosition - Is in fixed position mode\r\n   * @returns {Object} Coordinates of the boundaries\r\n   */\n  function getBoundaries(popper, reference, padding, boundariesElement) {\n    var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    // NOTE: 1 DOM access here\n\n    var boundaries = { top: 0, left: 0 };\n    var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n    // Handle viewport case\n    if (boundariesElement === 'viewport') {\n      boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n    } else {\n      // Handle other cases based on DOM element used as boundaries\n      var boundariesNode = void 0;\n      if (boundariesElement === 'scrollParent') {\n        boundariesNode = getScrollParent(getParentNode(reference));\n        if (boundariesNode.nodeName === 'BODY') {\n          boundariesNode = popper.ownerDocument.documentElement;\n        }\n      } else if (boundariesElement === 'window') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      } else {\n        boundariesNode = boundariesElement;\n      }\n\n      var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n      // In case of HTML, we need a different computation\n      if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n        var _getWindowSizes = getWindowSizes(),\n            height = _getWindowSizes.height,\n            width = _getWindowSizes.width;\n\n        boundaries.top += offsets.top - offsets.marginTop;\n        boundaries.bottom = height + offsets.top;\n        boundaries.left += offsets.left - offsets.marginLeft;\n        boundaries.right = width + offsets.left;\n      } else {\n        // for all the other DOM elements, this one is good\n        boundaries = offsets;\n      }\n    }\n\n    // Add paddings\n    boundaries.left += padding;\n    boundaries.top += padding;\n    boundaries.right -= padding;\n    boundaries.bottom -= padding;\n\n    return boundaries;\n  }\n\n  function getArea(_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n\n    return width * height;\n  }\n\n  /**\r\n   * Utility used to transform the `auto` placement to the placement with more\r\n   * available space.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    if (placement.indexOf('auto') === -1) {\n      return placement;\n    }\n\n    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n    var rects = {\n      top: {\n        width: boundaries.width,\n        height: refRect.top - boundaries.top\n      },\n      right: {\n        width: boundaries.right - refRect.right,\n        height: boundaries.height\n      },\n      bottom: {\n        width: boundaries.width,\n        height: boundaries.bottom - refRect.bottom\n      },\n      left: {\n        width: refRect.left - boundaries.left,\n        height: boundaries.height\n      }\n    };\n\n    var sortedAreas = Object.keys(rects).map(function (key) {\n      return _extends({\n        key: key\n      }, rects[key], {\n        area: getArea(rects[key])\n      });\n    }).sort(function (a, b) {\n      return b.area - a.area;\n    });\n\n    var filteredAreas = sortedAreas.filter(function (_ref2) {\n      var width = _ref2.width,\n          height = _ref2.height;\n      return width >= popper.clientWidth && height >= popper.clientHeight;\n    });\n\n    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n    var variation = placement.split('-')[1];\n\n    return computedPlacement + (variation ? '-' + variation : '');\n  }\n\n  /**\r\n   * Get offsets to the reference element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Object} state\r\n   * @param {Element} popper - the popper element\r\n   * @param {Element} reference - the reference element (the popper will be relative to this)\r\n   * @param {Element} fixedPosition - is in fixed position mode\r\n   * @returns {Object} An object containing the offsets which will be applied to the popper\r\n   */\n  function getReferenceOffsets(state, popper, reference) {\n    var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n  }\n\n  /**\r\n   * Get the outer sizes of the given element (offset size + margins)\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Object} object containing width and height properties\r\n   */\n  function getOuterSizes(element) {\n    var styles = getComputedStyle(element);\n    var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n    var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n    var result = {\n      width: element.offsetWidth + y,\n      height: element.offsetHeight + x\n    };\n    return result;\n  }\n\n  /**\r\n   * Get the opposite placement of the given one\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} placement\r\n   * @returns {String} flipped placement\r\n   */\n  function getOppositePlacement(placement) {\n    var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n    return placement.replace(/left|right|bottom|top/g, function (matched) {\n      return hash[matched];\n    });\n  }\n\n  /**\r\n   * Get offsets to the popper\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Object} position - CSS position the Popper will get applied\r\n   * @param {HTMLElement} popper - the popper element\r\n   * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\r\n   * @param {String} placement - one of the valid placement options\r\n   * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\r\n   */\n  function getPopperOffsets(popper, referenceOffsets, placement) {\n    placement = placement.split('-')[0];\n\n    // Get popper node sizes\n    var popperRect = getOuterSizes(popper);\n\n    // Add position, width and height to our offsets object\n    var popperOffsets = {\n      width: popperRect.width,\n      height: popperRect.height\n    };\n\n    // depending by the popper placement we have to compute its offsets slightly differently\n    var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n    var mainSide = isHoriz ? 'top' : 'left';\n    var secondarySide = isHoriz ? 'left' : 'top';\n    var measurement = isHoriz ? 'height' : 'width';\n    var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n    if (placement === secondarySide) {\n      popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n    } else {\n      popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n    }\n\n    return popperOffsets;\n  }\n\n  /**\r\n   * Mimics the `find` method of Array\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Array} arr\r\n   * @argument prop\r\n   * @argument value\r\n   * @returns index or -1\r\n   */\n  function find(arr, check) {\n    // use native find if supported\n    if (Array.prototype.find) {\n      return arr.find(check);\n    }\n\n    // use `filter` to obtain the same behavior of `find`\n    return arr.filter(check)[0];\n  }\n\n  /**\r\n   * Return the index of the matching object\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Array} arr\r\n   * @argument prop\r\n   * @argument value\r\n   * @returns index or -1\r\n   */\n  function findIndex(arr, prop, value) {\n    // use native findIndex if supported\n    if (Array.prototype.findIndex) {\n      return arr.findIndex(function (cur) {\n        return cur[prop] === value;\n      });\n    }\n\n    // use `find` + `indexOf` if `findIndex` isn't supported\n    var match = find(arr, function (obj) {\n      return obj[prop] === value;\n    });\n    return arr.indexOf(match);\n  }\n\n  /**\r\n   * Loop trough the list of modifiers and run them in order,\r\n   * each of them will then edit the data object.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {dataObject} data\r\n   * @param {Array} modifiers\r\n   * @param {String} ends - Optional modifier name used as stopper\r\n   * @returns {dataObject}\r\n   */\n  function runModifiers(modifiers, data, ends) {\n    var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n    modifiersToRun.forEach(function (modifier) {\n      if (modifier['function']) {\n        // eslint-disable-line dot-notation\n        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n      }\n      var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n      if (modifier.enabled && isFunction(fn)) {\n        // Add properties to offsets to make them a complete clientRect object\n        // we do this before each modifier to make sure the previous one doesn't\n        // mess with these values\n        data.offsets.popper = getClientRect(data.offsets.popper);\n        data.offsets.reference = getClientRect(data.offsets.reference);\n\n        data = fn(data, modifier);\n      }\n    });\n\n    return data;\n  }\n\n  /**\r\n   * Updates the position of the popper, computing the new offsets and applying\r\n   * the new style.<br />\r\n   * Prefer `scheduleUpdate` over `update` because of performance reasons.\r\n   * @method\r\n   * @memberof Popper\r\n   */\n  function update() {\n    // if popper is destroyed, don't perform any further update\n    if (this.state.isDestroyed) {\n      return;\n    }\n\n    var data = {\n      instance: this,\n      styles: {},\n      arrowStyles: {},\n      attributes: {},\n      flipped: false,\n      offsets: {}\n    };\n\n    // compute reference element offsets\n    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n    // store the computed placement inside `originalPlacement`\n    data.originalPlacement = data.placement;\n\n    data.positionFixed = this.options.positionFixed;\n\n    // compute the popper offsets\n    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n    data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n    // run the modifiers\n    data = runModifiers(this.modifiers, data);\n\n    // the first `update` will call `onCreate` callback\n    // the other ones will call `onUpdate` callback\n    if (!this.state.isCreated) {\n      this.state.isCreated = true;\n      this.options.onCreate(data);\n    } else {\n      this.options.onUpdate(data);\n    }\n  }\n\n  /**\r\n   * Helper used to know if the given modifier is enabled.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @returns {Boolean}\r\n   */\n  function isModifierEnabled(modifiers, modifierName) {\n    return modifiers.some(function (_ref) {\n      var name = _ref.name,\n          enabled = _ref.enabled;\n      return enabled && name === modifierName;\n    });\n  }\n\n  /**\r\n   * Get the prefixed supported property name\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} property (camelCase)\r\n   * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\r\n   */\n  function getSupportedPropertyName(property) {\n    var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n    for (var i = 0; i < prefixes.length; i++) {\n      var prefix = prefixes[i];\n      var toCheck = prefix ? '' + prefix + upperProp : property;\n      if (typeof document.body.style[toCheck] !== 'undefined') {\n        return toCheck;\n      }\n    }\n    return null;\n  }\n\n  /**\r\n   * Destroy the popper\r\n   * @method\r\n   * @memberof Popper\r\n   */\n  function destroy() {\n    this.state.isDestroyed = true;\n\n    // touch DOM only if `applyStyle` modifier is enabled\n    if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n      this.popper.removeAttribute('x-placement');\n      this.popper.style.position = '';\n      this.popper.style.top = '';\n      this.popper.style.left = '';\n      this.popper.style.right = '';\n      this.popper.style.bottom = '';\n      this.popper.style.willChange = '';\n      this.popper.style[getSupportedPropertyName('transform')] = '';\n    }\n\n    this.disableEventListeners();\n\n    // remove the popper if user explicity asked for the deletion on destroy\n    // do not use `remove` because IE11 doesn't support it\n    if (this.options.removeOnDestroy) {\n      this.popper.parentNode.removeChild(this.popper);\n    }\n    return this;\n  }\n\n  /**\r\n   * Get the window associated with the element\r\n   * @argument {Element} element\r\n   * @returns {Window}\r\n   */\n  function getWindow(element) {\n    var ownerDocument = element.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n\n  function attachToScrollParents(scrollParent, event, callback, scrollParents) {\n    var isBody = scrollParent.nodeName === 'BODY';\n    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n    target.addEventListener(event, callback, { passive: true });\n\n    if (!isBody) {\n      attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n    }\n    scrollParents.push(target);\n  }\n\n  /**\r\n   * Setup needed event listeners used to update the popper position\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @private\r\n   */\n  function setupEventListeners(reference, options, state, updateBound) {\n    // Resize event listener on window\n    state.updateBound = updateBound;\n    getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n    // Scroll event listener on scroll parents\n    var scrollElement = getScrollParent(reference);\n    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n    state.scrollElement = scrollElement;\n    state.eventsEnabled = true;\n\n    return state;\n  }\n\n  /**\r\n   * It will add resize/scroll events and start recalculating\r\n   * position of the popper element when they are triggered.\r\n   * @method\r\n   * @memberof Popper\r\n   */\n  function enableEventListeners() {\n    if (!this.state.eventsEnabled) {\n      this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n    }\n  }\n\n  /**\r\n   * Remove event listeners used to update the popper position\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @private\r\n   */\n  function removeEventListeners(reference, state) {\n    // Remove resize event listener on window\n    getWindow(reference).removeEventListener('resize', state.updateBound);\n\n    // Remove scroll event listener on scroll parents\n    state.scrollParents.forEach(function (target) {\n      target.removeEventListener('scroll', state.updateBound);\n    });\n\n    // Reset state\n    state.updateBound = null;\n    state.scrollParents = [];\n    state.scrollElement = null;\n    state.eventsEnabled = false;\n    return state;\n  }\n\n  /**\r\n   * It will remove resize/scroll events and won't recalculate popper position\r\n   * when they are triggered. It also won't trigger onUpdate callback anymore,\r\n   * unless you call `update` method manually.\r\n   * @method\r\n   * @memberof Popper\r\n   */\n  function disableEventListeners() {\n    if (this.state.eventsEnabled) {\n      cancelAnimationFrame(this.scheduleUpdate);\n      this.state = removeEventListeners(this.reference, this.state);\n    }\n  }\n\n  /**\r\n   * Tells if a given input is a number\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {*} input to check\r\n   * @return {Boolean}\r\n   */\n  function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  /**\r\n   * Set the style to the given popper\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element - Element to apply the style to\r\n   * @argument {Object} styles\r\n   * Object with a list of properties and values which will be applied to the element\r\n   */\n  function setStyles(element, styles) {\n    Object.keys(styles).forEach(function (prop) {\n      var unit = '';\n      // add unit if the value is numeric and is one of the following\n      if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n        unit = 'px';\n      }\n      element.style[prop] = styles[prop] + unit;\n    });\n  }\n\n  /**\r\n   * Set the attributes to the given popper\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element - Element to apply the attributes to\r\n   * @argument {Object} styles\r\n   * Object with a list of properties and values which will be applied to the element\r\n   */\n  function setAttributes(element, attributes) {\n    Object.keys(attributes).forEach(function (prop) {\n      var value = attributes[prop];\n      if (value !== false) {\n        element.setAttribute(prop, attributes[prop]);\n      } else {\n        element.removeAttribute(prop);\n      }\n    });\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} data.styles - List of style properties - values to apply to popper element\r\n   * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The same data object\r\n   */\n  function applyStyle(data) {\n    // any property present in `data.styles` will be applied to the popper,\n    // in this way we can make the 3rd party modifiers add custom styles to it\n    // Be aware, modifiers could override the properties defined in the previous\n    // lines of this modifier!\n    setStyles(data.instance.popper, data.styles);\n\n    // any property present in `data.attributes` will be applied to the popper,\n    // they will be set as HTML attributes of the element\n    setAttributes(data.instance.popper, data.attributes);\n\n    // if arrowElement is defined and arrowStyles has some properties\n    if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n      setStyles(data.arrowElement, data.arrowStyles);\n    }\n\n    return data;\n  }\n\n  /**\r\n   * Set the x-placement attribute before everything else because it could be used\r\n   * to add margins to the popper margins needs to be calculated to get the\r\n   * correct popper offsets.\r\n   * @method\r\n   * @memberof Popper.modifiers\r\n   * @param {HTMLElement} reference - The reference element used to position the popper\r\n   * @param {HTMLElement} popper - The HTML element used as popper\r\n   * @param {Object} options - Popper.js options\r\n   */\n  function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n    // compute reference element offsets\n    var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n    popper.setAttribute('x-placement', placement);\n\n    // Apply `position` to popper before anything else because\n    // without the position applied we can't guarantee correct computations\n    setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n    return options;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function computeStyle(data, options) {\n    var x = options.x,\n        y = options.y;\n    var popper = data.offsets.popper;\n\n    // Remove this legacy support in Popper.js v2\n\n    var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'applyStyle';\n    }).gpuAcceleration;\n    if (legacyGpuAccelerationOption !== undefined) {\n      console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n    }\n    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n    var offsetParent = getOffsetParent(data.instance.popper);\n    var offsetParentRect = getBoundingClientRect(offsetParent);\n\n    // Styles\n    var styles = {\n      position: popper.position\n    };\n\n    // Avoid blurry text by using full pixel integers.\n    // For pixel-perfect positioning, top/bottom prefers rounded\n    // values, while left/right prefers floored values.\n    var offsets = {\n      left: Math.floor(popper.left),\n      top: Math.round(popper.top),\n      bottom: Math.round(popper.bottom),\n      right: Math.floor(popper.right)\n    };\n\n    var sideA = x === 'bottom' ? 'top' : 'bottom';\n    var sideB = y === 'right' ? 'left' : 'right';\n\n    // if gpuAcceleration is set to `true` and transform is supported,\n    //  we use `translate3d` to apply the position to the popper we\n    // automatically use the supported prefixed version if needed\n    var prefixedProperty = getSupportedPropertyName('transform');\n\n    // now, let's make a step back and look at this code closely (wtf?)\n    // If the content of the popper grows once it's been positioned, it\n    // may happen that the popper gets misplaced because of the new content\n    // overflowing its reference element\n    // To avoid this problem, we provide two options (x and y), which allow\n    // the consumer to define the offset origin.\n    // If we position a popper on top of a reference element, we can set\n    // `x` to `top` to make the popper grow towards its top instead of\n    // its bottom.\n    var left = void 0,\n        top = void 0;\n    if (sideA === 'bottom') {\n      top = -offsetParentRect.height + offsets.bottom;\n    } else {\n      top = offsets.top;\n    }\n    if (sideB === 'right') {\n      left = -offsetParentRect.width + offsets.right;\n    } else {\n      left = offsets.left;\n    }\n    if (gpuAcceleration && prefixedProperty) {\n      styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n      styles[sideA] = 0;\n      styles[sideB] = 0;\n      styles.willChange = 'transform';\n    } else {\n      // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n      var invertTop = sideA === 'bottom' ? -1 : 1;\n      var invertLeft = sideB === 'right' ? -1 : 1;\n      styles[sideA] = top * invertTop;\n      styles[sideB] = left * invertLeft;\n      styles.willChange = sideA + ', ' + sideB;\n    }\n\n    // Attributes\n    var attributes = {\n      'x-placement': data.placement\n    };\n\n    // Update `data` attributes, styles and arrowStyles\n    data.attributes = _extends({}, attributes, data.attributes);\n    data.styles = _extends({}, styles, data.styles);\n    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n    return data;\n  }\n\n  /**\r\n   * Helper used to know if the given modifier depends from another one.<br />\r\n   * It checks if the needed modifier is listed and enabled.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Array} modifiers - list of modifiers\r\n   * @param {String} requestingName - name of requesting modifier\r\n   * @param {String} requestedName - name of requested modifier\r\n   * @returns {Boolean}\r\n   */\n  function isModifierRequired(modifiers, requestingName, requestedName) {\n    var requesting = find(modifiers, function (_ref) {\n      var name = _ref.name;\n      return name === requestingName;\n    });\n\n    var isRequired = !!requesting && modifiers.some(function (modifier) {\n      return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n    });\n\n    if (!isRequired) {\n      var _requesting = '`' + requestingName + '`';\n      var requested = '`' + requestedName + '`';\n      console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n    }\n    return isRequired;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function arrow(data, options) {\n    var _data$offsets$arrow;\n\n    // arrow depends on keepTogether in order to work\n    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n      return data;\n    }\n\n    var arrowElement = options.element;\n\n    // if arrowElement is a string, suppose it's a CSS selector\n    if (typeof arrowElement === 'string') {\n      arrowElement = data.instance.popper.querySelector(arrowElement);\n\n      // if arrowElement is not found, don't run the modifier\n      if (!arrowElement) {\n        return data;\n      }\n    } else {\n      // if the arrowElement isn't a query selector we must check that the\n      // provided DOM node is child of its popper node\n      if (!data.instance.popper.contains(arrowElement)) {\n        console.warn('WARNING: `arrow.element` must be child of its popper element!');\n        return data;\n      }\n    }\n\n    var placement = data.placement.split('-')[0];\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n\n    var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n    var len = isVertical ? 'height' : 'width';\n    var sideCapitalized = isVertical ? 'Top' : 'Left';\n    var side = sideCapitalized.toLowerCase();\n    var altSide = isVertical ? 'left' : 'top';\n    var opSide = isVertical ? 'bottom' : 'right';\n    var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n    //\n    // extends keepTogether behavior making sure the popper and its\n    // reference have enough pixels in conjuction\n    //\n\n    // top/left side\n    if (reference[opSide] - arrowElementSize < popper[side]) {\n      data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n    }\n    // bottom/right side\n    if (reference[side] + arrowElementSize > popper[opSide]) {\n      data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n    }\n    data.offsets.popper = getClientRect(data.offsets.popper);\n\n    // compute center of the popper\n    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n    // Compute the sideValue using the updated popper offsets\n    // take popper margin in account because we don't have this info available\n    var css = getStyleComputedProperty(data.instance.popper);\n    var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n    var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n    // prevent arrowElement from being placed not contiguously to its popper\n    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n    data.arrowElement = arrowElement;\n    data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n    return data;\n  }\n\n  /**\r\n   * Get the opposite placement variation of the given one\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} placement variation\r\n   * @returns {String} flipped placement variation\r\n   */\n  function getOppositeVariation(variation) {\n    if (variation === 'end') {\n      return 'start';\n    } else if (variation === 'start') {\n      return 'end';\n    }\n    return variation;\n  }\n\n  /**\r\n   * List of accepted placements to use as values of the `placement` option.<br />\r\n   * Valid placements are:\r\n   * - `auto`\r\n   * - `top`\r\n   * - `right`\r\n   * - `bottom`\r\n   * - `left`\r\n   *\r\n   * Each placement can have a variation from this list:\r\n   * - `-start`\r\n   * - `-end`\r\n   *\r\n   * Variations are interpreted easily if you think of them as the left to right\r\n   * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\r\n   * is right.<br />\r\n   * Vertically (`left` and `right`), `start` is top and `end` is bottom.\r\n   *\r\n   * Some valid examples are:\r\n   * - `top-end` (on top of reference, right aligned)\r\n   * - `right-start` (on right of reference, top aligned)\r\n   * - `bottom` (on bottom, centered)\r\n   * - `auto-right` (on the side with more space available, alignment depends by placement)\r\n   *\r\n   * @static\r\n   * @type {Array}\r\n   * @enum {String}\r\n   * @readonly\r\n   * @method placements\r\n   * @memberof Popper\r\n   */\n  var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n  // Get rid of `auto` `auto-start` and `auto-end`\n  var validPlacements = placements.slice(3);\n\n  /**\r\n   * Given an initial placement, returns all the subsequent placements\r\n   * clockwise (or counter-clockwise).\r\n   *\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} placement - A valid placement (it accepts variations)\r\n   * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\r\n   * @returns {Array} placements including their variations\r\n   */\n  function clockwise(placement) {\n    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var index = validPlacements.indexOf(placement);\n    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n    return counter ? arr.reverse() : arr;\n  }\n\n  var BEHAVIORS = {\n    FLIP: 'flip',\n    CLOCKWISE: 'clockwise',\n    COUNTERCLOCKWISE: 'counterclockwise'\n  };\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function flip(data, options) {\n    // if `inner` modifier is enabled, we can't use the `flip` modifier\n    if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n      return data;\n    }\n\n    if (data.flipped && data.placement === data.originalPlacement) {\n      // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n      return data;\n    }\n\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n    var placement = data.placement.split('-')[0];\n    var placementOpposite = getOppositePlacement(placement);\n    var variation = data.placement.split('-')[1] || '';\n\n    var flipOrder = [];\n\n    switch (options.behavior) {\n      case BEHAVIORS.FLIP:\n        flipOrder = [placement, placementOpposite];\n        break;\n      case BEHAVIORS.CLOCKWISE:\n        flipOrder = clockwise(placement);\n        break;\n      case BEHAVIORS.COUNTERCLOCKWISE:\n        flipOrder = clockwise(placement, true);\n        break;\n      default:\n        flipOrder = options.behavior;\n    }\n\n    flipOrder.forEach(function (step, index) {\n      if (placement !== step || flipOrder.length === index + 1) {\n        return data;\n      }\n\n      placement = data.placement.split('-')[0];\n      placementOpposite = getOppositePlacement(placement);\n\n      var popperOffsets = data.offsets.popper;\n      var refOffsets = data.offsets.reference;\n\n      // using floor because the reference offsets may contain decimals we are not going to consider here\n      var floor = Math.floor;\n      var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n      var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n      var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n      var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n      var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n      var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n      // flip the variation if required\n      var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n      var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n      if (overlapsRef || overflowsBoundaries || flippedVariation) {\n        // this boolean to detect any flip loop\n        data.flipped = true;\n\n        if (overlapsRef || overflowsBoundaries) {\n          placement = flipOrder[index + 1];\n        }\n\n        if (flippedVariation) {\n          variation = getOppositeVariation(variation);\n        }\n\n        data.placement = placement + (variation ? '-' + variation : '');\n\n        // this object contains `position`, we want to preserve it along with\n        // any additional property we may add in the future\n        data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n        data = runModifiers(data.instance.modifiers, data, 'flip');\n      }\n    });\n    return data;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function keepTogether(data) {\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n\n    var placement = data.placement.split('-')[0];\n    var floor = Math.floor;\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var side = isVertical ? 'right' : 'bottom';\n    var opSide = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    if (popper[side] < floor(reference[opSide])) {\n      data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n    }\n    if (popper[opSide] > floor(reference[side])) {\n      data.offsets.popper[opSide] = floor(reference[side]);\n    }\n\n    return data;\n  }\n\n  /**\r\n   * Converts a string containing value + unit into a px value number\r\n   * @function\r\n   * @memberof {modifiers~offset}\r\n   * @private\r\n   * @argument {String} str - Value + unit string\r\n   * @argument {String} measurement - `height` or `width`\r\n   * @argument {Object} popperOffsets\r\n   * @argument {Object} referenceOffsets\r\n   * @returns {Number|String}\r\n   * Value in pixels, or original string if no values were extracted\r\n   */\n  function toValue(str, measurement, popperOffsets, referenceOffsets) {\n    // separate value from unit\n    var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n    var value = +split[1];\n    var unit = split[2];\n\n    // If it's not a number it's an operator, I guess\n    if (!value) {\n      return str;\n    }\n\n    if (unit.indexOf('%') === 0) {\n      var element = void 0;\n      switch (unit) {\n        case '%p':\n          element = popperOffsets;\n          break;\n        case '%':\n        case '%r':\n        default:\n          element = referenceOffsets;\n      }\n\n      var rect = getClientRect(element);\n      return rect[measurement] / 100 * value;\n    } else if (unit === 'vh' || unit === 'vw') {\n      // if is a vh or vw, we calculate the size based on the viewport\n      var size = void 0;\n      if (unit === 'vh') {\n        size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n      } else {\n        size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n      }\n      return size / 100 * value;\n    } else {\n      // if is an explicit pixel unit, we get rid of the unit and keep the value\n      // if is an implicit unit, it's px, and we return just the value\n      return value;\n    }\n  }\n\n  /**\r\n   * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\r\n   * @function\r\n   * @memberof {modifiers~offset}\r\n   * @private\r\n   * @argument {String} offset\r\n   * @argument {Object} popperOffsets\r\n   * @argument {Object} referenceOffsets\r\n   * @argument {String} basePlacement\r\n   * @returns {Array} a two cells array with x and y offsets in numbers\r\n   */\n  function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n    var offsets = [0, 0];\n\n    // Use height if placement is left or right and index is 0 otherwise use width\n    // in this way the first offset will use an axis and the second one\n    // will use the other one\n    var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n    // Split the offset string to obtain a list of values and operands\n    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n    var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n      return frag.trim();\n    });\n\n    // Detect if the offset string contains a pair of values or a single one\n    // they could be separated by comma or space\n    var divider = fragments.indexOf(find(fragments, function (frag) {\n      return frag.search(/,|\\s/) !== -1;\n    }));\n\n    if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n      console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n    }\n\n    // If divider is found, we divide the list of values and operands to divide\n    // them by ofset X and Y.\n    var splitRegex = /\\s*,\\s*|\\s+/;\n    var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n    // Convert the values with units to absolute pixels to allow our computations\n    ops = ops.map(function (op, index) {\n      // Most of the units rely on the orientation of the popper\n      var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n      var mergeWithPrevious = false;\n      return op\n      // This aggregates any `+` or `-` sign that aren't considered operators\n      // e.g.: 10 + +5 => [10, +, +5]\n      .reduce(function (a, b) {\n        if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n          a[a.length - 1] = b;\n          mergeWithPrevious = true;\n          return a;\n        } else if (mergeWithPrevious) {\n          a[a.length - 1] += b;\n          mergeWithPrevious = false;\n          return a;\n        } else {\n          return a.concat(b);\n        }\n      }, [])\n      // Here we convert the string values into number values (in px)\n      .map(function (str) {\n        return toValue(str, measurement, popperOffsets, referenceOffsets);\n      });\n    });\n\n    // Loop trough the offsets arrays and execute the operations\n    ops.forEach(function (op, index) {\n      op.forEach(function (frag, index2) {\n        if (isNumeric(frag)) {\n          offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n        }\n      });\n    });\n    return offsets;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @argument {Number|String} options.offset=0\r\n   * The offset value as described in the modifier description\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function offset(data, _ref) {\n    var offset = _ref.offset;\n    var placement = data.placement,\n        _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n\n    var basePlacement = placement.split('-')[0];\n\n    var offsets = void 0;\n    if (isNumeric(+offset)) {\n      offsets = [+offset, 0];\n    } else {\n      offsets = parseOffset(offset, popper, reference, basePlacement);\n    }\n\n    if (basePlacement === 'left') {\n      popper.top += offsets[0];\n      popper.left -= offsets[1];\n    } else if (basePlacement === 'right') {\n      popper.top += offsets[0];\n      popper.left += offsets[1];\n    } else if (basePlacement === 'top') {\n      popper.left += offsets[0];\n      popper.top -= offsets[1];\n    } else if (basePlacement === 'bottom') {\n      popper.left += offsets[0];\n      popper.top += offsets[1];\n    }\n\n    data.popper = popper;\n    return data;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function preventOverflow(data, options) {\n    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n    // If offsetParent is the reference element, we really want to\n    // go one step up and use the next offsetParent as reference to\n    // avoid to make this modifier completely useless and look like broken\n    if (data.instance.reference === boundariesElement) {\n      boundariesElement = getOffsetParent(boundariesElement);\n    }\n\n    // NOTE: DOM access here\n    // resets the popper's position so that the document size can be calculated excluding\n    // the size of the popper element itself\n    var transformProp = getSupportedPropertyName('transform');\n    var popperStyles = data.instance.popper.style; // assignment to help minification\n    var top = popperStyles.top,\n        left = popperStyles.left,\n        transform = popperStyles[transformProp];\n\n    popperStyles.top = '';\n    popperStyles.left = '';\n    popperStyles[transformProp] = '';\n\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n    // NOTE: DOM access here\n    // restores the original style properties after the offsets have been computed\n    popperStyles.top = top;\n    popperStyles.left = left;\n    popperStyles[transformProp] = transform;\n\n    options.boundaries = boundaries;\n\n    var order = options.priority;\n    var popper = data.offsets.popper;\n\n    var check = {\n      primary: function primary(placement) {\n        var value = popper[placement];\n        if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n          value = Math.max(popper[placement], boundaries[placement]);\n        }\n        return defineProperty({}, placement, value);\n      },\n      secondary: function secondary(placement) {\n        var mainSide = placement === 'right' ? 'left' : 'top';\n        var value = popper[mainSide];\n        if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n          value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n        }\n        return defineProperty({}, mainSide, value);\n      }\n    };\n\n    order.forEach(function (placement) {\n      var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n      popper = _extends({}, popper, check[side](placement));\n    });\n\n    data.offsets.popper = popper;\n\n    return data;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function shift(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var shiftvariation = placement.split('-')[1];\n\n    // if shift shiftvariation is specified, run the modifier\n    if (shiftvariation) {\n      var _data$offsets = data.offsets,\n          reference = _data$offsets.reference,\n          popper = _data$offsets.popper;\n\n      var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n      var side = isVertical ? 'left' : 'top';\n      var measurement = isVertical ? 'width' : 'height';\n\n      var shiftOffsets = {\n        start: defineProperty({}, side, reference[side]),\n        end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n      };\n\n      data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n    }\n\n    return data;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function hide(data) {\n    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n      return data;\n    }\n\n    var refRect = data.offsets.reference;\n    var bound = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'preventOverflow';\n    }).boundaries;\n\n    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === true) {\n        return data;\n      }\n\n      data.hide = true;\n      data.attributes['x-out-of-boundaries'] = '';\n    } else {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === false) {\n        return data;\n      }\n\n      data.hide = false;\n      data.attributes['x-out-of-boundaries'] = false;\n    }\n\n    return data;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function inner(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var _data$offsets = data.offsets,\n        popper = _data$offsets.popper,\n        reference = _data$offsets.reference;\n\n    var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n    var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n    data.placement = getOppositePlacement(placement);\n    data.offsets.popper = getClientRect(popper);\n\n    return data;\n  }\n\n  /**\r\n   * Modifier function, each modifier can have a function of this type assigned\r\n   * to its `fn` property.<br />\r\n   * These functions will be called on each update, this means that you must\r\n   * make sure they are performant enough to avoid performance bottlenecks.\r\n   *\r\n   * @function ModifierFn\r\n   * @argument {dataObject} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {dataObject} The data object, properly modified\r\n   */\n\n  /**\r\n   * Modifiers are plugins used to alter the behavior of your poppers.<br />\r\n   * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\r\n   * needed by the library.\r\n   *\r\n   * Usually you don't want to override the `order`, `fn` and `onLoad` props.\r\n   * All the other properties are configurations that could be tweaked.\r\n   * @namespace modifiers\r\n   */\n  var modifiers = {\n    /**\r\n     * Modifier used to shift the popper on the start or end of its reference\r\n     * element.<br />\r\n     * It will read the variation of the `placement` property.<br />\r\n     * It can be one either `-end` or `-start`.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    shift: {\n      /** @prop {number} order=100 - Index used to define the order of execution */\n      order: 100,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: shift\n    },\n\n    /**\r\n     * The `offset` modifier can shift your popper on both its axis.\r\n     *\r\n     * It accepts the following units:\r\n     * - `px` or unitless, interpreted as pixels\r\n     * - `%` or `%r`, percentage relative to the length of the reference element\r\n     * - `%p`, percentage relative to the length of the popper element\r\n     * - `vw`, CSS viewport width unit\r\n     * - `vh`, CSS viewport height unit\r\n     *\r\n     * For length is intended the main axis relative to the placement of the popper.<br />\r\n     * This means that if the placement is `top` or `bottom`, the length will be the\r\n     * `width`. In case of `left` or `right`, it will be the height.\r\n     *\r\n     * You can provide a single value (as `Number` or `String`), or a pair of values\r\n     * as `String` divided by a comma or one (or more) white spaces.<br />\r\n     * The latter is a deprecated method because it leads to confusion and will be\r\n     * removed in v2.<br />\r\n     * Additionally, it accepts additions and subtractions between different units.\r\n     * Note that multiplications and divisions aren't supported.\r\n     *\r\n     * Valid examples are:\r\n     * ```\r\n     * 10\r\n     * '10%'\r\n     * '10, 10'\r\n     * '10%, 10'\r\n     * '10 + 10%'\r\n     * '10 - 5vh + 3%'\r\n     * '-10px + 5vh, 5px - 6%'\r\n     * ```\r\n     * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\r\n     * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\r\n     * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    offset: {\n      /** @prop {number} order=200 - Index used to define the order of execution */\n      order: 200,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: offset,\n      /** @prop {Number|String} offset=0\r\n       * The offset value as described in the modifier description\r\n       */\n      offset: 0\n    },\n\n    /**\r\n     * Modifier used to prevent the popper from being positioned outside the boundary.\r\n     *\r\n     * An scenario exists where the reference itself is not within the boundaries.<br />\r\n     * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\r\n     * In this case we need to decide whether the popper should either:\r\n     *\r\n     * - detach from the reference and remain \"trapped\" in the boundaries, or\r\n     * - if it should ignore the boundary and \"escape with its reference\"\r\n     *\r\n     * When `escapeWithReference` is set to`true` and reference is completely\r\n     * outside its boundaries, the popper will overflow (or completely leave)\r\n     * the boundaries in order to remain attached to the edge of the reference.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    preventOverflow: {\n      /** @prop {number} order=300 - Index used to define the order of execution */\n      order: 300,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: preventOverflow,\n      /**\r\n       * @prop {Array} [priority=['left','right','top','bottom']]\r\n       * Popper will try to prevent overflow following these priorities by default,\r\n       * then, it could overflow on the left and on top of the `boundariesElement`\r\n       */\n      priority: ['left', 'right', 'top', 'bottom'],\n      /**\r\n       * @prop {number} padding=5\r\n       * Amount of pixel used to define a minimum distance between the boundaries\r\n       * and the popper this makes sure the popper has always a little padding\r\n       * between the edges of its container\r\n       */\n      padding: 5,\n      /**\r\n       * @prop {String|HTMLElement} boundariesElement='scrollParent'\r\n       * Boundaries used by the modifier, can be `scrollParent`, `window`,\r\n       * `viewport` or any DOM element.\r\n       */\n      boundariesElement: 'scrollParent'\n    },\n\n    /**\r\n     * Modifier used to make sure the reference and its popper stay near eachothers\r\n     * without leaving any gap between the two. Expecially useful when the arrow is\r\n     * enabled and you want to assure it to point to its reference element.\r\n     * It cares only about the first axis, you can still have poppers with margin\r\n     * between the popper and its reference element.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    keepTogether: {\n      /** @prop {number} order=400 - Index used to define the order of execution */\n      order: 400,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: keepTogether\n    },\n\n    /**\r\n     * This modifier is used to move the `arrowElement` of the popper to make\r\n     * sure it is positioned between the reference element and its popper element.\r\n     * It will read the outer size of the `arrowElement` node to detect how many\r\n     * pixels of conjuction are needed.\r\n     *\r\n     * It has no effect if no `arrowElement` is provided.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    arrow: {\n      /** @prop {number} order=500 - Index used to define the order of execution */\n      order: 500,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: arrow,\n      /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n      element: '[x-arrow]'\n    },\n\n    /**\r\n     * Modifier used to flip the popper's placement when it starts to overlap its\r\n     * reference element.\r\n     *\r\n     * Requires the `preventOverflow` modifier before it in order to work.\r\n     *\r\n     * **NOTE:** this modifier will interrupt the current update cycle and will\r\n     * restart it if it detects the need to flip the placement.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    flip: {\n      /** @prop {number} order=600 - Index used to define the order of execution */\n      order: 600,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: flip,\n      /**\r\n       * @prop {String|Array} behavior='flip'\r\n       * The behavior used to change the popper's placement. It can be one of\r\n       * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\r\n       * placements (with optional variations).\r\n       */\n      behavior: 'flip',\n      /**\r\n       * @prop {number} padding=5\r\n       * The popper will flip if it hits the edges of the `boundariesElement`\r\n       */\n      padding: 5,\n      /**\r\n       * @prop {String|HTMLElement} boundariesElement='viewport'\r\n       * The element which will define the boundaries of the popper position,\r\n       * the popper will never be placed outside of the defined boundaries\r\n       * (except if keepTogether is enabled)\r\n       */\n      boundariesElement: 'viewport'\n    },\n\n    /**\r\n     * Modifier used to make the popper flow toward the inner of the reference element.\r\n     * By default, when this modifier is disabled, the popper will be placed outside\r\n     * the reference element.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    inner: {\n      /** @prop {number} order=700 - Index used to define the order of execution */\n      order: 700,\n      /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n      enabled: false,\n      /** @prop {ModifierFn} */\n      fn: inner\n    },\n\n    /**\r\n     * Modifier used to hide the popper when its reference element is outside of the\r\n     * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\r\n     * be used to hide with a CSS selector the popper when its reference is\r\n     * out of boundaries.\r\n     *\r\n     * Requires the `preventOverflow` modifier before it in order to work.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    hide: {\n      /** @prop {number} order=800 - Index used to define the order of execution */\n      order: 800,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: hide\n    },\n\n    /**\r\n     * Computes the style that will be applied to the popper element to gets\r\n     * properly positioned.\r\n     *\r\n     * Note that this modifier will not touch the DOM, it just prepares the styles\r\n     * so that `applyStyle` modifier can apply it. This separation is useful\r\n     * in case you need to replace `applyStyle` with a custom implementation.\r\n     *\r\n     * This modifier has `850` as `order` value to maintain backward compatibility\r\n     * with previous versions of Popper.js. Expect the modifiers ordering method\r\n     * to change in future major versions of the library.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    computeStyle: {\n      /** @prop {number} order=850 - Index used to define the order of execution */\n      order: 850,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: computeStyle,\n      /**\r\n       * @prop {Boolean} gpuAcceleration=true\r\n       * If true, it uses the CSS 3d transformation to position the popper.\r\n       * Otherwise, it will use the `top` and `left` properties.\r\n       */\n      gpuAcceleration: true,\n      /**\r\n       * @prop {string} [x='bottom']\r\n       * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\r\n       * Change this if your popper should grow in a direction different from `bottom`\r\n       */\n      x: 'bottom',\n      /**\r\n       * @prop {string} [x='left']\r\n       * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\r\n       * Change this if your popper should grow in a direction different from `right`\r\n       */\n      y: 'right'\n    },\n\n    /**\r\n     * Applies the computed styles to the popper element.\r\n     *\r\n     * All the DOM manipulations are limited to this modifier. This is useful in case\r\n     * you want to integrate Popper.js inside a framework or view library and you\r\n     * want to delegate all the DOM manipulations to it.\r\n     *\r\n     * Note that if you disable this modifier, you must make sure the popper element\r\n     * has its position set to `absolute` before Popper.js can do its work!\r\n     *\r\n     * Just disable this modifier and define you own to achieve the desired effect.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    applyStyle: {\n      /** @prop {number} order=900 - Index used to define the order of execution */\n      order: 900,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: applyStyle,\n      /** @prop {Function} */\n      onLoad: applyStyleOnLoad,\n      /**\r\n       * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\r\n       * @prop {Boolean} gpuAcceleration=true\r\n       * If true, it uses the CSS 3d transformation to position the popper.\r\n       * Otherwise, it will use the `top` and `left` properties.\r\n       */\n      gpuAcceleration: undefined\n    }\n  };\n\n  /**\r\n   * The `dataObject` is an object containing all the informations used by Popper.js\r\n   * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\r\n   * @name dataObject\r\n   * @property {Object} data.instance The Popper.js instance\r\n   * @property {String} data.placement Placement applied to popper\r\n   * @property {String} data.originalPlacement Placement originally defined on init\r\n   * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\r\n   * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\r\n   * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\r\n   * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\r\n   * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\r\n   * @property {Object} data.boundaries Offsets of the popper boundaries\r\n   * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\r\n   * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\r\n   * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\r\n   * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\r\n   */\n\n  /**\r\n   * Default options provided to Popper.js constructor.<br />\r\n   * These can be overriden using the `options` argument of Popper.js.<br />\r\n   * To override an option, simply pass as 3rd argument an object with the same\r\n   * structure of this object, example:\r\n   * ```\r\n   * new Popper(ref, pop, {\r\n   *   modifiers: {\r\n   *     preventOverflow: { enabled: false }\r\n   *   }\r\n   * })\r\n   * ```\r\n   * @type {Object}\r\n   * @static\r\n   * @memberof Popper\r\n   */\n  var Defaults = {\n    /**\r\n     * Popper's placement\r\n     * @prop {Popper.placements} placement='bottom'\r\n     */\n    placement: 'bottom',\n\n    /**\r\n     * Set this to true if you want popper to position it self in 'fixed' mode\r\n     * @prop {Boolean} positionFixed=false\r\n     */\n    positionFixed: false,\n\n    /**\r\n     * Whether events (resize, scroll) are initially enabled\r\n     * @prop {Boolean} eventsEnabled=true\r\n     */\n    eventsEnabled: true,\n\n    /**\r\n     * Set to true if you want to automatically remove the popper when\r\n     * you call the `destroy` method.\r\n     * @prop {Boolean} removeOnDestroy=false\r\n     */\n    removeOnDestroy: false,\n\n    /**\r\n     * Callback called when the popper is created.<br />\r\n     * By default, is set to no-op.<br />\r\n     * Access Popper.js instance with `data.instance`.\r\n     * @prop {onCreate}\r\n     */\n    onCreate: function onCreate() {},\n\n    /**\r\n     * Callback called when the popper is updated, this callback is not called\r\n     * on the initialization/creation of the popper, but only on subsequent\r\n     * updates.<br />\r\n     * By default, is set to no-op.<br />\r\n     * Access Popper.js instance with `data.instance`.\r\n     * @prop {onUpdate}\r\n     */\n    onUpdate: function onUpdate() {},\n\n    /**\r\n     * List of modifiers used to modify the offsets before they are applied to the popper.\r\n     * They provide most of the functionalities of Popper.js\r\n     * @prop {modifiers}\r\n     */\n    modifiers: modifiers\n  };\n\n  /**\r\n   * @callback onCreate\r\n   * @param {dataObject} data\r\n   */\n\n  /**\r\n   * @callback onUpdate\r\n   * @param {dataObject} data\r\n   */\n\n  // Utils\n  // Methods\n  var Popper = function () {\n    /**\r\n     * Create a new Popper.js instance\r\n     * @class Popper\r\n     * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\r\n     * @param {HTMLElement} popper - The HTML element used as popper.\r\n     * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\r\n     * @return {Object} instance - The generated Popper.js instance\r\n     */\n    function Popper(reference, popper) {\n      var _this = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      classCallCheck(this, Popper);\n\n      this.scheduleUpdate = function () {\n        return requestAnimationFrame(_this.update);\n      };\n\n      // make update() debounced, so that it only runs at most once-per-tick\n      this.update = debounce(this.update.bind(this));\n\n      // with {} we create a new object with the options inside it\n      this.options = _extends({}, Popper.Defaults, options);\n\n      // init state\n      this.state = {\n        isDestroyed: false,\n        isCreated: false,\n        scrollParents: []\n      };\n\n      // get reference and popper elements (allow jQuery wrappers)\n      this.reference = reference && reference.jquery ? reference[0] : reference;\n      this.popper = popper && popper.jquery ? popper[0] : popper;\n\n      // Deep merge modifiers options\n      this.options.modifiers = {};\n      Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n        _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n      });\n\n      // Refactoring modifiers' list (Object => Array)\n      this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n        return _extends({\n          name: name\n        }, _this.options.modifiers[name]);\n      })\n      // sort the modifiers by order\n      .sort(function (a, b) {\n        return a.order - b.order;\n      });\n\n      // modifiers have the ability to execute arbitrary code when Popper.js get inited\n      // such code is executed in the same order of its modifier\n      // they could add new properties to their options configuration\n      // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n      this.modifiers.forEach(function (modifierOptions) {\n        if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n          modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n        }\n      });\n\n      // fire the first update to position the popper in the right place\n      this.update();\n\n      var eventsEnabled = this.options.eventsEnabled;\n      if (eventsEnabled) {\n        // setup event listeners, they will take care of update the position in specific situations\n        this.enableEventListeners();\n      }\n\n      this.state.eventsEnabled = eventsEnabled;\n    }\n\n    // We can't use class properties because they don't get listed in the\n    // class prototype and break stuff like Sinon stubs\n\n\n    createClass(Popper, [{\n      key: 'update',\n      value: function update$$1() {\n        return update.call(this);\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy$$1() {\n        return destroy.call(this);\n      }\n    }, {\n      key: 'enableEventListeners',\n      value: function enableEventListeners$$1() {\n        return enableEventListeners.call(this);\n      }\n    }, {\n      key: 'disableEventListeners',\n      value: function disableEventListeners$$1() {\n        return disableEventListeners.call(this);\n      }\n\n      /**\r\n       * Schedule an update, it will run on the next UI update available\r\n       * @method scheduleUpdate\r\n       * @memberof Popper\r\n       */\n\n      /**\r\n       * Collection of utilities useful when writing custom modifiers.\r\n       * Starting from version 1.7, this method is available only if you\r\n       * include `popper-utils.js` before `popper.js`.\r\n       *\r\n       * **DEPRECATION**: This way to access PopperUtils is deprecated\r\n       * and will be removed in v2! Use the PopperUtils module directly instead.\r\n       * Due to the high instability of the methods contained in Utils, we can't\r\n       * guarantee them to follow semver. Use them at your own risk!\r\n       * @static\r\n       * @private\r\n       * @type {Object}\r\n       * @deprecated since version 1.8\r\n       * @member Utils\r\n       * @memberof Popper\r\n       */\n\n    }]);\n    return Popper;\n  }();\n\n  /**\r\n   * The `referenceObject` is an object that provides an interface compatible with Popper.js\r\n   * and lets you use it as replacement of a real DOM node.<br />\r\n   * You can use this method to position a popper relatively to a set of coordinates\r\n   * in case you don't have a DOM node to use as reference.\r\n   *\r\n   * ```\r\n   * new Popper(referenceObject, popperNode);\r\n   * ```\r\n   *\r\n   * NB: This feature isn't supported in Internet Explorer 10\r\n   * @name referenceObject\r\n   * @property {Function} data.getBoundingClientRect\r\n   * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\r\n   * @property {number} data.clientWidth\r\n   * An ES6 getter that will return the width of the virtual reference element.\r\n   * @property {number} data.clientHeight\r\n   * An ES6 getter that will return the height of the virtual reference element.\r\n   */\n\n  Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n  Popper.placements = placements;\n  Popper.Defaults = Defaults;\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): dropdown.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var Dropdown = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Constants\r\n     * ------------------------------------------------------------------------\r\n     */\n    var NAME = 'dropdown';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.dropdown';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\n\n    var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key\n\n    var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key\n\n    var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key\n\n    var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key\n\n    var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)\n\n    var REGEXP_KEYDOWN = new RegExp(ARROW_UP_KEYCODE + \"|\" + ARROW_DOWN_KEYCODE + \"|\" + ESCAPE_KEYCODE);\n    var Event = {\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      CLICK: \"click\" + EVENT_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY,\n      KEYDOWN_DATA_API: \"keydown\" + EVENT_KEY + DATA_API_KEY,\n      KEYUP_DATA_API: \"keyup\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      DISABLED: 'disabled',\n      SHOW: 'show',\n      DROPUP: 'dropup',\n      DROPRIGHT: 'dropright',\n      DROPLEFT: 'dropleft',\n      MENURIGHT: 'dropdown-menu-right',\n      MENULEFT: 'dropdown-menu-left',\n      POSITION_STATIC: 'position-static'\n    };\n    var Selector = {\n      DATA_TOGGLE: '[data-toggle=\"dropdown\"]',\n      FORM_CHILD: '.dropdown form',\n      MENU: '.dropdown-menu',\n      NAVBAR_NAV: '.navbar-nav',\n      VISIBLE_ITEMS: '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n    };\n    var AttachmentMap = {\n      TOP: 'top-start',\n      TOPEND: 'top-end',\n      BOTTOM: 'bottom-start',\n      BOTTOMEND: 'bottom-end',\n      RIGHT: 'right-start',\n      RIGHTEND: 'right-end',\n      LEFT: 'left-start',\n      LEFTEND: 'left-end'\n    };\n    var Default = {\n      offset: 0,\n      flip: true,\n      boundary: 'scrollParent',\n      reference: 'toggle',\n      display: 'dynamic'\n    };\n    var DefaultType = {\n      offset: '(number|string|function)',\n      flip: 'boolean',\n      boundary: '(string|element)',\n      reference: '(string|element)',\n      display: 'string'\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * Class Definition\r\n       * ------------------------------------------------------------------------\r\n       */\n\n    };\n\n    var Dropdown =\n    /*#__PURE__*/\n    function () {\n      function Dropdown(element, config) {\n        this._element = element;\n        this._popper = null;\n        this._config = this._getConfig(config);\n        this._menu = this._getMenuElement();\n        this._inNavbar = this._detectNavbar();\n\n        this._addEventListeners();\n      } // Getters\n\n\n      var _proto = Dropdown.prototype;\n\n      // Public\n      _proto.toggle = function toggle() {\n        if (this._element.disabled || $$$1(this._element).hasClass(ClassName.DISABLED)) {\n          return;\n        }\n\n        var parent = Dropdown._getParentFromElement(this._element);\n\n        var isActive = $$$1(this._menu).hasClass(ClassName.SHOW);\n\n        Dropdown._clearMenus();\n\n        if (isActive) {\n          return;\n        }\n\n        var relatedTarget = {\n          relatedTarget: this._element\n        };\n        var showEvent = $$$1.Event(Event.SHOW, relatedTarget);\n        $$$1(parent).trigger(showEvent);\n\n        if (showEvent.isDefaultPrevented()) {\n          return;\n        } // Disable totally Popper.js for Dropdown in Navbar\n\n\n        if (!this._inNavbar) {\n          /**\r\n           * Check for Popper dependency\r\n           * Popper - https://popper.js.org\r\n           */\n          if (typeof Popper === 'undefined') {\n            throw new TypeError('Bootstrap dropdown require Popper.js (https://popper.js.org)');\n          }\n\n          var referenceElement = this._element;\n\n          if (this._config.reference === 'parent') {\n            referenceElement = parent;\n          } else if (Util.isElement(this._config.reference)) {\n            referenceElement = this._config.reference; // Check if it's jQuery element\n\n            if (typeof this._config.reference.jquery !== 'undefined') {\n              referenceElement = this._config.reference[0];\n            }\n          } // If boundary is not `scrollParent`, then set position to `static`\n          // to allow the menu to \"escape\" the scroll parent's boundaries\n          // https://github.com/twbs/bootstrap/issues/24251\n\n\n          if (this._config.boundary !== 'scrollParent') {\n            $$$1(parent).addClass(ClassName.POSITION_STATIC);\n          }\n\n          this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig());\n        } // If this is a touch-enabled device we add extra\n        // empty mouseover listeners to the body's immediate children;\n        // only needed because of broken event delegation on iOS\n        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n\n        if ('ontouchstart' in document.documentElement && $$$1(parent).closest(Selector.NAVBAR_NAV).length === 0) {\n          $$$1(document.body).children().on('mouseover', null, $$$1.noop);\n        }\n\n        this._element.focus();\n\n        this._element.setAttribute('aria-expanded', true);\n\n        $$$1(this._menu).toggleClass(ClassName.SHOW);\n        $$$1(parent).toggleClass(ClassName.SHOW).trigger($$$1.Event(Event.SHOWN, relatedTarget));\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        $$$1(this._element).off(EVENT_KEY);\n        this._element = null;\n        this._menu = null;\n\n        if (this._popper !== null) {\n          this._popper.destroy();\n\n          this._popper = null;\n        }\n      };\n\n      _proto.update = function update() {\n        this._inNavbar = this._detectNavbar();\n\n        if (this._popper !== null) {\n          this._popper.scheduleUpdate();\n        }\n      }; // Private\n\n\n      _proto._addEventListeners = function _addEventListeners() {\n        var _this = this;\n\n        $$$1(this._element).on(Event.CLICK, function (event) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          _this.toggle();\n        });\n      };\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, this.constructor.Default, $$$1(this._element).data(), config);\n        Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n        return config;\n      };\n\n      _proto._getMenuElement = function _getMenuElement() {\n        if (!this._menu) {\n          var parent = Dropdown._getParentFromElement(this._element);\n\n          if (parent) {\n            this._menu = parent.querySelector(Selector.MENU);\n          }\n        }\n\n        return this._menu;\n      };\n\n      _proto._getPlacement = function _getPlacement() {\n        var $parentDropdown = $$$1(this._element.parentNode);\n        var placement = AttachmentMap.BOTTOM; // Handle dropup\n\n        if ($parentDropdown.hasClass(ClassName.DROPUP)) {\n          placement = AttachmentMap.TOP;\n\n          if ($$$1(this._menu).hasClass(ClassName.MENURIGHT)) {\n            placement = AttachmentMap.TOPEND;\n          }\n        } else if ($parentDropdown.hasClass(ClassName.DROPRIGHT)) {\n          placement = AttachmentMap.RIGHT;\n        } else if ($parentDropdown.hasClass(ClassName.DROPLEFT)) {\n          placement = AttachmentMap.LEFT;\n        } else if ($$$1(this._menu).hasClass(ClassName.MENURIGHT)) {\n          placement = AttachmentMap.BOTTOMEND;\n        }\n\n        return placement;\n      };\n\n      _proto._detectNavbar = function _detectNavbar() {\n        return $$$1(this._element).closest('.navbar').length > 0;\n      };\n\n      _proto._getPopperConfig = function _getPopperConfig() {\n        var _this2 = this;\n\n        var offsetConf = {};\n\n        if (typeof this._config.offset === 'function') {\n          offsetConf.fn = function (data) {\n            data.offsets = _objectSpread({}, data.offsets, _this2._config.offset(data.offsets) || {});\n            return data;\n          };\n        } else {\n          offsetConf.offset = this._config.offset;\n        }\n\n        var popperConfig = {\n          placement: this._getPlacement(),\n          modifiers: {\n            offset: offsetConf,\n            flip: {\n              enabled: this._config.flip\n            },\n            preventOverflow: {\n              boundariesElement: this._config.boundary\n            } // Disable Popper.js if we have a static display\n\n          } };\n\n        if (this._config.display === 'static') {\n          popperConfig.modifiers.applyStyle = {\n            enabled: false\n          };\n        }\n\n        return popperConfig;\n      }; // Static\n\n\n      Dropdown._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' ? config : null;\n\n          if (!data) {\n            data = new Dropdown(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      Dropdown._clearMenus = function _clearMenus(event) {\n        if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {\n          return;\n        }\n\n        var toggles = [].slice.call(document.querySelectorAll(Selector.DATA_TOGGLE));\n\n        for (var i = 0, len = toggles.length; i < len; i++) {\n          var parent = Dropdown._getParentFromElement(toggles[i]);\n\n          var context = $$$1(toggles[i]).data(DATA_KEY);\n          var relatedTarget = {\n            relatedTarget: toggles[i]\n          };\n\n          if (event && event.type === 'click') {\n            relatedTarget.clickEvent = event;\n          }\n\n          if (!context) {\n            continue;\n          }\n\n          var dropdownMenu = context._menu;\n\n          if (!$$$1(parent).hasClass(ClassName.SHOW)) {\n            continue;\n          }\n\n          if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $$$1.contains(parent, event.target)) {\n            continue;\n          }\n\n          var hideEvent = $$$1.Event(Event.HIDE, relatedTarget);\n          $$$1(parent).trigger(hideEvent);\n\n          if (hideEvent.isDefaultPrevented()) {\n            continue;\n          } // If this is a touch-enabled device we remove the extra\n          // empty mouseover listeners we added for iOS support\n\n\n          if ('ontouchstart' in document.documentElement) {\n            $$$1(document.body).children().off('mouseover', null, $$$1.noop);\n          }\n\n          toggles[i].setAttribute('aria-expanded', 'false');\n          $$$1(dropdownMenu).removeClass(ClassName.SHOW);\n          $$$1(parent).removeClass(ClassName.SHOW).trigger($$$1.Event(Event.HIDDEN, relatedTarget));\n        }\n      };\n\n      Dropdown._getParentFromElement = function _getParentFromElement(element) {\n        var parent;\n        var selector = Util.getSelectorFromElement(element);\n\n        if (selector) {\n          parent = document.querySelector(selector);\n        }\n\n        return parent || element.parentNode;\n      }; // eslint-disable-next-line complexity\n\n\n      Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {\n        // If not input/textarea:\n        //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\n        // If input/textarea:\n        //  - If space key => not a dropdown command\n        //  - If key is other than escape\n        //    - If key is not up or down => not a dropdown command\n        //    - If trigger inside the menu => not a dropdown command\n        if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $$$1(event.target).closest(Selector.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.disabled || $$$1(this).hasClass(ClassName.DISABLED)) {\n          return;\n        }\n\n        var parent = Dropdown._getParentFromElement(this);\n\n        var isActive = $$$1(parent).hasClass(ClassName.SHOW);\n\n        if (!isActive && (event.which !== ESCAPE_KEYCODE || event.which !== SPACE_KEYCODE) || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {\n          if (event.which === ESCAPE_KEYCODE) {\n            var toggle = parent.querySelector(Selector.DATA_TOGGLE);\n            $$$1(toggle).trigger('focus');\n          }\n\n          $$$1(this).trigger('click');\n          return;\n        }\n\n        var items = [].slice.call(parent.querySelectorAll(Selector.VISIBLE_ITEMS));\n\n        if (items.length === 0) {\n          return;\n        }\n\n        var index = items.indexOf(event.target);\n\n        if (event.which === ARROW_UP_KEYCODE && index > 0) {\n          // Up\n          index--;\n        }\n\n        if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\n          // Down\n          index++;\n        }\n\n        if (index < 0) {\n          index = 0;\n        }\n\n        items[index].focus();\n      };\n\n      _createClass(Dropdown, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }, {\n        key: \"DefaultType\",\n        get: function get() {\n          return DefaultType;\n        }\n      }]);\n\n      return Dropdown;\n    }();\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Data Api implementation\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.MENU, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API + \" \" + Event.KEYUP_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      Dropdown._jQueryInterface.call($$$1(this), 'toggle');\n    }).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (e) {\n      e.stopPropagation();\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * jQuery\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1.fn[NAME] = Dropdown._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Dropdown;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Dropdown._jQueryInterface;\n    };\n\n    return Dropdown;\n  }($, Popper);\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): modal.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var Modal = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Constants\r\n     * ------------------------------------------------------------------------\r\n     */\n    var NAME = 'modal';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.modal';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\n\n    var Default = {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: true\n    };\n    var DefaultType = {\n      backdrop: '(boolean|string)',\n      keyboard: 'boolean',\n      focus: 'boolean',\n      show: 'boolean'\n    };\n    var Event = {\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      FOCUSIN: \"focusin\" + EVENT_KEY,\n      RESIZE: \"resize\" + EVENT_KEY,\n      CLICK_DISMISS: \"click.dismiss\" + EVENT_KEY,\n      KEYDOWN_DISMISS: \"keydown.dismiss\" + EVENT_KEY,\n      MOUSEUP_DISMISS: \"mouseup.dismiss\" + EVENT_KEY,\n      MOUSEDOWN_DISMISS: \"mousedown.dismiss\" + EVENT_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n      BACKDROP: 'modal-backdrop',\n      OPEN: 'modal-open',\n      FADE: 'fade',\n      SHOW: 'show'\n    };\n    var Selector = {\n      DIALOG: '.modal-dialog',\n      DATA_TOGGLE: '[data-toggle=\"modal\"]',\n      DATA_DISMISS: '[data-dismiss=\"modal\"]',\n      FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n      STICKY_CONTENT: '.sticky-top'\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * Class Definition\r\n       * ------------------------------------------------------------------------\r\n       */\n\n    };\n\n    var Modal =\n    /*#__PURE__*/\n    function () {\n      function Modal(element, config) {\n        this._config = this._getConfig(config);\n        this._element = element;\n        this._dialog = element.querySelector(Selector.DIALOG);\n        this._backdrop = null;\n        this._isShown = false;\n        this._isBodyOverflowing = false;\n        this._ignoreBackdropClick = false;\n        this._scrollbarWidth = 0;\n      } // Getters\n\n\n      var _proto = Modal.prototype;\n\n      // Public\n      _proto.toggle = function toggle(relatedTarget) {\n        return this._isShown ? this.hide() : this.show(relatedTarget);\n      };\n\n      _proto.show = function show(relatedTarget) {\n        var _this = this;\n\n        if (this._isTransitioning || this._isShown) {\n          return;\n        }\n\n        if ($$$1(this._element).hasClass(ClassName.FADE)) {\n          this._isTransitioning = true;\n        }\n\n        var showEvent = $$$1.Event(Event.SHOW, {\n          relatedTarget: relatedTarget\n        });\n        $$$1(this._element).trigger(showEvent);\n\n        if (this._isShown || showEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        this._isShown = true;\n\n        this._checkScrollbar();\n\n        this._setScrollbar();\n\n        this._adjustDialog();\n\n        $$$1(document.body).addClass(ClassName.OPEN);\n\n        this._setEscapeEvent();\n\n        this._setResizeEvent();\n\n        $$$1(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function (event) {\n          return _this.hide(event);\n        });\n        $$$1(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {\n          $$$1(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {\n            if ($$$1(event.target).is(_this._element)) {\n              _this._ignoreBackdropClick = true;\n            }\n          });\n        });\n\n        this._showBackdrop(function () {\n          return _this._showElement(relatedTarget);\n        });\n      };\n\n      _proto.hide = function hide(event) {\n        var _this2 = this;\n\n        if (event) {\n          event.preventDefault();\n        }\n\n        if (this._isTransitioning || !this._isShown) {\n          return;\n        }\n\n        var hideEvent = $$$1.Event(Event.HIDE);\n        $$$1(this._element).trigger(hideEvent);\n\n        if (!this._isShown || hideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        this._isShown = false;\n        var transition = $$$1(this._element).hasClass(ClassName.FADE);\n\n        if (transition) {\n          this._isTransitioning = true;\n        }\n\n        this._setEscapeEvent();\n\n        this._setResizeEvent();\n\n        $$$1(document).off(Event.FOCUSIN);\n        $$$1(this._element).removeClass(ClassName.SHOW);\n        $$$1(this._element).off(Event.CLICK_DISMISS);\n        $$$1(this._dialog).off(Event.MOUSEDOWN_DISMISS);\n\n        if (transition) {\n          var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n          $$$1(this._element).one(Util.TRANSITION_END, function (event) {\n            return _this2._hideModal(event);\n          }).emulateTransitionEnd(transitionDuration);\n        } else {\n          this._hideModal();\n        }\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        $$$1(window, document, this._element, this._backdrop).off(EVENT_KEY);\n        this._config = null;\n        this._element = null;\n        this._dialog = null;\n        this._backdrop = null;\n        this._isShown = null;\n        this._isBodyOverflowing = null;\n        this._ignoreBackdropClick = null;\n        this._scrollbarWidth = null;\n      };\n\n      _proto.handleUpdate = function handleUpdate() {\n        this._adjustDialog();\n      }; // Private\n\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, Default, config);\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      };\n\n      _proto._showElement = function _showElement(relatedTarget) {\n        var _this3 = this;\n\n        var transition = $$$1(this._element).hasClass(ClassName.FADE);\n\n        if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n          // Don't move modal's DOM position\n          document.body.appendChild(this._element);\n        }\n\n        this._element.style.display = 'block';\n\n        this._element.removeAttribute('aria-hidden');\n\n        this._element.scrollTop = 0;\n\n        if (transition) {\n          Util.reflow(this._element);\n        }\n\n        $$$1(this._element).addClass(ClassName.SHOW);\n\n        if (this._config.focus) {\n          this._enforceFocus();\n        }\n\n        var shownEvent = $$$1.Event(Event.SHOWN, {\n          relatedTarget: relatedTarget\n        });\n\n        var transitionComplete = function transitionComplete() {\n          if (_this3._config.focus) {\n            _this3._element.focus();\n          }\n\n          _this3._isTransitioning = false;\n          $$$1(_this3._element).trigger(shownEvent);\n        };\n\n        if (transition) {\n          var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n          $$$1(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);\n        } else {\n          transitionComplete();\n        }\n      };\n\n      _proto._enforceFocus = function _enforceFocus() {\n        var _this4 = this;\n\n        $$$1(document).off(Event.FOCUSIN) // Guard against infinite focus loop\n        .on(Event.FOCUSIN, function (event) {\n          if (document !== event.target && _this4._element !== event.target && $$$1(_this4._element).has(event.target).length === 0) {\n            _this4._element.focus();\n          }\n        });\n      };\n\n      _proto._setEscapeEvent = function _setEscapeEvent() {\n        var _this5 = this;\n\n        if (this._isShown && this._config.keyboard) {\n          $$$1(this._element).on(Event.KEYDOWN_DISMISS, function (event) {\n            if (event.which === ESCAPE_KEYCODE) {\n              event.preventDefault();\n\n              _this5.hide();\n            }\n          });\n        } else if (!this._isShown) {\n          $$$1(this._element).off(Event.KEYDOWN_DISMISS);\n        }\n      };\n\n      _proto._setResizeEvent = function _setResizeEvent() {\n        var _this6 = this;\n\n        if (this._isShown) {\n          $$$1(window).on(Event.RESIZE, function (event) {\n            return _this6.handleUpdate(event);\n          });\n        } else {\n          $$$1(window).off(Event.RESIZE);\n        }\n      };\n\n      _proto._hideModal = function _hideModal() {\n        var _this7 = this;\n\n        this._element.style.display = 'none';\n\n        this._element.setAttribute('aria-hidden', true);\n\n        this._isTransitioning = false;\n\n        this._showBackdrop(function () {\n          $$$1(document.body).removeClass(ClassName.OPEN);\n\n          _this7._resetAdjustments();\n\n          _this7._resetScrollbar();\n\n          $$$1(_this7._element).trigger(Event.HIDDEN);\n        });\n      };\n\n      _proto._removeBackdrop = function _removeBackdrop() {\n        if (this._backdrop) {\n          $$$1(this._backdrop).remove();\n          this._backdrop = null;\n        }\n      };\n\n      _proto._showBackdrop = function _showBackdrop(callback) {\n        var _this8 = this;\n\n        var animate = $$$1(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';\n\n        if (this._isShown && this._config.backdrop) {\n          this._backdrop = document.createElement('div');\n          this._backdrop.className = ClassName.BACKDROP;\n\n          if (animate) {\n            this._backdrop.classList.add(animate);\n          }\n\n          $$$1(this._backdrop).appendTo(document.body);\n          $$$1(this._element).on(Event.CLICK_DISMISS, function (event) {\n            if (_this8._ignoreBackdropClick) {\n              _this8._ignoreBackdropClick = false;\n              return;\n            }\n\n            if (event.target !== event.currentTarget) {\n              return;\n            }\n\n            if (_this8._config.backdrop === 'static') {\n              _this8._element.focus();\n            } else {\n              _this8.hide();\n            }\n          });\n\n          if (animate) {\n            Util.reflow(this._backdrop);\n          }\n\n          $$$1(this._backdrop).addClass(ClassName.SHOW);\n\n          if (!callback) {\n            return;\n          }\n\n          if (!animate) {\n            callback();\n            return;\n          }\n\n          var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);\n          $$$1(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);\n        } else if (!this._isShown && this._backdrop) {\n          $$$1(this._backdrop).removeClass(ClassName.SHOW);\n\n          var callbackRemove = function callbackRemove() {\n            _this8._removeBackdrop();\n\n            if (callback) {\n              callback();\n            }\n          };\n\n          if ($$$1(this._element).hasClass(ClassName.FADE)) {\n            var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);\n\n            $$$1(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);\n          } else {\n            callbackRemove();\n          }\n        } else if (callback) {\n          callback();\n        }\n      }; // ----------------------------------------------------------------------\n      // the following methods are used to handle overflowing modals\n      // todo (fat): these should probably be refactored out of modal.js\n      // ----------------------------------------------------------------------\n\n\n      _proto._adjustDialog = function _adjustDialog() {\n        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\n        if (!this._isBodyOverflowing && isModalOverflowing) {\n          this._element.style.paddingLeft = this._scrollbarWidth + \"px\";\n        }\n\n        if (this._isBodyOverflowing && !isModalOverflowing) {\n          this._element.style.paddingRight = this._scrollbarWidth + \"px\";\n        }\n      };\n\n      _proto._resetAdjustments = function _resetAdjustments() {\n        this._element.style.paddingLeft = '';\n        this._element.style.paddingRight = '';\n      };\n\n      _proto._checkScrollbar = function _checkScrollbar() {\n        var rect = document.body.getBoundingClientRect();\n        this._isBodyOverflowing = rect.left + rect.right < window.innerWidth;\n        this._scrollbarWidth = this._getScrollbarWidth();\n      };\n\n      _proto._setScrollbar = function _setScrollbar() {\n        var _this9 = this;\n\n        if (this._isBodyOverflowing) {\n          // Note: DOMNode.style.paddingRight returns the actual value or '' if not set\n          //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set\n          var fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT));\n          var stickyContent = [].slice.call(document.querySelectorAll(Selector.STICKY_CONTENT)); // Adjust fixed content padding\n\n          $$$1(fixedContent).each(function (index, element) {\n            var actualPadding = element.style.paddingRight;\n            var calculatedPadding = $$$1(element).css('padding-right');\n            $$$1(element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this9._scrollbarWidth + \"px\");\n          }); // Adjust sticky content margin\n\n          $$$1(stickyContent).each(function (index, element) {\n            var actualMargin = element.style.marginRight;\n            var calculatedMargin = $$$1(element).css('margin-right');\n            $$$1(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this9._scrollbarWidth + \"px\");\n          }); // Adjust body padding\n\n          var actualPadding = document.body.style.paddingRight;\n          var calculatedPadding = $$$1(document.body).css('padding-right');\n          $$$1(document.body).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + \"px\");\n        }\n      };\n\n      _proto._resetScrollbar = function _resetScrollbar() {\n        // Restore fixed content padding\n        var fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT));\n        $$$1(fixedContent).each(function (index, element) {\n          var padding = $$$1(element).data('padding-right');\n          $$$1(element).removeData('padding-right');\n          element.style.paddingRight = padding ? padding : '';\n        }); // Restore sticky content\n\n        var elements = [].slice.call(document.querySelectorAll(\"\" + Selector.STICKY_CONTENT));\n        $$$1(elements).each(function (index, element) {\n          var margin = $$$1(element).data('margin-right');\n\n          if (typeof margin !== 'undefined') {\n            $$$1(element).css('margin-right', margin).removeData('margin-right');\n          }\n        }); // Restore body padding\n\n        var padding = $$$1(document.body).data('padding-right');\n        $$$1(document.body).removeData('padding-right');\n        document.body.style.paddingRight = padding ? padding : '';\n      };\n\n      _proto._getScrollbarWidth = function _getScrollbarWidth() {\n        // thx d.walsh\n        var scrollDiv = document.createElement('div');\n        scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n        document.body.appendChild(scrollDiv);\n        var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n      }; // Static\n\n\n      Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = _objectSpread({}, Default, $$$1(this).data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config ? config : {});\n\n          if (!data) {\n            data = new Modal(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config](relatedTarget);\n          } else if (_config.show) {\n            data.show(relatedTarget);\n          }\n        });\n      };\n\n      _createClass(Modal, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return Modal;\n    }();\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Data Api implementation\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      var _this10 = this;\n\n      var target;\n      var selector = Util.getSelectorFromElement(this);\n\n      if (selector) {\n        target = document.querySelector(selector);\n      }\n\n      var config = $$$1(target).data(DATA_KEY) ? 'toggle' : _objectSpread({}, $$$1(target).data(), $$$1(this).data());\n\n      if (this.tagName === 'A' || this.tagName === 'AREA') {\n        event.preventDefault();\n      }\n\n      var $target = $$$1(target).one(Event.SHOW, function (showEvent) {\n        if (showEvent.isDefaultPrevented()) {\n          // Only register focus restorer if modal will actually get shown\n          return;\n        }\n\n        $target.one(Event.HIDDEN, function () {\n          if ($$$1(_this10).is(':visible')) {\n            _this10.focus();\n          }\n        });\n      });\n\n      Modal._jQueryInterface.call($$$1(target), config, this);\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * jQuery\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1.fn[NAME] = Modal._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Modal;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Modal._jQueryInterface;\n    };\n\n    return Modal;\n  }($);\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): tooltip.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var Tooltip = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Constants\r\n     * ------------------------------------------------------------------------\r\n     */\n    var NAME = 'tooltip';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.tooltip';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var CLASS_PREFIX = 'bs-tooltip';\n    var BSCLS_PREFIX_REGEX = new RegExp(\"(^|\\\\s)\" + CLASS_PREFIX + \"\\\\S+\", 'g');\n    var DefaultType = {\n      animation: 'boolean',\n      template: 'string',\n      title: '(string|element|function)',\n      trigger: 'string',\n      delay: '(number|object)',\n      html: 'boolean',\n      selector: '(string|boolean)',\n      placement: '(string|function)',\n      offset: '(number|string)',\n      container: '(string|element|boolean)',\n      fallbackPlacement: '(string|array)',\n      boundary: '(string|element)'\n    };\n    var AttachmentMap = {\n      AUTO: 'auto',\n      TOP: 'top',\n      RIGHT: 'right',\n      BOTTOM: 'bottom',\n      LEFT: 'left'\n    };\n    var Default = {\n      animation: true,\n      template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n      trigger: 'hover focus',\n      title: '',\n      delay: 0,\n      html: false,\n      selector: false,\n      placement: 'top',\n      offset: 0,\n      container: false,\n      fallbackPlacement: 'flip',\n      boundary: 'scrollParent'\n    };\n    var HoverState = {\n      SHOW: 'show',\n      OUT: 'out'\n    };\n    var Event = {\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      INSERTED: \"inserted\" + EVENT_KEY,\n      CLICK: \"click\" + EVENT_KEY,\n      FOCUSIN: \"focusin\" + EVENT_KEY,\n      FOCUSOUT: \"focusout\" + EVENT_KEY,\n      MOUSEENTER: \"mouseenter\" + EVENT_KEY,\n      MOUSELEAVE: \"mouseleave\" + EVENT_KEY\n    };\n    var ClassName = {\n      FADE: 'fade',\n      SHOW: 'show'\n    };\n    var Selector = {\n      TOOLTIP: '.tooltip',\n      TOOLTIP_INNER: '.tooltip-inner',\n      ARROW: '.arrow'\n    };\n    var Trigger = {\n      HOVER: 'hover',\n      FOCUS: 'focus',\n      CLICK: 'click',\n      MANUAL: 'manual'\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * Class Definition\r\n       * ------------------------------------------------------------------------\r\n       */\n\n    };\n\n    var Tooltip =\n    /*#__PURE__*/\n    function () {\n      function Tooltip(element, config) {\n        /**\r\n         * Check for Popper dependency\r\n         * Popper - https://popper.js.org\r\n         */\n        if (typeof Popper === 'undefined') {\n          throw new TypeError('Bootstrap tooltips require Popper.js (https://popper.js.org)');\n        } // private\n\n\n        this._isEnabled = true;\n        this._timeout = 0;\n        this._hoverState = '';\n        this._activeTrigger = {};\n        this._popper = null; // Protected\n\n        this.element = element;\n        this.config = this._getConfig(config);\n        this.tip = null;\n\n        this._setListeners();\n      } // Getters\n\n\n      var _proto = Tooltip.prototype;\n\n      // Public\n      _proto.enable = function enable() {\n        this._isEnabled = true;\n      };\n\n      _proto.disable = function disable() {\n        this._isEnabled = false;\n      };\n\n      _proto.toggleEnabled = function toggleEnabled() {\n        this._isEnabled = !this._isEnabled;\n      };\n\n      _proto.toggle = function toggle(event) {\n        if (!this._isEnabled) {\n          return;\n        }\n\n        if (event) {\n          var dataKey = this.constructor.DATA_KEY;\n          var context = $$$1(event.currentTarget).data(dataKey);\n\n          if (!context) {\n            context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n            $$$1(event.currentTarget).data(dataKey, context);\n          }\n\n          context._activeTrigger.click = !context._activeTrigger.click;\n\n          if (context._isWithActiveTrigger()) {\n            context._enter(null, context);\n          } else {\n            context._leave(null, context);\n          }\n        } else {\n          if ($$$1(this.getTipElement()).hasClass(ClassName.SHOW)) {\n            this._leave(null, this);\n\n            return;\n          }\n\n          this._enter(null, this);\n        }\n      };\n\n      _proto.dispose = function dispose() {\n        clearTimeout(this._timeout);\n        $$$1.removeData(this.element, this.constructor.DATA_KEY);\n        $$$1(this.element).off(this.constructor.EVENT_KEY);\n        $$$1(this.element).closest('.modal').off('hide.bs.modal');\n\n        if (this.tip) {\n          $$$1(this.tip).remove();\n        }\n\n        this._isEnabled = null;\n        this._timeout = null;\n        this._hoverState = null;\n        this._activeTrigger = null;\n\n        if (this._popper !== null) {\n          this._popper.destroy();\n        }\n\n        this._popper = null;\n        this.element = null;\n        this.config = null;\n        this.tip = null;\n      };\n\n      _proto.show = function show() {\n        var _this = this;\n\n        if ($$$1(this.element).css('display') === 'none') {\n          throw new Error('Please use show on visible elements');\n        }\n\n        var showEvent = $$$1.Event(this.constructor.Event.SHOW);\n\n        if (this.isWithContent() && this._isEnabled) {\n          $$$1(this.element).trigger(showEvent);\n          var isInTheDom = $$$1.contains(this.element.ownerDocument.documentElement, this.element);\n\n          if (showEvent.isDefaultPrevented() || !isInTheDom) {\n            return;\n          }\n\n          var tip = this.getTipElement();\n          var tipId = Util.getUID(this.constructor.NAME);\n          tip.setAttribute('id', tipId);\n          this.element.setAttribute('aria-describedby', tipId);\n          this.setContent();\n\n          if (this.config.animation) {\n            $$$1(tip).addClass(ClassName.FADE);\n          }\n\n          var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n\n          var attachment = this._getAttachment(placement);\n\n          this.addAttachmentClass(attachment);\n          var container = this.config.container === false ? document.body : $$$1(document).find(this.config.container);\n          $$$1(tip).data(this.constructor.DATA_KEY, this);\n\n          if (!$$$1.contains(this.element.ownerDocument.documentElement, this.tip)) {\n            $$$1(tip).appendTo(container);\n          }\n\n          $$$1(this.element).trigger(this.constructor.Event.INSERTED);\n          this._popper = new Popper(this.element, tip, {\n            placement: attachment,\n            modifiers: {\n              offset: {\n                offset: this.config.offset\n              },\n              flip: {\n                behavior: this.config.fallbackPlacement\n              },\n              arrow: {\n                element: Selector.ARROW\n              },\n              preventOverflow: {\n                boundariesElement: this.config.boundary\n              }\n            },\n            onCreate: function onCreate(data) {\n              if (data.originalPlacement !== data.placement) {\n                _this._handlePopperPlacementChange(data);\n              }\n            },\n            onUpdate: function onUpdate(data) {\n              _this._handlePopperPlacementChange(data);\n            }\n          });\n          $$$1(tip).addClass(ClassName.SHOW); // If this is a touch-enabled device we add extra\n          // empty mouseover listeners to the body's immediate children;\n          // only needed because of broken event delegation on iOS\n          // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n          if ('ontouchstart' in document.documentElement) {\n            $$$1(document.body).children().on('mouseover', null, $$$1.noop);\n          }\n\n          var complete = function complete() {\n            if (_this.config.animation) {\n              _this._fixTransition();\n            }\n\n            var prevHoverState = _this._hoverState;\n            _this._hoverState = null;\n            $$$1(_this.element).trigger(_this.constructor.Event.SHOWN);\n\n            if (prevHoverState === HoverState.OUT) {\n              _this._leave(null, _this);\n            }\n          };\n\n          if ($$$1(this.tip).hasClass(ClassName.FADE)) {\n            var transitionDuration = Util.getTransitionDurationFromElement(this.tip);\n            $$$1(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n          } else {\n            complete();\n          }\n        }\n      };\n\n      _proto.hide = function hide(callback) {\n        var _this2 = this;\n\n        var tip = this.getTipElement();\n        var hideEvent = $$$1.Event(this.constructor.Event.HIDE);\n\n        var complete = function complete() {\n          if (_this2._hoverState !== HoverState.SHOW && tip.parentNode) {\n            tip.parentNode.removeChild(tip);\n          }\n\n          _this2._cleanTipClass();\n\n          _this2.element.removeAttribute('aria-describedby');\n\n          $$$1(_this2.element).trigger(_this2.constructor.Event.HIDDEN);\n\n          if (_this2._popper !== null) {\n            _this2._popper.destroy();\n          }\n\n          if (callback) {\n            callback();\n          }\n        };\n\n        $$$1(this.element).trigger(hideEvent);\n\n        if (hideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        $$$1(tip).removeClass(ClassName.SHOW); // If this is a touch-enabled device we remove the extra\n        // empty mouseover listeners we added for iOS support\n\n        if ('ontouchstart' in document.documentElement) {\n          $$$1(document.body).children().off('mouseover', null, $$$1.noop);\n        }\n\n        this._activeTrigger[Trigger.CLICK] = false;\n        this._activeTrigger[Trigger.FOCUS] = false;\n        this._activeTrigger[Trigger.HOVER] = false;\n\n        if ($$$1(this.tip).hasClass(ClassName.FADE)) {\n          var transitionDuration = Util.getTransitionDurationFromElement(tip);\n          $$$1(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n        } else {\n          complete();\n        }\n\n        this._hoverState = '';\n      };\n\n      _proto.update = function update() {\n        if (this._popper !== null) {\n          this._popper.scheduleUpdate();\n        }\n      }; // Protected\n\n\n      _proto.isWithContent = function isWithContent() {\n        return Boolean(this.getTitle());\n      };\n\n      _proto.addAttachmentClass = function addAttachmentClass(attachment) {\n        $$$1(this.getTipElement()).addClass(CLASS_PREFIX + \"-\" + attachment);\n      };\n\n      _proto.getTipElement = function getTipElement() {\n        this.tip = this.tip || $$$1(this.config.template)[0];\n        return this.tip;\n      };\n\n      _proto.setContent = function setContent() {\n        var tip = this.getTipElement();\n        this.setElementContent($$$1(tip.querySelectorAll(Selector.TOOLTIP_INNER)), this.getTitle());\n        $$$1(tip).removeClass(ClassName.FADE + \" \" + ClassName.SHOW);\n      };\n\n      _proto.setElementContent = function setElementContent($element, content) {\n        var html = this.config.html;\n\n        if ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) === 'object' && (content.nodeType || content.jquery)) {\n          // Content is a DOM node or a jQuery\n          if (html) {\n            if (!$$$1(content).parent().is($element)) {\n              $element.empty().append(content);\n            }\n          } else {\n            $element.text($$$1(content).text());\n          }\n        } else {\n          $element[html ? 'html' : 'text'](content);\n        }\n      };\n\n      _proto.getTitle = function getTitle() {\n        var title = this.element.getAttribute('data-original-title');\n\n        if (!title) {\n          title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n        }\n\n        return title;\n      }; // Private\n\n\n      _proto._getAttachment = function _getAttachment(placement) {\n        return AttachmentMap[placement.toUpperCase()];\n      };\n\n      _proto._setListeners = function _setListeners() {\n        var _this3 = this;\n\n        var triggers = this.config.trigger.split(' ');\n        triggers.forEach(function (trigger) {\n          if (trigger === 'click') {\n            $$$1(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, function (event) {\n              return _this3.toggle(event);\n            });\n          } else if (trigger !== Trigger.MANUAL) {\n            var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;\n            var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;\n            $$$1(_this3.element).on(eventIn, _this3.config.selector, function (event) {\n              return _this3._enter(event);\n            }).on(eventOut, _this3.config.selector, function (event) {\n              return _this3._leave(event);\n            });\n          }\n\n          $$$1(_this3.element).closest('.modal').on('hide.bs.modal', function () {\n            return _this3.hide();\n          });\n        });\n\n        if (this.config.selector) {\n          this.config = _objectSpread({}, this.config, {\n            trigger: 'manual',\n            selector: ''\n          });\n        } else {\n          this._fixTitle();\n        }\n      };\n\n      _proto._fixTitle = function _fixTitle() {\n        var titleType = _typeof(this.element.getAttribute('data-original-title'));\n\n        if (this.element.getAttribute('title') || titleType !== 'string') {\n          this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n          this.element.setAttribute('title', '');\n        }\n      };\n\n      _proto._enter = function _enter(event, context) {\n        var dataKey = this.constructor.DATA_KEY;\n        context = context || $$$1(event.currentTarget).data(dataKey);\n\n        if (!context) {\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n          $$$1(event.currentTarget).data(dataKey, context);\n        }\n\n        if (event) {\n          context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\n        }\n\n        if ($$$1(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {\n          context._hoverState = HoverState.SHOW;\n          return;\n        }\n\n        clearTimeout(context._timeout);\n        context._hoverState = HoverState.SHOW;\n\n        if (!context.config.delay || !context.config.delay.show) {\n          context.show();\n          return;\n        }\n\n        context._timeout = setTimeout(function () {\n          if (context._hoverState === HoverState.SHOW) {\n            context.show();\n          }\n        }, context.config.delay.show);\n      };\n\n      _proto._leave = function _leave(event, context) {\n        var dataKey = this.constructor.DATA_KEY;\n        context = context || $$$1(event.currentTarget).data(dataKey);\n\n        if (!context) {\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n          $$$1(event.currentTarget).data(dataKey, context);\n        }\n\n        if (event) {\n          context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\n        }\n\n        if (context._isWithActiveTrigger()) {\n          return;\n        }\n\n        clearTimeout(context._timeout);\n        context._hoverState = HoverState.OUT;\n\n        if (!context.config.delay || !context.config.delay.hide) {\n          context.hide();\n          return;\n        }\n\n        context._timeout = setTimeout(function () {\n          if (context._hoverState === HoverState.OUT) {\n            context.hide();\n          }\n        }, context.config.delay.hide);\n      };\n\n      _proto._isWithActiveTrigger = function _isWithActiveTrigger() {\n        for (var trigger in this._activeTrigger) {\n          if (this._activeTrigger[trigger]) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, this.constructor.Default, $$$1(this.element).data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config ? config : {});\n\n        if (typeof config.delay === 'number') {\n          config.delay = {\n            show: config.delay,\n            hide: config.delay\n          };\n        }\n\n        if (typeof config.title === 'number') {\n          config.title = config.title.toString();\n        }\n\n        if (typeof config.content === 'number') {\n          config.content = config.content.toString();\n        }\n\n        Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\n        return config;\n      };\n\n      _proto._getDelegateConfig = function _getDelegateConfig() {\n        var config = {};\n\n        if (this.config) {\n          for (var key in this.config) {\n            if (this.constructor.Default[key] !== this.config[key]) {\n              config[key] = this.config[key];\n            }\n          }\n        }\n\n        return config;\n      };\n\n      _proto._cleanTipClass = function _cleanTipClass() {\n        var $tip = $$$1(this.getTipElement());\n        var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);\n\n        if (tabClass !== null && tabClass.length) {\n          $tip.removeClass(tabClass.join(''));\n        }\n      };\n\n      _proto._handlePopperPlacementChange = function _handlePopperPlacementChange(popperData) {\n        var popperInstance = popperData.instance;\n        this.tip = popperInstance.popper;\n\n        this._cleanTipClass();\n\n        this.addAttachmentClass(this._getAttachment(popperData.placement));\n      };\n\n      _proto._fixTransition = function _fixTransition() {\n        var tip = this.getTipElement();\n        var initConfigAnimation = this.config.animation;\n\n        if (tip.getAttribute('x-placement') !== null) {\n          return;\n        }\n\n        $$$1(tip).removeClass(ClassName.FADE);\n        this.config.animation = false;\n        this.hide();\n        this.show();\n        this.config.animation = initConfigAnimation;\n      }; // Static\n\n\n      Tooltip._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config;\n\n          if (!data && /dispose|hide/.test(config)) {\n            return;\n          }\n\n          if (!data) {\n            data = new Tooltip(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(Tooltip, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }, {\n        key: \"NAME\",\n        get: function get() {\n          return NAME;\n        }\n      }, {\n        key: \"DATA_KEY\",\n        get: function get() {\n          return DATA_KEY;\n        }\n      }, {\n        key: \"Event\",\n        get: function get() {\n          return Event;\n        }\n      }, {\n        key: \"EVENT_KEY\",\n        get: function get() {\n          return EVENT_KEY;\n        }\n      }, {\n        key: \"DefaultType\",\n        get: function get() {\n          return DefaultType;\n        }\n      }]);\n\n      return Tooltip;\n    }();\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * jQuery\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1.fn[NAME] = Tooltip._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Tooltip;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Tooltip._jQueryInterface;\n    };\n\n    return Tooltip;\n  }($, Popper);\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): popover.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var Popover = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Constants\r\n     * ------------------------------------------------------------------------\r\n     */\n    var NAME = 'popover';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.popover';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var CLASS_PREFIX = 'bs-popover';\n    var BSCLS_PREFIX_REGEX = new RegExp(\"(^|\\\\s)\" + CLASS_PREFIX + \"\\\\S+\", 'g');\n\n    var Default = _objectSpread({}, Tooltip.Default, {\n      placement: 'right',\n      trigger: 'click',\n      content: '',\n      template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div></div>'\n    });\n\n    var DefaultType = _objectSpread({}, Tooltip.DefaultType, {\n      content: '(string|element|function)'\n    });\n\n    var ClassName = {\n      FADE: 'fade',\n      SHOW: 'show'\n    };\n    var Selector = {\n      TITLE: '.popover-header',\n      CONTENT: '.popover-body'\n    };\n    var Event = {\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      INSERTED: \"inserted\" + EVENT_KEY,\n      CLICK: \"click\" + EVENT_KEY,\n      FOCUSIN: \"focusin\" + EVENT_KEY,\n      FOCUSOUT: \"focusout\" + EVENT_KEY,\n      MOUSEENTER: \"mouseenter\" + EVENT_KEY,\n      MOUSELEAVE: \"mouseleave\" + EVENT_KEY\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * Class Definition\r\n       * ------------------------------------------------------------------------\r\n       */\n\n    };\n\n    var Popover =\n    /*#__PURE__*/\n    function (_Tooltip) {\n      _inheritsLoose(Popover, _Tooltip);\n\n      function Popover() {\n        return _Tooltip.apply(this, arguments) || this;\n      }\n\n      var _proto = Popover.prototype;\n\n      // Overrides\n      _proto.isWithContent = function isWithContent() {\n        return this.getTitle() || this._getContent();\n      };\n\n      _proto.addAttachmentClass = function addAttachmentClass(attachment) {\n        $$$1(this.getTipElement()).addClass(CLASS_PREFIX + \"-\" + attachment);\n      };\n\n      _proto.getTipElement = function getTipElement() {\n        this.tip = this.tip || $$$1(this.config.template)[0];\n        return this.tip;\n      };\n\n      _proto.setContent = function setContent() {\n        var $tip = $$$1(this.getTipElement()); // We use append for html objects to maintain js events\n\n        this.setElementContent($tip.find(Selector.TITLE), this.getTitle());\n\n        var content = this._getContent();\n\n        if (typeof content === 'function') {\n          content = content.call(this.element);\n        }\n\n        this.setElementContent($tip.find(Selector.CONTENT), content);\n        $tip.removeClass(ClassName.FADE + \" \" + ClassName.SHOW);\n      }; // Private\n\n\n      _proto._getContent = function _getContent() {\n        return this.element.getAttribute('data-content') || this.config.content;\n      };\n\n      _proto._cleanTipClass = function _cleanTipClass() {\n        var $tip = $$$1(this.getTipElement());\n        var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);\n\n        if (tabClass !== null && tabClass.length > 0) {\n          $tip.removeClass(tabClass.join(''));\n        }\n      }; // Static\n\n\n      Popover._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' ? config : null;\n\n          if (!data && /destroy|hide/.test(config)) {\n            return;\n          }\n\n          if (!data) {\n            data = new Popover(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(Popover, null, [{\n        key: \"VERSION\",\n        // Getters\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }, {\n        key: \"NAME\",\n        get: function get() {\n          return NAME;\n        }\n      }, {\n        key: \"DATA_KEY\",\n        get: function get() {\n          return DATA_KEY;\n        }\n      }, {\n        key: \"Event\",\n        get: function get() {\n          return Event;\n        }\n      }, {\n        key: \"EVENT_KEY\",\n        get: function get() {\n          return EVENT_KEY;\n        }\n      }, {\n        key: \"DefaultType\",\n        get: function get() {\n          return DefaultType;\n        }\n      }]);\n\n      return Popover;\n    }(Tooltip);\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * jQuery\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1.fn[NAME] = Popover._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Popover;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Popover._jQueryInterface;\n    };\n\n    return Popover;\n  }($);\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): scrollspy.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var ScrollSpy = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Constants\r\n     * ------------------------------------------------------------------------\r\n     */\n    var NAME = 'scrollspy';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.scrollspy';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var Default = {\n      offset: 10,\n      method: 'auto',\n      target: ''\n    };\n    var DefaultType = {\n      offset: 'number',\n      method: 'string',\n      target: '(string|element)'\n    };\n    var Event = {\n      ACTIVATE: \"activate\" + EVENT_KEY,\n      SCROLL: \"scroll\" + EVENT_KEY,\n      LOAD_DATA_API: \"load\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      DROPDOWN_ITEM: 'dropdown-item',\n      DROPDOWN_MENU: 'dropdown-menu',\n      ACTIVE: 'active'\n    };\n    var Selector = {\n      DATA_SPY: '[data-spy=\"scroll\"]',\n      ACTIVE: '.active',\n      NAV_LIST_GROUP: '.nav, .list-group',\n      NAV_LINKS: '.nav-link',\n      NAV_ITEMS: '.nav-item',\n      LIST_ITEMS: '.list-group-item',\n      DROPDOWN: '.dropdown',\n      DROPDOWN_ITEMS: '.dropdown-item',\n      DROPDOWN_TOGGLE: '.dropdown-toggle'\n    };\n    var OffsetMethod = {\n      OFFSET: 'offset',\n      POSITION: 'position'\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * Class Definition\r\n       * ------------------------------------------------------------------------\r\n       */\n\n    };\n\n    var ScrollSpy =\n    /*#__PURE__*/\n    function () {\n      function ScrollSpy(element, config) {\n        var _this = this;\n\n        this._element = element;\n        this._scrollElement = element.tagName === 'BODY' ? window : element;\n        this._config = this._getConfig(config);\n        this._selector = this._config.target + \" \" + Selector.NAV_LINKS + \",\" + (this._config.target + \" \" + Selector.LIST_ITEMS + \",\") + (this._config.target + \" \" + Selector.DROPDOWN_ITEMS);\n        this._offsets = [];\n        this._targets = [];\n        this._activeTarget = null;\n        this._scrollHeight = 0;\n        $$$1(this._scrollElement).on(Event.SCROLL, function (event) {\n          return _this._process(event);\n        });\n        this.refresh();\n\n        this._process();\n      } // Getters\n\n\n      var _proto = ScrollSpy.prototype;\n\n      // Public\n      _proto.refresh = function refresh() {\n        var _this2 = this;\n\n        var autoMethod = this._scrollElement === this._scrollElement.window ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\n        var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n        var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;\n        this._offsets = [];\n        this._targets = [];\n        this._scrollHeight = this._getScrollHeight();\n        var targets = [].slice.call(document.querySelectorAll(this._selector));\n        targets.map(function (element) {\n          var target;\n          var targetSelector = Util.getSelectorFromElement(element);\n\n          if (targetSelector) {\n            target = document.querySelector(targetSelector);\n          }\n\n          if (target) {\n            var targetBCR = target.getBoundingClientRect();\n\n            if (targetBCR.width || targetBCR.height) {\n              // TODO (fat): remove sketch reliance on jQuery position/offset\n              return [$$$1(target)[offsetMethod]().top + offsetBase, targetSelector];\n            }\n          }\n\n          return null;\n        }).filter(function (item) {\n          return item;\n        }).sort(function (a, b) {\n          return a[0] - b[0];\n        }).forEach(function (item) {\n          _this2._offsets.push(item[0]);\n\n          _this2._targets.push(item[1]);\n        });\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        $$$1(this._scrollElement).off(EVENT_KEY);\n        this._element = null;\n        this._scrollElement = null;\n        this._config = null;\n        this._selector = null;\n        this._offsets = null;\n        this._targets = null;\n        this._activeTarget = null;\n        this._scrollHeight = null;\n      }; // Private\n\n\n      _proto._getConfig = function _getConfig(config) {\n        config = _objectSpread({}, Default, (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config ? config : {});\n\n        if (typeof config.target !== 'string') {\n          var id = $$$1(config.target).attr('id');\n\n          if (!id) {\n            id = Util.getUID(NAME);\n            $$$1(config.target).attr('id', id);\n          }\n\n          config.target = \"#\" + id;\n        }\n\n        Util.typeCheckConfig(NAME, config, DefaultType);\n        return config;\n      };\n\n      _proto._getScrollTop = function _getScrollTop() {\n        return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;\n      };\n\n      _proto._getScrollHeight = function _getScrollHeight() {\n        return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n      };\n\n      _proto._getOffsetHeight = function _getOffsetHeight() {\n        return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;\n      };\n\n      _proto._process = function _process() {\n        var scrollTop = this._getScrollTop() + this._config.offset;\n\n        var scrollHeight = this._getScrollHeight();\n\n        var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\n\n        if (this._scrollHeight !== scrollHeight) {\n          this.refresh();\n        }\n\n        if (scrollTop >= maxScroll) {\n          var target = this._targets[this._targets.length - 1];\n\n          if (this._activeTarget !== target) {\n            this._activate(target);\n          }\n\n          return;\n        }\n\n        if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n          this._activeTarget = null;\n\n          this._clear();\n\n          return;\n        }\n\n        var offsetLength = this._offsets.length;\n\n        for (var i = offsetLength; i--;) {\n          var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);\n\n          if (isActiveTarget) {\n            this._activate(this._targets[i]);\n          }\n        }\n      };\n\n      _proto._activate = function _activate(target) {\n        this._activeTarget = target;\n\n        this._clear();\n\n        var queries = this._selector.split(','); // eslint-disable-next-line arrow-body-style\n\n\n        queries = queries.map(function (selector) {\n          return selector + \"[data-target=\\\"\" + target + \"\\\"],\" + (selector + \"[href=\\\"\" + target + \"\\\"]\");\n        });\n        var $link = $$$1([].slice.call(document.querySelectorAll(queries.join(','))));\n\n        if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\n          $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\n          $link.addClass(ClassName.ACTIVE);\n        } else {\n          // Set triggered link as active\n          $link.addClass(ClassName.ACTIVE); // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n          $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_LINKS + \", \" + Selector.LIST_ITEMS).addClass(ClassName.ACTIVE); // Handle special case when .nav-link is inside .nav-item\n\n          $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).children(Selector.NAV_LINKS).addClass(ClassName.ACTIVE);\n        }\n\n        $$$1(this._scrollElement).trigger(Event.ACTIVATE, {\n          relatedTarget: target\n        });\n      };\n\n      _proto._clear = function _clear() {\n        var nodes = [].slice.call(document.querySelectorAll(this._selector));\n        $$$1(nodes).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\n      }; // Static\n\n\n      ScrollSpy._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var data = $$$1(this).data(DATA_KEY);\n\n          var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config;\n\n          if (!data) {\n            data = new ScrollSpy(this, _config);\n            $$$1(this).data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(ScrollSpy, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: \"Default\",\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return ScrollSpy;\n    }();\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Data Api implementation\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1(window).on(Event.LOAD_DATA_API, function () {\n      var scrollSpys = [].slice.call(document.querySelectorAll(Selector.DATA_SPY));\n      var scrollSpysLength = scrollSpys.length;\n\n      for (var i = scrollSpysLength; i--;) {\n        var $spy = $$$1(scrollSpys[i]);\n\n        ScrollSpy._jQueryInterface.call($spy, $spy.data());\n      }\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * jQuery\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1.fn[NAME] = ScrollSpy._jQueryInterface;\n    $$$1.fn[NAME].Constructor = ScrollSpy;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return ScrollSpy._jQueryInterface;\n    };\n\n    return ScrollSpy;\n  }($);\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): tab.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  var Tab = function ($$$1) {\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Constants\r\n     * ------------------------------------------------------------------------\r\n     */\n    var NAME = 'tab';\n    var VERSION = '4.1.3';\n    var DATA_KEY = 'bs.tab';\n    var EVENT_KEY = \".\" + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $$$1.fn[NAME];\n    var Event = {\n      HIDE: \"hide\" + EVENT_KEY,\n      HIDDEN: \"hidden\" + EVENT_KEY,\n      SHOW: \"show\" + EVENT_KEY,\n      SHOWN: \"shown\" + EVENT_KEY,\n      CLICK_DATA_API: \"click\" + EVENT_KEY + DATA_API_KEY\n    };\n    var ClassName = {\n      DROPDOWN_MENU: 'dropdown-menu',\n      ACTIVE: 'active',\n      DISABLED: 'disabled',\n      FADE: 'fade',\n      SHOW: 'show'\n    };\n    var Selector = {\n      DROPDOWN: '.dropdown',\n      NAV_LIST_GROUP: '.nav, .list-group',\n      ACTIVE: '.active',\n      ACTIVE_UL: '> li > .active',\n      DATA_TOGGLE: '[data-toggle=\"tab\"], [data-toggle=\"pill\"], [data-toggle=\"list\"]',\n      DROPDOWN_TOGGLE: '.dropdown-toggle',\n      DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * Class Definition\r\n       * ------------------------------------------------------------------------\r\n       */\n\n    };\n\n    var Tab =\n    /*#__PURE__*/\n    function () {\n      function Tab(element) {\n        this._element = element;\n      } // Getters\n\n\n      var _proto = Tab.prototype;\n\n      // Public\n      _proto.show = function show() {\n        var _this = this;\n\n        if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $$$1(this._element).hasClass(ClassName.ACTIVE) || $$$1(this._element).hasClass(ClassName.DISABLED)) {\n          return;\n        }\n\n        var target;\n        var previous;\n        var listElement = $$$1(this._element).closest(Selector.NAV_LIST_GROUP)[0];\n        var selector = Util.getSelectorFromElement(this._element);\n\n        if (listElement) {\n          var itemSelector = listElement.nodeName === 'UL' ? Selector.ACTIVE_UL : Selector.ACTIVE;\n          previous = $$$1.makeArray($$$1(listElement).find(itemSelector));\n          previous = previous[previous.length - 1];\n        }\n\n        var hideEvent = $$$1.Event(Event.HIDE, {\n          relatedTarget: this._element\n        });\n        var showEvent = $$$1.Event(Event.SHOW, {\n          relatedTarget: previous\n        });\n\n        if (previous) {\n          $$$1(previous).trigger(hideEvent);\n        }\n\n        $$$1(this._element).trigger(showEvent);\n\n        if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {\n          return;\n        }\n\n        if (selector) {\n          target = document.querySelector(selector);\n        }\n\n        this._activate(this._element, listElement);\n\n        var complete = function complete() {\n          var hiddenEvent = $$$1.Event(Event.HIDDEN, {\n            relatedTarget: _this._element\n          });\n          var shownEvent = $$$1.Event(Event.SHOWN, {\n            relatedTarget: previous\n          });\n          $$$1(previous).trigger(hiddenEvent);\n          $$$1(_this._element).trigger(shownEvent);\n        };\n\n        if (target) {\n          this._activate(target, target.parentNode, complete);\n        } else {\n          complete();\n        }\n      };\n\n      _proto.dispose = function dispose() {\n        $$$1.removeData(this._element, DATA_KEY);\n        this._element = null;\n      }; // Private\n\n\n      _proto._activate = function _activate(element, container, callback) {\n        var _this2 = this;\n\n        var activeElements;\n\n        if (container.nodeName === 'UL') {\n          activeElements = $$$1(container).find(Selector.ACTIVE_UL);\n        } else {\n          activeElements = $$$1(container).children(Selector.ACTIVE);\n        }\n\n        var active = activeElements[0];\n        var isTransitioning = callback && active && $$$1(active).hasClass(ClassName.FADE);\n\n        var complete = function complete() {\n          return _this2._transitionComplete(element, active, callback);\n        };\n\n        if (active && isTransitioning) {\n          var transitionDuration = Util.getTransitionDurationFromElement(active);\n          $$$1(active).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n        } else {\n          complete();\n        }\n      };\n\n      _proto._transitionComplete = function _transitionComplete(element, active, callback) {\n        if (active) {\n          $$$1(active).removeClass(ClassName.SHOW + \" \" + ClassName.ACTIVE);\n          var dropdownChild = $$$1(active.parentNode).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];\n\n          if (dropdownChild) {\n            $$$1(dropdownChild).removeClass(ClassName.ACTIVE);\n          }\n\n          if (active.getAttribute('role') === 'tab') {\n            active.setAttribute('aria-selected', false);\n          }\n        }\n\n        $$$1(element).addClass(ClassName.ACTIVE);\n\n        if (element.getAttribute('role') === 'tab') {\n          element.setAttribute('aria-selected', true);\n        }\n\n        Util.reflow(element);\n        $$$1(element).addClass(ClassName.SHOW);\n\n        if (element.parentNode && $$$1(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {\n          var dropdownElement = $$$1(element).closest(Selector.DROPDOWN)[0];\n\n          if (dropdownElement) {\n            var dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(Selector.DROPDOWN_TOGGLE));\n            $$$1(dropdownToggleList).addClass(ClassName.ACTIVE);\n          }\n\n          element.setAttribute('aria-expanded', true);\n        }\n\n        if (callback) {\n          callback();\n        }\n      }; // Static\n\n\n      Tab._jQueryInterface = function _jQueryInterface(config) {\n        return this.each(function () {\n          var $this = $$$1(this);\n          var data = $this.data(DATA_KEY);\n\n          if (!data) {\n            data = new Tab(this);\n            $this.data(DATA_KEY, data);\n          }\n\n          if (typeof config === 'string') {\n            if (typeof data[config] === 'undefined') {\n              throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n            }\n\n            data[config]();\n          }\n        });\n      };\n\n      _createClass(Tab, null, [{\n        key: \"VERSION\",\n        get: function get() {\n          return VERSION;\n        }\n      }]);\n\n      return Tab;\n    }();\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * Data Api implementation\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      event.preventDefault();\n\n      Tab._jQueryInterface.call($$$1(this), 'show');\n    });\n    /**\r\n     * ------------------------------------------------------------------------\r\n     * jQuery\r\n     * ------------------------------------------------------------------------\r\n     */\n\n    $$$1.fn[NAME] = Tab._jQueryInterface;\n    $$$1.fn[NAME].Constructor = Tab;\n\n    $$$1.fn[NAME].noConflict = function () {\n      $$$1.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Tab._jQueryInterface;\n    };\n\n    return Tab;\n  }($);\n\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * Bootstrap (v4.1.3): index.js\r\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n   * --------------------------------------------------------------------------\r\n   */\n\n  (function ($$$1) {\n    if (typeof $$$1 === 'undefined') {\n      throw new TypeError('Bootstrap\\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\\'s JavaScript.');\n    }\n\n    var version = $$$1.fn.jquery.split(' ')[0].split('.');\n    var minMajor = 1;\n    var ltMajor = 2;\n    var minMinor = 9;\n    var minPatch = 1;\n    var maxMajor = 4;\n\n    if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {\n      throw new Error('Bootstrap\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');\n    }\n  })($);\n\n  exports.Util = Util;\n  exports.Alert = Alert;\n  exports.Button = Button;\n  exports.Carousel = Carousel;\n  exports.Collapse = Collapse;\n  exports.Dropdown = Dropdown;\n  exports.Modal = Modal;\n  exports.Popover = Popover;\n  exports.Scrollspy = ScrollSpy;\n  exports.Tab = Tab;\n  exports.Tooltip = Tooltip;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n});\n//# sourceMappingURL=bootstrap.bundle.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./assets/js/lib/bootstrap.bundle.js?");

/***/ }),

/***/ "./assets/js/lib/bootstrap.jasny.js":
/*!******************************************!*\
  !*** ./assets/js/lib/bootstrap.jasny.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\r\n * Jasny Bootstrap v3.1.3 (http://jasny.github.io/bootstrap)\r\n * Copyright 2012-2014 Arnold Daniels\r\n * Licensed under Apache-2.0 (https://github.com/jasny/bootstrap/blob/master/LICENSE)\r\n */\n\nif (typeof jQuery === 'undefined') {\n  throw new Error('Jasny Bootstrap\\'s JavaScript requires jQuery');\n}\n\n/* ========================================================================\r\n * Bootstrap: transition.js v3.1.3\r\n * http://getbootstrap.com/javascript/#transitions\r\n * ========================================================================\r\n * Copyright 2011-2014 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap');\n\n    var transEndEventNames = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend'\n    };\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] };\n      }\n    }\n\n    return false; // explicit for ie8 (  ._.)\n  }\n\n  if ($.support.transition !== undefined) return; // Prevent conflict with Twitter Bootstrap\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false,\n        $el = this;\n    $(this).one($.support.transition.end, function () {\n      called = true;\n    });\n    var callback = function callback() {\n      if (!called) $($el).trigger($.support.transition.end);\n    };\n    setTimeout(callback, duration);\n    return this;\n  };\n\n  $(function () {\n    $.support.transition = transitionEnd();\n  });\n}(window.jQuery);\n\n/* ========================================================================\r\n * Bootstrap: offcanvas.js v3.1.3\r\n * http://jasny.github.io/bootstrap/javascript/#offcanvas\r\n * ========================================================================\r\n * Copyright 2013-2014 Arnold Daniels\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\")\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ======================================================================== */\n\n+function ($) {\n  \"use strict\";\n\n  // OFFCANVAS PUBLIC CLASS DEFINITION\n  // =================================\n\n  var OffCanvas = function OffCanvas(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, OffCanvas.DEFAULTS, options);\n    this.state = null;\n    this.placement = null;\n\n    if (this.options.recalc) {\n      this.calcClone();\n      $(window).on('resize', $.proxy(this.recalc, this));\n    }\n\n    if (this.options.autohide) $(document).on('click', $.proxy(this.autohide, this));\n\n    if (this.options.toggle) this.toggle();\n\n    if (this.options.disablescrolling) {\n      this.options.disableScrolling = this.options.disablescrolling;\n      delete this.options.disablescrolling;\n    }\n  };\n\n  OffCanvas.DEFAULTS = {\n    toggle: true,\n    placement: 'auto',\n    autohide: true,\n    recalc: true,\n    disableScrolling: true\n  };\n\n  OffCanvas.prototype.offset = function () {\n    switch (this.placement) {\n      case 'left':\n      case 'right':\n        return this.$element.outerWidth();\n      case 'top':\n      case 'bottom':\n        return this.$element.outerHeight();\n    }\n  };\n\n  OffCanvas.prototype.calcPlacement = function () {\n    if (this.options.placement !== 'auto') {\n      this.placement = this.options.placement;\n      return;\n    }\n\n    if (!this.$element.hasClass('in')) {\n      this.$element.css('visiblity', 'hidden !important').addClass('in').addClass('show');\n    }\n\n    var horizontal = $(window).width() / this.$element.width();\n    var vertical = $(window).height() / this.$element.height();\n\n    var element = this.$element;\n    function ab(a, b) {\n      if (element.css(b) === 'auto') return a;\n      if (element.css(a) === 'auto') return b;\n\n      var size_a = parseInt(element.css(a), 10);\n      var size_b = parseInt(element.css(b), 10);\n\n      return size_a > size_b ? b : a;\n    }\n\n    this.placement = horizontal >= vertical ? ab('left', 'right') : ab('top', 'bottom');\n\n    if (this.$element.css('visibility') === 'hidden !important') {\n      this.$element.removeClass('in').removeClass('show').css('visiblity', '');\n    }\n  };\n\n  OffCanvas.prototype.opposite = function (placement) {\n    switch (placement) {\n      case 'top':\n        return 'bottom';\n      case 'left':\n        return 'right';\n      case 'bottom':\n        return 'top';\n      case 'right':\n        return 'left';\n    }\n  };\n\n  OffCanvas.prototype.getCanvasElements = function () {\n    // Return a set containing the canvas plus all fixed elements\n    var canvas = this.options.canvas ? $(this.options.canvas) : this.$element;\n\n    var fixed_elements = canvas.find('*').filter(function () {\n      return $(this).css('position') === 'fixed';\n    }).not(this.options.exclude);\n\n    return canvas.add(fixed_elements);\n  };\n\n  OffCanvas.prototype.slide = function (elements, offset, callback) {\n    // Use jQuery animation if CSS transitions aren't supported\n    if (!$.support.transition) {\n      var anim = {};\n      anim[this.placement] = \"+=\" + offset;\n      return elements.animate(anim, 350, callback);\n    }\n\n    var placement = this.placement;\n    var opposite = this.opposite(placement);\n\n    elements.each(function () {\n      if ($(this).css(placement) !== 'auto') $(this).css(placement, (parseInt($(this).css(placement), 10) || 0) + offset);\n\n      if ($(this).css(opposite) !== 'auto') $(this).css(opposite, (parseInt($(this).css(opposite), 10) || 0) - offset);\n    });\n\n    this.$element.one($.support.transition.end, callback).emulateTransitionEnd(350);\n  };\n\n  OffCanvas.prototype.disableScrolling = function () {\n    var bodyWidth = $('body').width();\n    var prop = 'padding-' + this.opposite(this.placement);\n\n    if ($('body').data('offcanvas-style') === undefined) {\n      $('body').data('offcanvas-style', $('body').attr('style') || '');\n    }\n\n    $('body').css('overflow', 'hidden');\n\n    if ($('body').width() > bodyWidth) {\n      var padding = parseInt($('body').css(prop), 10) + $('body').width() - bodyWidth;\n\n      setTimeout(function () {\n        $('body').css(prop, padding);\n      }, 1);\n    }\n  };\n\n  OffCanvas.prototype.show = function () {\n    if (this.state) return;\n\n    var startEvent = $.Event('show.bs.offcanvas');\n    this.$element.trigger(startEvent);\n    if (startEvent.isDefaultPrevented()) return;\n\n    this.state = 'slide-in';\n    this.calcPlacement();\n\n    var elements = this.getCanvasElements();\n    var placement = this.placement;\n    var opposite = this.opposite(placement);\n    var offset = this.offset();\n\n    if (elements.index(this.$element) !== -1) {\n      $(this.$element).data('offcanvas-style', $(this.$element).attr('style') || '');\n      this.$element.css(placement, -1 * offset);\n      this.$element.css(placement); // Workaround: Need to get the CSS property for it to be applied before the next line of code\n    }\n\n    elements.addClass('canvas-sliding').each(function () {\n      if ($(this).data('offcanvas-style') === undefined) $(this).data('offcanvas-style', $(this).attr('style') || '');\n      if ($(this).css('position') === 'static') $(this).css('position', 'relative');\n      if (($(this).css(placement) === 'auto' || $(this).css(placement) === '0px') && ($(this).css(opposite) === 'auto' || $(this).css(opposite) === '0px')) {\n        $(this).css(placement, 0);\n      }\n    });\n\n    if (this.options.disableScrolling) this.disableScrolling();\n\n    var complete = function complete() {\n      if (this.state != 'slide-in') return;\n\n      this.state = 'slid';\n\n      elements.removeClass('canvas-sliding').addClass('canvas-slid');\n      this.$element.trigger('shown.bs.offcanvas');\n    };\n\n    setTimeout($.proxy(function () {\n      this.$element.addClass('in').addClass('show');\n      this.slide(elements, offset, $.proxy(complete, this));\n    }, this), 1);\n  };\n\n  OffCanvas.prototype.hide = function (fast) {\n    if (this.state !== 'slid') return;\n\n    var startEvent = $.Event('hide.bs.offcanvas');\n    this.$element.trigger(startEvent);\n    if (startEvent.isDefaultPrevented()) return;\n\n    this.state = 'slide-out';\n\n    var elements = $('.canvas-slid');\n    var placement = this.placement;\n    var offset = -1 * this.offset();\n\n    var complete = function complete() {\n      if (this.state != 'slide-out') return;\n\n      this.state = null;\n      this.placement = null;\n\n      this.$element.removeClass('in').removeClass('show');\n\n      elements.removeClass('canvas-sliding');\n      elements.add(this.$element).add('body').each(function () {\n        $(this).attr('style', $(this).data('offcanvas-style')).removeData('offcanvas-style');\n      });\n\n      this.$element.trigger('hidden.bs.offcanvas');\n    };\n\n    elements.removeClass('canvas-slid').addClass('canvas-sliding');\n\n    setTimeout($.proxy(function () {\n      this.slide(elements, offset, $.proxy(complete, this));\n    }, this), 1);\n  };\n\n  OffCanvas.prototype.toggle = function () {\n    if (this.state === 'slide-in' || this.state === 'slide-out') return;\n    this[this.state === 'slid' ? 'hide' : 'show']();\n  };\n\n  OffCanvas.prototype.calcClone = function () {\n    this.$calcClone = this.$element.clone().html('').addClass('offcanvas-clone').removeClass('in').removeClass('show').appendTo($('body'));\n  };\n\n  OffCanvas.prototype.recalc = function () {\n    if (this.$calcClone.css('display') === 'none' || this.state !== 'slid' && this.state !== 'slide-in') return;\n\n    this.state = null;\n    this.placement = null;\n    var elements = this.getCanvasElements();\n\n    this.$element.removeClass('in').removeClass('show');\n\n    elements.removeClass('canvas-slid');\n    elements.add(this.$element).add('body').each(function () {\n      $(this).attr('style', $(this).data('offcanvas-style')).removeData('offcanvas-style');\n    });\n  };\n\n  OffCanvas.prototype.autohide = function (e) {\n    if ($(e.target).closest(this.$element).length === 0) this.hide();\n  };\n\n  // OFFCANVAS PLUGIN DEFINITION\n  // ==========================\n\n  var old = $.fn.offcanvas;\n\n  $.fn.offcanvas = function (option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.offcanvas');\n      var options = $.extend({}, OffCanvas.DEFAULTS, $this.data(), (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option);\n\n      if (!data) $this.data('bs.offcanvas', data = new OffCanvas(this, options));\n      if (typeof option === 'string') data[option]();\n    });\n  };\n\n  $.fn.offcanvas.Constructor = OffCanvas;\n\n  // OFFCANVAS NO CONFLICT\n  // ====================\n\n  $.fn.offcanvas.noConflict = function () {\n    $.fn.offcanvas = old;\n    return this;\n  };\n\n  // OFFCANVAS DATA-API\n  // =================\n\n  $(document).on('click.bs.offcanvas.data-api', '[data-toggle=offcanvas]', function (e) {\n    var $this = $(this),\n        href;\n    var target = $this.attr('data-target') || e.preventDefault() || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, ''); //strip for ie7\n    var $canvas = $(target);\n    var data = $canvas.data('bs.offcanvas');\n    var option = data ? 'toggle' : $this.data();\n\n    e.stopPropagation();\n\n    if (data) data.toggle();else $canvas.offcanvas(option);\n  });\n}(window.jQuery);\n\n/* ============================================================\r\n * Bootstrap: rowlink.js v3.1.3\r\n * http://jasny.github.io/bootstrap/javascript/#rowlink\r\n * ============================================================\r\n * Copyright 2012-2014 Arnold Daniels\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ============================================================ */\n\n+function ($) {\n  \"use strict\";\n\n  var Rowlink = function Rowlink(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, Rowlink.DEFAULTS, options);\n\n    this.$element.on('click.bs.rowlink', 'td:not(.rowlink-skip)', $.proxy(this.click, this));\n  };\n\n  Rowlink.DEFAULTS = {\n    target: \"a\"\n  };\n\n  Rowlink.prototype.click = function (e) {\n    var target = $(e.currentTarget).closest('tr').find(this.options.target)[0];\n    if ($(e.target)[0] === target) return;\n\n    e.preventDefault();\n\n    if (target.click) {\n      target.click();\n    } else if (document.createEvent) {\n      var evt = document.createEvent(\"MouseEvents\");\n      evt.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n      target.dispatchEvent(evt);\n    }\n  };\n\n  // ROWLINK PLUGIN DEFINITION\n  // ===========================\n\n  var old = $.fn.rowlink;\n\n  $.fn.rowlink = function (options) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.rowlink');\n      if (!data) $this.data('bs.rowlink', data = new Rowlink(this, options));\n    });\n  };\n\n  $.fn.rowlink.Constructor = Rowlink;\n\n  // ROWLINK NO CONFLICT\n  // ====================\n\n  $.fn.rowlink.noConflict = function () {\n    $.fn.rowlink = old;\n    return this;\n  };\n\n  // ROWLINK DATA-API\n  // ==================\n\n  $(document).on('click.bs.rowlink.data-api', '[data-link=\"row\"]', function (e) {\n    if ($(e.target).closest('.rowlink-skip').length !== 0) return;\n\n    var $this = $(this);\n    if ($this.data('bs.rowlink')) return;\n    $this.rowlink($this.data());\n    $(e.target).trigger('click.bs.rowlink');\n  });\n}(window.jQuery);\n\n/* ===========================================================\r\n * Bootstrap: inputmask.js v3.1.0\r\n * http://jasny.github.io/bootstrap/javascript/#inputmask\r\n * \r\n * Based on Masked Input plugin by Josh Bush (digitalbush.com)\r\n * ===========================================================\r\n * Copyright 2012-2014 Arnold Daniels\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\")\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ========================================================== */\n\n+function ($) {\n  \"use strict\";\n\n  var isIphone = window.orientation !== undefined;\n  var isAndroid = navigator.userAgent.toLowerCase().indexOf(\"android\") > -1;\n  var isIE = window.navigator.appName == 'Microsoft Internet Explorer';\n\n  // INPUTMASK PUBLIC CLASS DEFINITION\n  // =================================\n\n  var Inputmask = function Inputmask(element, options) {\n    if (isAndroid) return; // No support because caret positioning doesn't work on Android\n\n    this.$element = $(element);\n    this.options = $.extend({}, Inputmask.DEFAULTS, options);\n    this.mask = String(this.options.mask);\n\n    this.init();\n    this.listen();\n\n    this.checkVal(); //Perform initial check for existing values\n  };\n\n  Inputmask.DEFAULTS = {\n    mask: \"\",\n    placeholder: \"_\",\n    definitions: {\n      '9': \"[0-9]\",\n      'a': \"[A-Za-z]\",\n      'w': \"[A-Za-z0-9]\",\n      '*': \".\"\n    }\n  };\n\n  Inputmask.prototype.init = function () {\n    var defs = this.options.definitions;\n    var len = this.mask.length;\n\n    this.tests = [];\n    this.partialPosition = this.mask.length;\n    this.firstNonMaskPos = null;\n\n    $.each(this.mask.split(\"\"), $.proxy(function (i, c) {\n      if (c == '?') {\n        len--;\n        this.partialPosition = i;\n      } else if (defs[c]) {\n        this.tests.push(new RegExp(defs[c]));\n        if (this.firstNonMaskPos === null) this.firstNonMaskPos = this.tests.length - 1;\n      } else {\n        this.tests.push(null);\n      }\n    }, this));\n\n    this.buffer = $.map(this.mask.split(\"\"), $.proxy(function (c, i) {\n      if (c != '?') return defs[c] ? this.options.placeholder : c;\n    }, this));\n\n    this.focusText = this.$element.val();\n\n    this.$element.data(\"rawMaskFn\", $.proxy(function () {\n      return $.map(this.buffer, function (c, i) {\n        return this.tests[i] && c != this.options.placeholder ? c : null;\n      }).join('');\n    }, this));\n  };\n\n  Inputmask.prototype.listen = function () {\n    if (this.$element.attr(\"readonly\")) return;\n\n    var pasteEventName = (isIE ? 'paste' : 'input') + \".mask\";\n\n    this.$element.on(\"unmask.bs.inputmask\", $.proxy(this.unmask, this)).on(\"focus.bs.inputmask\", $.proxy(this.focusEvent, this)).on(\"blur.bs.inputmask\", $.proxy(this.blurEvent, this)).on(\"keydown.bs.inputmask\", $.proxy(this.keydownEvent, this)).on(\"keypress.bs.inputmask\", $.proxy(this.keypressEvent, this)).on(pasteEventName, $.proxy(this.pasteEvent, this));\n  };\n\n  //Helper Function for Caret positioning\n  Inputmask.prototype.caret = function (begin, end) {\n    if (this.$element.length === 0) return;\n    if (typeof begin == 'number') {\n      end = typeof end == 'number' ? end : begin;\n      return this.$element.each(function () {\n        if (this.setSelectionRange) {\n          this.setSelectionRange(begin, end);\n        } else if (this.createTextRange) {\n          var range = this.createTextRange();\n          range.collapse(true);\n          range.moveEnd('character', end);\n          range.moveStart('character', begin);\n          range.select();\n        }\n      });\n    } else {\n      if (this.$element[0].setSelectionRange) {\n        begin = this.$element[0].selectionStart;\n        end = this.$element[0].selectionEnd;\n      } else if (document.selection && document.selection.createRange) {\n        var range = document.selection.createRange();\n        begin = 0 - range.duplicate().moveStart('character', -100000);\n        end = begin + range.text.length;\n      }\n      return {\n        begin: begin,\n        end: end\n      };\n    }\n  };\n\n  Inputmask.prototype.seekNext = function (pos) {\n    var len = this.mask.length;\n    while (++pos <= len && !this.tests[pos]) {}\n\n    return pos;\n  };\n\n  Inputmask.prototype.seekPrev = function (pos) {\n    while (--pos >= 0 && !this.tests[pos]) {}\n\n    return pos;\n  };\n\n  Inputmask.prototype.shiftL = function (begin, end) {\n    var len = this.mask.length;\n\n    if (begin < 0) return;\n\n    for (var i = begin, j = this.seekNext(end); i < len; i++) {\n      if (this.tests[i]) {\n        if (j < len && this.tests[i].test(this.buffer[j])) {\n          this.buffer[i] = this.buffer[j];\n          this.buffer[j] = this.options.placeholder;\n        } else break;\n        j = this.seekNext(j);\n      }\n    }\n    this.writeBuffer();\n    this.caret(Math.max(this.firstNonMaskPos, begin));\n  };\n\n  Inputmask.prototype.shiftR = function (pos) {\n    var len = this.mask.length;\n\n    for (var i = pos, c = this.options.placeholder; i < len; i++) {\n      if (this.tests[i]) {\n        var j = this.seekNext(i);\n        var t = this.buffer[i];\n        this.buffer[i] = c;\n        if (j < len && this.tests[j].test(t)) c = t;else break;\n      }\n    }\n  }, Inputmask.prototype.unmask = function () {\n    this.$element.unbind(\".mask\").removeData(\"inputmask\");\n  };\n\n  Inputmask.prototype.focusEvent = function () {\n    this.focusText = this.$element.val();\n    var len = this.mask.length;\n    var pos = this.checkVal();\n    this.writeBuffer();\n\n    var that = this;\n    var moveCaret = function moveCaret() {\n      if (pos == len) that.caret(0, pos);else that.caret(pos);\n    };\n\n    moveCaret();\n    setTimeout(moveCaret, 50);\n  };\n\n  Inputmask.prototype.blurEvent = function () {\n    this.checkVal();\n    if (this.$element.val() !== this.focusText) this.$element.trigger('change');\n  };\n\n  Inputmask.prototype.keydownEvent = function (e) {\n    var k = e.which;\n\n    //backspace, delete, and escape get special treatment\n    if (k == 8 || k == 46 || isIphone && k == 127) {\n      var pos = this.caret(),\n          begin = pos.begin,\n          end = pos.end;\n\n      if (end - begin === 0) {\n        begin = k != 46 ? this.seekPrev(begin) : end = this.seekNext(begin - 1);\n        end = k == 46 ? this.seekNext(end) : end;\n      }\n      this.clearBuffer(begin, end);\n      this.shiftL(begin, end - 1);\n\n      return false;\n    } else if (k == 27) {\n      //escape\n      this.$element.val(this.focusText);\n      this.caret(0, this.checkVal());\n      return false;\n    }\n  };\n\n  Inputmask.prototype.keypressEvent = function (e) {\n    var len = this.mask.length;\n\n    var k = e.which,\n        pos = this.caret();\n\n    if (e.ctrlKey || e.altKey || e.metaKey || k < 32) {\n      //Ignore\n      return true;\n    } else if (k) {\n      if (pos.end - pos.begin !== 0) {\n        this.clearBuffer(pos.begin, pos.end);\n        this.shiftL(pos.begin, pos.end - 1);\n      }\n\n      var p = this.seekNext(pos.begin - 1);\n      if (p < len) {\n        var c = String.fromCharCode(k);\n        if (this.tests[p].test(c)) {\n          this.shiftR(p);\n          this.buffer[p] = c;\n          this.writeBuffer();\n          var next = this.seekNext(p);\n          this.caret(next);\n        }\n      }\n      return false;\n    }\n  };\n\n  Inputmask.prototype.pasteEvent = function () {\n    var that = this;\n\n    setTimeout(function () {\n      that.caret(that.checkVal(true));\n    }, 0);\n  };\n\n  Inputmask.prototype.clearBuffer = function (start, end) {\n    var len = this.mask.length;\n\n    for (var i = start; i < end && i < len; i++) {\n      if (this.tests[i]) this.buffer[i] = this.options.placeholder;\n    }\n  };\n\n  Inputmask.prototype.writeBuffer = function () {\n    return this.$element.val(this.buffer.join('')).val();\n  };\n\n  Inputmask.prototype.checkVal = function (allow) {\n    var len = this.mask.length;\n    //try to place characters where they belong\n    var test = this.$element.val();\n    var lastMatch = -1;\n\n    for (var i = 0, pos = 0; i < len; i++) {\n      if (this.tests[i]) {\n        this.buffer[i] = this.options.placeholder;\n        while (pos++ < test.length) {\n          var c = test.charAt(pos - 1);\n          if (this.tests[i].test(c)) {\n            this.buffer[i] = c;\n            lastMatch = i;\n            break;\n          }\n        }\n        if (pos > test.length) break;\n      } else if (this.buffer[i] == test.charAt(pos) && i != this.partialPosition) {\n        pos++;\n        lastMatch = i;\n      }\n    }\n    if (!allow && lastMatch + 1 < this.partialPosition) {\n      this.$element.val(\"\");\n      this.clearBuffer(0, len);\n    } else if (allow || lastMatch + 1 >= this.partialPosition) {\n      this.writeBuffer();\n      if (!allow) this.$element.val(this.$element.val().substring(0, lastMatch + 1));\n    }\n    return this.partialPosition ? i : this.firstNonMaskPos;\n  };\n\n  // INPUTMASK PLUGIN DEFINITION\n  // ===========================\n\n  var old = $.fn.inputmask;\n\n  $.fn.inputmask = function (options) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.inputmask');\n\n      if (!data) $this.data('bs.inputmask', data = new Inputmask(this, options));\n    });\n  };\n\n  $.fn.inputmask.Constructor = Inputmask;\n\n  // INPUTMASK NO CONFLICT\n  // ====================\n\n  $.fn.inputmask.noConflict = function () {\n    $.fn.inputmask = old;\n    return this;\n  };\n\n  // INPUTMASK DATA-API\n  // ==================\n\n  $(document).on('focus.bs.inputmask.data-api', '[data-mask]', function (e) {\n    var $this = $(this);\n    if ($this.data('bs.inputmask')) return;\n    $this.inputmask($this.data());\n  });\n}(window.jQuery);\n\n/* ===========================================================\r\n * Bootstrap: fileinput.js v3.1.3\r\n * http://jasny.github.com/bootstrap/javascript/#fileinput\r\n * ===========================================================\r\n * Copyright 2012-2014 Arnold Daniels\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\")\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ========================================================== */\n\n+function ($) {\n  \"use strict\";\n\n  var isIE = window.navigator.appName == 'Microsoft Internet Explorer';\n\n  // FILEUPLOAD PUBLIC CLASS DEFINITION\n  // =================================\n\n  var Fileinput = function Fileinput(element, options) {\n    this.$element = $(element);\n\n    this.$input = this.$element.find(':file');\n    if (this.$input.length === 0) return;\n\n    this.name = this.$input.attr('name') || options.name;\n\n    this.$hidden = this.$element.find('input[type=hidden][name=\"' + this.name + '\"]');\n    if (this.$hidden.length === 0) {\n      this.$hidden = $('<input type=\"hidden\">').insertBefore(this.$input);\n    }\n\n    this.$preview = this.$element.find('.fileinput-preview');\n    var height = this.$preview.css('height');\n    if (this.$preview.css('display') !== 'inline' && height !== '0px' && height !== 'none') {\n      this.$preview.css('line-height', height);\n    }\n\n    this.original = {\n      exists: this.$element.hasClass('fileinput-exists'),\n      preview: this.$preview.html(),\n      hiddenVal: this.$hidden.val()\n    };\n\n    this.listen();\n  };\n\n  Fileinput.prototype.listen = function () {\n    this.$input.on('change.bs.fileinput', $.proxy(this.change, this));\n    $(this.$input[0].form).on('reset.bs.fileinput', $.proxy(this.reset, this));\n\n    this.$element.find('[data-trigger=\"fileinput\"]').on('click.bs.fileinput', $.proxy(this.trigger, this));\n    this.$element.find('[data-dismiss=\"fileinput\"]').on('click.bs.fileinput', $.proxy(this.clear, this));\n  }, Fileinput.prototype.change = function (e) {\n    var files = e.target.files === undefined ? e.target && e.target.value ? [{ name: e.target.value.replace(/^.+\\\\/, '') }] : [] : e.target.files;\n\n    e.stopPropagation();\n\n    if (files.length === 0) {\n      this.clear();\n      return;\n    }\n\n    this.$hidden.val('');\n    this.$hidden.attr('name', '');\n    this.$input.attr('name', this.name);\n\n    var file = files[0];\n\n    if (this.$preview.length > 0 && (typeof file.type !== \"undefined\" ? file.type.match(/^image\\/(gif|png|jpeg)$/) : file.name.match(/\\.(gif|png|jpe?g)$/i)) && typeof FileReader !== \"undefined\") {\n      var reader = new FileReader();\n      var preview = this.$preview;\n      var element = this.$element;\n\n      reader.onload = function (re) {\n        var $img = $('<img>');\n        $img[0].src = re.target.result;\n        files[0].result = re.target.result;\n\n        element.find('.fileinput-filename').text(file.name);\n\n        // if parent has max-height, using `(max-)height: 100%` on child doesn't take padding and border into account\n        if (preview.css('max-height') != 'none') $img.css('max-height', parseInt(preview.css('max-height'), 10) - parseInt(preview.css('padding-top'), 10) - parseInt(preview.css('padding-bottom'), 10) - parseInt(preview.css('border-top'), 10) - parseInt(preview.css('border-bottom'), 10));\n\n        preview.html($img);\n        element.addClass('fileinput-exists').removeClass('fileinput-new');\n\n        element.trigger('change.bs.fileinput', files);\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      this.$element.find('.fileinput-filename').text(file.name);\n      this.$preview.text(file.name);\n\n      this.$element.addClass('fileinput-exists').removeClass('fileinput-new');\n\n      this.$element.trigger('change.bs.fileinput');\n    }\n  }, Fileinput.prototype.clear = function (e) {\n    if (e) e.preventDefault();\n\n    this.$hidden.val('');\n    this.$hidden.attr('name', this.name);\n    this.$input.attr('name', '');\n\n    //ie8+ doesn't support changing the value of input with type=file so clone instead\n    if (isIE) {\n      var inputClone = this.$input.clone(true);\n      this.$input.after(inputClone);\n      this.$input.remove();\n      this.$input = inputClone;\n    } else {\n      this.$input.val('');\n    }\n\n    this.$preview.html('');\n    this.$element.find('.fileinput-filename').text('');\n    this.$element.addClass('fileinput-new').removeClass('fileinput-exists');\n\n    if (e !== undefined) {\n      this.$input.trigger('change');\n      this.$element.trigger('clear.bs.fileinput');\n    }\n  }, Fileinput.prototype.reset = function () {\n    this.clear();\n\n    this.$hidden.val(this.original.hiddenVal);\n    this.$preview.html(this.original.preview);\n    this.$element.find('.fileinput-filename').text('');\n\n    if (this.original.exists) this.$element.addClass('fileinput-exists').removeClass('fileinput-new');else this.$element.addClass('fileinput-new').removeClass('fileinput-exists');\n\n    this.$element.trigger('reset.bs.fileinput');\n  }, Fileinput.prototype.trigger = function (e) {\n    this.$input.trigger('click');\n    e.preventDefault();\n  };\n\n  // FILEUPLOAD PLUGIN DEFINITION\n  // ===========================\n\n  var old = $.fn.fileinput;\n\n  $.fn.fileinput = function (options) {\n    return this.each(function () {\n      var $this = $(this),\n          data = $this.data('bs.fileinput');\n      if (!data) $this.data('bs.fileinput', data = new Fileinput(this, options));\n      if (typeof options == 'string') data[options]();\n    });\n  };\n\n  $.fn.fileinput.Constructor = Fileinput;\n\n  // FILEINPUT NO CONFLICT\n  // ====================\n\n  $.fn.fileinput.noConflict = function () {\n    $.fn.fileinput = old;\n    return this;\n  };\n\n  // FILEUPLOAD DATA-API\n  // ==================\n\n  $(document).on('click.fileinput.data-api', '[data-provides=\"fileinput\"]', function (e) {\n    var $this = $(this);\n    if ($this.data('bs.fileinput')) return;\n    $this.fileinput($this.data());\n\n    var $target = $(e.target).closest('[data-dismiss=\"fileinput\"],[data-trigger=\"fileinput\"]');\n    if ($target.length > 0) {\n      e.preventDefault();\n      $target.trigger('click.bs.fileinput');\n    }\n  });\n}(window.jQuery);\n\n//# sourceURL=webpack:///./assets/js/lib/bootstrap.jasny.js?");

/***/ }),

/***/ "./assets/js/lib/flowtype.js":
/*!***********************************!*\
  !*** ./assets/js/lib/flowtype.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\r\n* FlowType.JS v1.1\r\n* Copyright 2013-2014, Simple Focus http://simplefocus.com/\r\n*\r\n* FlowType.JS by Simple Focus (http://simplefocus.com/)\r\n* is licensed under the MIT License. Read a copy of the\r\n* license in the LICENSE.txt file or at\r\n* http://choosealicense.com/licenses/mit\r\n*\r\n* Thanks to Giovanni Difeterici (http://www.gdifeterici.com/)\r\n*/\n\n(function ($) {\n   $.fn.flowtype = function (options) {\n\n      // Establish default settings/variables\n      // ====================================\n      var settings = $.extend({\n         maximum: 9999,\n         minimum: 1,\n         maxFont: 9999,\n         minFont: 1,\n         fontRatio: 35\n      }, options),\n\n\n      // Do the magic math\n      // =================\n      changes = function changes(el) {\n         var $el = $(el),\n             elw = $el.width(),\n             width = elw > settings.maximum ? settings.maximum : elw < settings.minimum ? settings.minimum : elw,\n             fontBase = width / settings.fontRatio,\n             fontSize = fontBase > settings.maxFont ? settings.maxFont : fontBase < settings.minFont ? settings.minFont : fontBase;\n         $el.css('font-size', fontSize + 'px');\n      };\n\n      // Make the magic visible\n      // ======================\n      return this.each(function () {\n         // Context for resize callback\n         var that = this;\n         // Make changes upon resize\n         $(window).resize(function () {\n            changes(that);\n         });\n         // Set changes on load\n         changes(this);\n      });\n   };\n})(jQuery);\n\n//# sourceURL=webpack:///./assets/js/lib/flowtype.js?");

/***/ }),

/***/ "./assets/js/lib/isotope.pkgd.js":
/*!***************************************!*\
  !*** ./assets/js/lib/isotope.pkgd.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_LOCAL_MODULE_1__, __WEBPACK_LOCAL_MODULE_1__factory, __WEBPACK_LOCAL_MODULE_1__module;var __WEBPACK_LOCAL_MODULE_2__, __WEBPACK_LOCAL_MODULE_2__factory, __WEBPACK_LOCAL_MODULE_2__module;var __WEBPACK_LOCAL_MODULE_3__, __WEBPACK_LOCAL_MODULE_3__factory, __WEBPACK_LOCAL_MODULE_3__module;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_4__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_5__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_LOCAL_MODULE_6__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_7__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_8__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_9__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_10__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_11__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_LOCAL_MODULE_12__;var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\r\n * Isotope PACKAGED v3.0.6\r\n *\r\n * Licensed GPLv3 for open source use\r\n * or Isotope Commercial License for commercial use\r\n *\r\n * https://isotope.metafizzy.co\r\n * Copyright 2010-2018 Metafizzy\r\n */\n\n/**\r\n * Bridget makes jQuery widgets\r\n * v2.0.1\r\n * MIT license\r\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n\n(function (window, factory) {\n  // universal module definition\n  /*jshint strict: false */ /* globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"jquery\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (jQuery) {\n      return factory(window, jQuery);\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(window, jQuery) {\n  'use strict';\n\n  // ----- utils ----- //\n\n  var arraySlice = Array.prototype.slice;\n\n  // helper function for logging errors\n  // $.error breaks jQuery chaining\n  var console = window.console;\n  var logError = typeof console == 'undefined' ? function () {} : function (message) {\n    console.error(message);\n  };\n\n  // ----- jQueryBridget ----- //\n\n  function jQueryBridget(namespace, PluginClass, $) {\n    $ = $ || jQuery || window.jQuery;\n    if (!$) {\n      return;\n    }\n\n    // add option method -> $().plugin('option', {...})\n    if (!PluginClass.prototype.option) {\n      // option setter\n      PluginClass.prototype.option = function (opts) {\n        // bail out if not an object\n        if (!$.isPlainObject(opts)) {\n          return;\n        }\n        this.options = $.extend(true, this.options, opts);\n      };\n    }\n\n    // make jQuery plugin\n    $.fn[namespace] = function (arg0 /*, arg1 */) {\n      if (typeof arg0 == 'string') {\n        // method call $().plugin( 'methodName', { options } )\n        // shift arguments by 1\n        var args = arraySlice.call(arguments, 1);\n        return methodCall(this, arg0, args);\n      }\n      // just $().plugin({ options })\n      plainCall(this, arg0);\n      return this;\n    };\n\n    // $().plugin('methodName')\n    function methodCall($elems, methodName, args) {\n      var returnValue;\n      var pluginMethodStr = '$().' + namespace + '(\"' + methodName + '\")';\n\n      $elems.each(function (i, elem) {\n        // get instance\n        var instance = $.data(elem, namespace);\n        if (!instance) {\n          logError(namespace + ' not initialized. Cannot call methods, i.e. ' + pluginMethodStr);\n          return;\n        }\n\n        var method = instance[methodName];\n        if (!method || methodName.charAt(0) == '_') {\n          logError(pluginMethodStr + ' is not a valid method');\n          return;\n        }\n\n        // apply method, get return value\n        var value = method.apply(instance, args);\n        // set return value if value is returned, use only first value\n        returnValue = returnValue === undefined ? value : returnValue;\n      });\n\n      return returnValue !== undefined ? returnValue : $elems;\n    }\n\n    function plainCall($elems, options) {\n      $elems.each(function (i, elem) {\n        var instance = $.data(elem, namespace);\n        if (instance) {\n          // set options & init\n          instance.option(options);\n          instance._init();\n        } else {\n          // initialize new instance\n          instance = new PluginClass(elem, options);\n          $.data(elem, namespace, instance);\n        }\n      });\n    }\n\n    updateJQuery($);\n  }\n\n  // ----- updateJQuery ----- //\n\n  // set $.bridget for v1 backwards compatibility\n  function updateJQuery($) {\n    if (!$ || $ && $.bridget) {\n      return;\n    }\n    $.bridget = jQueryBridget;\n  }\n\n  updateJQuery(jQuery || window.jQuery);\n\n  // -----  ----- //\n\n  return jQueryBridget;\n});\n\n/**\r\n * EvEmitter v1.1.0\r\n * Lil' event emitter\r\n * MIT License\r\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n(function (global, factory) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if (true) {\n    // AMD - RequireJS\n    !(__WEBPACK_LOCAL_MODULE_1__factory = (factory), (__WEBPACK_LOCAL_MODULE_1__module = { id: \"ev-emitter/ev-emitter\", exports: {}, loaded: false }), __WEBPACK_LOCAL_MODULE_1__ = (typeof __WEBPACK_LOCAL_MODULE_1__factory === 'function' ? (__WEBPACK_LOCAL_MODULE_1__factory.call(__WEBPACK_LOCAL_MODULE_1__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_1__module.exports, __WEBPACK_LOCAL_MODULE_1__module)) : __WEBPACK_LOCAL_MODULE_1__factory), (__WEBPACK_LOCAL_MODULE_1__module.loaded = true), __WEBPACK_LOCAL_MODULE_1__ === undefined && (__WEBPACK_LOCAL_MODULE_1__ = __WEBPACK_LOCAL_MODULE_1__module.exports));\n  } else {}\n})(typeof window != 'undefined' ? window : undefined, function () {\n\n  function EvEmitter() {}\n\n  var proto = EvEmitter.prototype;\n\n  proto.on = function (eventName, listener) {\n    if (!eventName || !listener) {\n      return;\n    }\n    // set events hash\n    var events = this._events = this._events || {};\n    // set listeners array\n    var listeners = events[eventName] = events[eventName] || [];\n    // only add once\n    if (listeners.indexOf(listener) == -1) {\n      listeners.push(listener);\n    }\n\n    return this;\n  };\n\n  proto.once = function (eventName, listener) {\n    if (!eventName || !listener) {\n      return;\n    }\n    // add event\n    this.on(eventName, listener);\n    // set once flag\n    // set onceEvents hash\n    var onceEvents = this._onceEvents = this._onceEvents || {};\n    // set onceListeners object\n    var onceListeners = onceEvents[eventName] = onceEvents[eventName] || {};\n    // set flag\n    onceListeners[listener] = true;\n\n    return this;\n  };\n\n  proto.off = function (eventName, listener) {\n    var listeners = this._events && this._events[eventName];\n    if (!listeners || !listeners.length) {\n      return;\n    }\n    var index = listeners.indexOf(listener);\n    if (index != -1) {\n      listeners.splice(index, 1);\n    }\n\n    return this;\n  };\n\n  proto.emitEvent = function (eventName, args) {\n    var listeners = this._events && this._events[eventName];\n    if (!listeners || !listeners.length) {\n      return;\n    }\n    // copy over to avoid interference if .off() in listener\n    listeners = listeners.slice(0);\n    args = args || [];\n    // once stuff\n    var onceListeners = this._onceEvents && this._onceEvents[eventName];\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      var isOnce = onceListeners && onceListeners[listener];\n      if (isOnce) {\n        // remove listener\n        // remove before trigger to prevent recursion\n        this.off(eventName, listener);\n        // unset once flag\n        delete onceListeners[listener];\n      }\n      // trigger listener\n      listener.apply(this, args);\n    }\n\n    return this;\n  };\n\n  proto.allOff = function () {\n    delete this._events;\n    delete this._onceEvents;\n  };\n\n  return EvEmitter;\n});\n\n/*!\r\n * getSize v2.0.3\r\n * measure size of elements\r\n * MIT license\r\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n(function (window, factory) {\n  /* jshint strict: false */ /* globals define, module */\n  if (true) {\n    // AMD\n    !(__WEBPACK_LOCAL_MODULE_2__factory = (factory), (__WEBPACK_LOCAL_MODULE_2__module = { id: \"get-size/get-size\", exports: {}, loaded: false }), __WEBPACK_LOCAL_MODULE_2__ = (typeof __WEBPACK_LOCAL_MODULE_2__factory === 'function' ? (__WEBPACK_LOCAL_MODULE_2__factory.call(__WEBPACK_LOCAL_MODULE_2__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_2__module.exports, __WEBPACK_LOCAL_MODULE_2__module)) : __WEBPACK_LOCAL_MODULE_2__factory), (__WEBPACK_LOCAL_MODULE_2__module.loaded = true), __WEBPACK_LOCAL_MODULE_2__ === undefined && (__WEBPACK_LOCAL_MODULE_2__ = __WEBPACK_LOCAL_MODULE_2__module.exports));\n  } else {}\n})(window, function factory() {\n  'use strict';\n\n  // -------------------------- helpers -------------------------- //\n\n  // get a number from a string, not a percentage\n\n  function getStyleSize(value) {\n    var num = parseFloat(value);\n    // not a percent like '100%', and a number\n    var isValid = value.indexOf('%') == -1 && !isNaN(num);\n    return isValid && num;\n  }\n\n  function noop() {}\n\n  var logError = typeof console == 'undefined' ? noop : function (message) {\n    console.error(message);\n  };\n\n  // -------------------------- measurements -------------------------- //\n\n  var measurements = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'marginLeft', 'marginRight', 'marginTop', 'marginBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth'];\n\n  var measurementsLength = measurements.length;\n\n  function getZeroSize() {\n    var size = {\n      width: 0,\n      height: 0,\n      innerWidth: 0,\n      innerHeight: 0,\n      outerWidth: 0,\n      outerHeight: 0\n    };\n    for (var i = 0; i < measurementsLength; i++) {\n      var measurement = measurements[i];\n      size[measurement] = 0;\n    }\n    return size;\n  }\n\n  // -------------------------- getStyle -------------------------- //\n\n  /**\r\n   * getStyle, get style of element, check for Firefox bug\r\n   * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n   */\n  function getStyle(elem) {\n    var style = getComputedStyle(elem);\n    if (!style) {\n      logError('Style returned ' + style + '. Are you running this code in a hidden iframe on Firefox? ' + 'See https://bit.ly/getsizebug1');\n    }\n    return style;\n  }\n\n  // -------------------------- setup -------------------------- //\n\n  var isSetup = false;\n\n  var isBoxSizeOuter;\n\n  /**\r\n   * setup\r\n   * check isBoxSizerOuter\r\n   * do on first getSize() rather than on page load for Firefox bug\r\n   */\n  function setup() {\n    // setup once\n    if (isSetup) {\n      return;\n    }\n    isSetup = true;\n\n    // -------------------------- box sizing -------------------------- //\n\n    /**\r\n     * Chrome & Safari measure the outer-width on style.width on border-box elems\r\n     * IE11 & Firefox<29 measures the inner-width\r\n     */\n    var div = document.createElement('div');\n    div.style.width = '200px';\n    div.style.padding = '1px 2px 3px 4px';\n    div.style.borderStyle = 'solid';\n    div.style.borderWidth = '1px 2px 3px 4px';\n    div.style.boxSizing = 'border-box';\n\n    var body = document.body || document.documentElement;\n    body.appendChild(div);\n    var style = getStyle(div);\n    // round value for browser zoom. desandro/masonry#928\n    isBoxSizeOuter = Math.round(getStyleSize(style.width)) == 200;\n    getSize.isBoxSizeOuter = isBoxSizeOuter;\n\n    body.removeChild(div);\n  }\n\n  // -------------------------- getSize -------------------------- //\n\n  function getSize(elem) {\n    setup();\n\n    // use querySeletor if elem is string\n    if (typeof elem == 'string') {\n      elem = document.querySelector(elem);\n    }\n\n    // do not proceed on non-objects\n    if (!elem || (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) != 'object' || !elem.nodeType) {\n      return;\n    }\n\n    var style = getStyle(elem);\n\n    // if hidden, everything is 0\n    if (style.display == 'none') {\n      return getZeroSize();\n    }\n\n    var size = {};\n    size.width = elem.offsetWidth;\n    size.height = elem.offsetHeight;\n\n    var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n    // get all measurements\n    for (var i = 0; i < measurementsLength; i++) {\n      var measurement = measurements[i];\n      var value = style[measurement];\n      var num = parseFloat(value);\n      // any 'auto', 'medium' value will be 0\n      size[measurement] = !isNaN(num) ? num : 0;\n    }\n\n    var paddingWidth = size.paddingLeft + size.paddingRight;\n    var paddingHeight = size.paddingTop + size.paddingBottom;\n    var marginWidth = size.marginLeft + size.marginRight;\n    var marginHeight = size.marginTop + size.marginBottom;\n    var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n    var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n    var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n    // overwrite width and height if we can get it from style\n    var styleWidth = getStyleSize(style.width);\n    if (styleWidth !== false) {\n      size.width = styleWidth + (\n      // add padding and border unless it's already including it\n      isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\n    }\n\n    var styleHeight = getStyleSize(style.height);\n    if (styleHeight !== false) {\n      size.height = styleHeight + (\n      // add padding and border unless it's already including it\n      isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\n    }\n\n    size.innerWidth = size.width - (paddingWidth + borderWidth);\n    size.innerHeight = size.height - (paddingHeight + borderHeight);\n\n    size.outerWidth = size.width + marginWidth;\n    size.outerHeight = size.height + marginHeight;\n\n    return size;\n  }\n\n  return getSize;\n});\n\n/**\r\n * matchesSelector v2.0.2\r\n * matchesSelector( element, '.selector' )\r\n * MIT license\r\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n(function (window, factory) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n\n  if (true) {\n    // AMD\n    !(__WEBPACK_LOCAL_MODULE_3__factory = (factory), (__WEBPACK_LOCAL_MODULE_3__module = { id: \"desandro-matches-selector/matches-selector\", exports: {}, loaded: false }), __WEBPACK_LOCAL_MODULE_3__ = (typeof __WEBPACK_LOCAL_MODULE_3__factory === 'function' ? (__WEBPACK_LOCAL_MODULE_3__factory.call(__WEBPACK_LOCAL_MODULE_3__module.exports, __webpack_require__, __WEBPACK_LOCAL_MODULE_3__module.exports, __WEBPACK_LOCAL_MODULE_3__module)) : __WEBPACK_LOCAL_MODULE_3__factory), (__WEBPACK_LOCAL_MODULE_3__module.loaded = true), __WEBPACK_LOCAL_MODULE_3__ === undefined && (__WEBPACK_LOCAL_MODULE_3__ = __WEBPACK_LOCAL_MODULE_3__module.exports));\n  } else {}\n})(window, function factory() {\n  'use strict';\n\n  var matchesMethod = function () {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if (ElemProto.matches) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if (ElemProto.matchesSelector) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = ['webkit', 'moz', 'ms', 'o'];\n\n    for (var i = 0; i < prefixes.length; i++) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if (ElemProto[method]) {\n        return method;\n      }\n    }\n  }();\n\n  return function matchesSelector(elem, selector) {\n    return elem[matchesMethod](selector);\n  };\n});\n\n/**\r\n * Fizzy UI utils v2.0.7\r\n * MIT license\r\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n(function (window, factory) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_3__], __WEBPACK_LOCAL_MODULE_4__ = ((function (matchesSelector) {\n      return factory(window, matchesSelector);\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\n  } else {}\n})(window, function factory(window, matchesSelector) {\n\n  var utils = {};\n\n  // ----- extend ----- //\n\n  // extends objects\n  utils.extend = function (a, b) {\n    for (var prop in b) {\n      a[prop] = b[prop];\n    }\n    return a;\n  };\n\n  // ----- modulo ----- //\n\n  utils.modulo = function (num, div) {\n    return (num % div + div) % div;\n  };\n\n  // ----- makeArray ----- //\n\n  var arraySlice = Array.prototype.slice;\n\n  // turn element or nodeList into an array\n  utils.makeArray = function (obj) {\n    if (Array.isArray(obj)) {\n      // use object if already an array\n      return obj;\n    }\n    // return empty array if undefined or null. #6\n    if (obj === null || obj === undefined) {\n      return [];\n    }\n\n    var isArrayLike = (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' && typeof obj.length == 'number';\n    if (isArrayLike) {\n      // convert nodeList to array\n      return arraySlice.call(obj);\n    }\n\n    // array of single index\n    return [obj];\n  };\n\n  // ----- removeFrom ----- //\n\n  utils.removeFrom = function (ary, obj) {\n    var index = ary.indexOf(obj);\n    if (index != -1) {\n      ary.splice(index, 1);\n    }\n  };\n\n  // ----- getParent ----- //\n\n  utils.getParent = function (elem, selector) {\n    while (elem.parentNode && elem != document.body) {\n      elem = elem.parentNode;\n      if (matchesSelector(elem, selector)) {\n        return elem;\n      }\n    }\n  };\n\n  // ----- getQueryElement ----- //\n\n  // use element as selector string\n  utils.getQueryElement = function (elem) {\n    if (typeof elem == 'string') {\n      return document.querySelector(elem);\n    }\n    return elem;\n  };\n\n  // ----- handleEvent ----- //\n\n  // enable .ontype to trigger from .addEventListener( elem, 'type' )\n  utils.handleEvent = function (event) {\n    var method = 'on' + event.type;\n    if (this[method]) {\n      this[method](event);\n    }\n  };\n\n  // ----- filterFindElements ----- //\n\n  utils.filterFindElements = function (elems, selector) {\n    // make array of elems\n    elems = utils.makeArray(elems);\n    var ffElems = [];\n\n    elems.forEach(function (elem) {\n      // check that elem is an actual element\n      if (!(elem instanceof HTMLElement)) {\n        return;\n      }\n      // add elem if no selector\n      if (!selector) {\n        ffElems.push(elem);\n        return;\n      }\n      // filter & find items if we have a selector\n      // filter\n      if (matchesSelector(elem, selector)) {\n        ffElems.push(elem);\n      }\n      // find children\n      var childElems = elem.querySelectorAll(selector);\n      // concat childElems to filterFound array\n      for (var i = 0; i < childElems.length; i++) {\n        ffElems.push(childElems[i]);\n      }\n    });\n\n    return ffElems;\n  };\n\n  // ----- debounceMethod ----- //\n\n  utils.debounceMethod = function (_class, methodName, threshold) {\n    threshold = threshold || 100;\n    // original method\n    var method = _class.prototype[methodName];\n    var timeoutName = methodName + 'Timeout';\n\n    _class.prototype[methodName] = function () {\n      var timeout = this[timeoutName];\n      clearTimeout(timeout);\n\n      var args = arguments;\n      var _this = this;\n      this[timeoutName] = setTimeout(function () {\n        method.apply(_this, args);\n        delete _this[timeoutName];\n      }, threshold);\n    };\n  };\n\n  // ----- docReady ----- //\n\n  utils.docReady = function (callback) {\n    var readyState = document.readyState;\n    if (readyState == 'complete' || readyState == 'interactive') {\n      // do async to allow for other scripts to run. metafizzy/flickity#441\n      setTimeout(callback);\n    } else {\n      document.addEventListener('DOMContentLoaded', callback);\n    }\n  };\n\n  // ----- htmlInit ----- //\n\n  // http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\n  utils.toDashed = function (str) {\n    return str.replace(/(.)([A-Z])/g, function (match, $1, $2) {\n      return $1 + '-' + $2;\n    }).toLowerCase();\n  };\n\n  var console = window.console;\n  /**\r\n   * allow user to initialize classes via [data-namespace] or .js-namespace class\r\n   * htmlInit( Widget, 'widgetName' )\r\n   * options are parsed from data-namespace-options\r\n   */\n  utils.htmlInit = function (WidgetClass, namespace) {\n    utils.docReady(function () {\n      var dashedNamespace = utils.toDashed(namespace);\n      var dataAttr = 'data-' + dashedNamespace;\n      var dataAttrElems = document.querySelectorAll('[' + dataAttr + ']');\n      var jsDashElems = document.querySelectorAll('.js-' + dashedNamespace);\n      var elems = utils.makeArray(dataAttrElems).concat(utils.makeArray(jsDashElems));\n      var dataOptionsAttr = dataAttr + '-options';\n      var jQuery = window.jQuery;\n\n      elems.forEach(function (elem) {\n        var attr = elem.getAttribute(dataAttr) || elem.getAttribute(dataOptionsAttr);\n        var options;\n        try {\n          options = attr && JSON.parse(attr);\n        } catch (error) {\n          // log error, do not initialize\n          if (console) {\n            console.error('Error parsing ' + dataAttr + ' on ' + elem.className + ': ' + error);\n          }\n          return;\n        }\n        // initialize\n        var instance = new WidgetClass(elem, options);\n        // make available via $().data('namespace')\n        if (jQuery) {\n          jQuery.data(elem, namespace, instance);\n        }\n      });\n    });\n  };\n\n  // -----  ----- //\n\n  return utils;\n});\n\n/**\r\n * Outlayer Item\r\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if (true) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_1__, __WEBPACK_LOCAL_MODULE_2__], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_5__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__));\n  } else {}\n})(window, function factory(EvEmitter, getSize) {\n  'use strict';\n\n  // ----- helpers ----- //\n\n  function isEmptyObj(obj) {\n    for (var prop in obj) {\n      return false;\n    }\n    prop = null;\n    return true;\n  }\n\n  // -------------------------- CSS3 support -------------------------- //\n\n\n  var docElemStyle = document.documentElement.style;\n\n  var transitionProperty = typeof docElemStyle.transition == 'string' ? 'transition' : 'WebkitTransition';\n  var transformProperty = typeof docElemStyle.transform == 'string' ? 'transform' : 'WebkitTransform';\n\n  var transitionEndEvent = {\n    WebkitTransition: 'webkitTransitionEnd',\n    transition: 'transitionend'\n  }[transitionProperty];\n\n  // cache all vendor properties that could have vendor prefix\n  var vendorProperties = {\n    transform: transformProperty,\n    transition: transitionProperty,\n    transitionDuration: transitionProperty + 'Duration',\n    transitionProperty: transitionProperty + 'Property',\n    transitionDelay: transitionProperty + 'Delay'\n  };\n\n  // -------------------------- Item -------------------------- //\n\n  function Item(element, layout) {\n    if (!element) {\n      return;\n    }\n\n    this.element = element;\n    // parent layout class, i.e. Masonry, Isotope, or Packery\n    this.layout = layout;\n    this.position = {\n      x: 0,\n      y: 0\n    };\n\n    this._create();\n  }\n\n  // inherit EvEmitter\n  var proto = Item.prototype = Object.create(EvEmitter.prototype);\n  proto.constructor = Item;\n\n  proto._create = function () {\n    // transition objects\n    this._transn = {\n      ingProperties: {},\n      clean: {},\n      onEnd: {}\n    };\n\n    this.css({\n      position: 'absolute'\n    });\n  };\n\n  // trigger specified handler for event type\n  proto.handleEvent = function (event) {\n    var method = 'on' + event.type;\n    if (this[method]) {\n      this[method](event);\n    }\n  };\n\n  proto.getSize = function () {\n    this.size = getSize(this.element);\n  };\n\n  /**\r\n   * apply CSS styles to element\r\n   * @param {Object} style\r\n   */\n  proto.css = function (style) {\n    var elemStyle = this.element.style;\n\n    for (var prop in style) {\n      // use vendor property if available\n      var supportedProp = vendorProperties[prop] || prop;\n      elemStyle[supportedProp] = style[prop];\n    }\n  };\n\n  // measure position, and sets it\n  proto.getPosition = function () {\n    var style = getComputedStyle(this.element);\n    var isOriginLeft = this.layout._getOption('originLeft');\n    var isOriginTop = this.layout._getOption('originTop');\n    var xValue = style[isOriginLeft ? 'left' : 'right'];\n    var yValue = style[isOriginTop ? 'top' : 'bottom'];\n    var x = parseFloat(xValue);\n    var y = parseFloat(yValue);\n    // convert percent to pixels\n    var layoutSize = this.layout.size;\n    if (xValue.indexOf('%') != -1) {\n      x = x / 100 * layoutSize.width;\n    }\n    if (yValue.indexOf('%') != -1) {\n      y = y / 100 * layoutSize.height;\n    }\n    // clean up 'auto' or other non-integer values\n    x = isNaN(x) ? 0 : x;\n    y = isNaN(y) ? 0 : y;\n    // remove padding from measurement\n    x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n    y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n    this.position.x = x;\n    this.position.y = y;\n  };\n\n  // set settled position, apply padding\n  proto.layoutPosition = function () {\n    var layoutSize = this.layout.size;\n    var style = {};\n    var isOriginLeft = this.layout._getOption('originLeft');\n    var isOriginTop = this.layout._getOption('originTop');\n\n    // x\n    var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n    var xProperty = isOriginLeft ? 'left' : 'right';\n    var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n    var x = this.position.x + layoutSize[xPadding];\n    // set in percentage or pixels\n    style[xProperty] = this.getXValue(x);\n    // reset other property\n    style[xResetProperty] = '';\n\n    // y\n    var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n    var yProperty = isOriginTop ? 'top' : 'bottom';\n    var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n    var y = this.position.y + layoutSize[yPadding];\n    // set in percentage or pixels\n    style[yProperty] = this.getYValue(y);\n    // reset other property\n    style[yResetProperty] = '';\n\n    this.css(style);\n    this.emitEvent('layout', [this]);\n  };\n\n  proto.getXValue = function (x) {\n    var isHorizontal = this.layout._getOption('horizontal');\n    return this.layout.options.percentPosition && !isHorizontal ? x / this.layout.size.width * 100 + '%' : x + 'px';\n  };\n\n  proto.getYValue = function (y) {\n    var isHorizontal = this.layout._getOption('horizontal');\n    return this.layout.options.percentPosition && isHorizontal ? y / this.layout.size.height * 100 + '%' : y + 'px';\n  };\n\n  proto._transitionTo = function (x, y) {\n    this.getPosition();\n    // get current x & y from top/left\n    var curX = this.position.x;\n    var curY = this.position.y;\n\n    var didNotMove = x == this.position.x && y == this.position.y;\n\n    // save end position\n    this.setPosition(x, y);\n\n    // if did not move and not transitioning, just go to layout\n    if (didNotMove && !this.isTransitioning) {\n      this.layoutPosition();\n      return;\n    }\n\n    var transX = x - curX;\n    var transY = y - curY;\n    var transitionStyle = {};\n    transitionStyle.transform = this.getTranslate(transX, transY);\n\n    this.transition({\n      to: transitionStyle,\n      onTransitionEnd: {\n        transform: this.layoutPosition\n      },\n      isCleaning: true\n    });\n  };\n\n  proto.getTranslate = function (x, y) {\n    // flip cooridinates if origin on right or bottom\n    var isOriginLeft = this.layout._getOption('originLeft');\n    var isOriginTop = this.layout._getOption('originTop');\n    x = isOriginLeft ? x : -x;\n    y = isOriginTop ? y : -y;\n    return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n  };\n\n  // non transition + transform support\n  proto.goTo = function (x, y) {\n    this.setPosition(x, y);\n    this.layoutPosition();\n  };\n\n  proto.moveTo = proto._transitionTo;\n\n  proto.setPosition = function (x, y) {\n    this.position.x = parseFloat(x);\n    this.position.y = parseFloat(y);\n  };\n\n  // ----- transition ----- //\n\n  /**\r\n   * @param {Object} style - CSS\r\n   * @param {Function} onTransitionEnd\r\n   */\n\n  // non transition, just trigger callback\n  proto._nonTransition = function (args) {\n    this.css(args.to);\n    if (args.isCleaning) {\n      this._removeStyles(args.to);\n    }\n    for (var prop in args.onTransitionEnd) {\n      args.onTransitionEnd[prop].call(this);\n    }\n  };\n\n  /**\r\n   * proper transition\r\n   * @param {Object} args - arguments\r\n   *   @param {Object} to - style to transition to\r\n   *   @param {Object} from - style to start transition from\r\n   *   @param {Boolean} isCleaning - removes transition styles after transition\r\n   *   @param {Function} onTransitionEnd - callback\r\n   */\n  proto.transition = function (args) {\n    // redirect to nonTransition if no transition duration\n    if (!parseFloat(this.layout.options.transitionDuration)) {\n      this._nonTransition(args);\n      return;\n    }\n\n    var _transition = this._transn;\n    // keep track of onTransitionEnd callback by css property\n    for (var prop in args.onTransitionEnd) {\n      _transition.onEnd[prop] = args.onTransitionEnd[prop];\n    }\n    // keep track of properties that are transitioning\n    for (prop in args.to) {\n      _transition.ingProperties[prop] = true;\n      // keep track of properties to clean up when transition is done\n      if (args.isCleaning) {\n        _transition.clean[prop] = true;\n      }\n    }\n\n    // set from styles\n    if (args.from) {\n      this.css(args.from);\n      // force redraw. http://blog.alexmaccaw.com/css-transitions\n      var h = this.element.offsetHeight;\n      // hack for JSHint to hush about unused var\n      h = null;\n    }\n    // enable transition\n    this.enableTransition(args.to);\n    // set styles that are transitioning\n    this.css(args.to);\n\n    this.isTransitioning = true;\n  };\n\n  // dash before all cap letters, including first for\n  // WebkitTransform => -webkit-transform\n  function toDashedAll(str) {\n    return str.replace(/([A-Z])/g, function ($1) {\n      return '-' + $1.toLowerCase();\n    });\n  }\n\n  var transitionProps = 'opacity,' + toDashedAll(transformProperty);\n\n  proto.enableTransition = function () /* style */{\n    // HACK changing transitionProperty during a transition\n    // will cause transition to jump\n    if (this.isTransitioning) {\n      return;\n    }\n\n    // make `transition: foo, bar, baz` from style object\n    // HACK un-comment this when enableTransition can work\n    // while a transition is happening\n    // var transitionValues = [];\n    // for ( var prop in style ) {\n    //   // dash-ify camelCased properties like WebkitTransition\n    //   prop = vendorProperties[ prop ] || prop;\n    //   transitionValues.push( toDashedAll( prop ) );\n    // }\n    // munge number to millisecond, to match stagger\n    var duration = this.layout.options.transitionDuration;\n    duration = typeof duration == 'number' ? duration + 'ms' : duration;\n    // enable transition styles\n    this.css({\n      transitionProperty: transitionProps,\n      transitionDuration: duration,\n      transitionDelay: this.staggerDelay || 0\n    });\n    // listen for transition end event\n    this.element.addEventListener(transitionEndEvent, this, false);\n  };\n\n  // ----- events ----- //\n\n  proto.onwebkitTransitionEnd = function (event) {\n    this.ontransitionend(event);\n  };\n\n  proto.onotransitionend = function (event) {\n    this.ontransitionend(event);\n  };\n\n  // properties that I munge to make my life easier\n  var dashedVendorProperties = {\n    '-webkit-transform': 'transform'\n  };\n\n  proto.ontransitionend = function (event) {\n    // disregard bubbled events from children\n    if (event.target !== this.element) {\n      return;\n    }\n    var _transition = this._transn;\n    // get property name of transitioned property, convert to prefix-free\n    var propertyName = dashedVendorProperties[event.propertyName] || event.propertyName;\n\n    // remove property that has completed transitioning\n    delete _transition.ingProperties[propertyName];\n    // check if any properties are still transitioning\n    if (isEmptyObj(_transition.ingProperties)) {\n      // all properties have completed transitioning\n      this.disableTransition();\n    }\n    // clean style\n    if (propertyName in _transition.clean) {\n      // clean up style\n      this.element.style[event.propertyName] = '';\n      delete _transition.clean[propertyName];\n    }\n    // trigger onTransitionEnd callback\n    if (propertyName in _transition.onEnd) {\n      var onTransitionEnd = _transition.onEnd[propertyName];\n      onTransitionEnd.call(this);\n      delete _transition.onEnd[propertyName];\n    }\n\n    this.emitEvent('transitionEnd', [this]);\n  };\n\n  proto.disableTransition = function () {\n    this.removeTransitionStyles();\n    this.element.removeEventListener(transitionEndEvent, this, false);\n    this.isTransitioning = false;\n  };\n\n  /**\r\n   * removes style property from element\r\n   * @param {Object} style\r\n  **/\n  proto._removeStyles = function (style) {\n    // clean up transition styles\n    var cleanStyle = {};\n    for (var prop in style) {\n      cleanStyle[prop] = '';\n    }\n    this.css(cleanStyle);\n  };\n\n  var cleanTransitionStyle = {\n    transitionProperty: '',\n    transitionDuration: '',\n    transitionDelay: ''\n  };\n\n  proto.removeTransitionStyles = function () {\n    // remove transition\n    this.css(cleanTransitionStyle);\n  };\n\n  // ----- stagger ----- //\n\n  proto.stagger = function (delay) {\n    delay = isNaN(delay) ? 0 : delay;\n    this.staggerDelay = delay + 'ms';\n  };\n\n  // ----- show/hide/remove ----- //\n\n  // remove element from DOM\n  proto.removeElem = function () {\n    this.element.parentNode.removeChild(this.element);\n    // remove display: none\n    this.css({ display: '' });\n    this.emitEvent('remove', [this]);\n  };\n\n  proto.remove = function () {\n    // just remove element if no transition support or no transition\n    if (!transitionProperty || !parseFloat(this.layout.options.transitionDuration)) {\n      this.removeElem();\n      return;\n    }\n\n    // start transition\n    this.once('transitionEnd', function () {\n      this.removeElem();\n    });\n    this.hide();\n  };\n\n  proto.reveal = function () {\n    delete this.isHidden;\n    // remove display: none\n    this.css({ display: '' });\n\n    var options = this.layout.options;\n\n    var onTransitionEnd = {};\n    var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n    onTransitionEnd[transitionEndProperty] = this.onRevealTransitionEnd;\n\n    this.transition({\n      from: options.hiddenStyle,\n      to: options.visibleStyle,\n      isCleaning: true,\n      onTransitionEnd: onTransitionEnd\n    });\n  };\n\n  proto.onRevealTransitionEnd = function () {\n    // check if still visible\n    // during transition, item may have been hidden\n    if (!this.isHidden) {\n      this.emitEvent('reveal');\n    }\n  };\n\n  /**\r\n   * get style property use for hide/reveal transition end\r\n   * @param {String} styleProperty - hiddenStyle/visibleStyle\r\n   * @returns {String}\r\n   */\n  proto.getHideRevealTransitionEndProperty = function (styleProperty) {\n    var optionStyle = this.layout.options[styleProperty];\n    // use opacity\n    if (optionStyle.opacity) {\n      return 'opacity';\n    }\n    // get first property\n    for (var prop in optionStyle) {\n      return prop;\n    }\n  };\n\n  proto.hide = function () {\n    // set flag\n    this.isHidden = true;\n    // remove display: none\n    this.css({ display: '' });\n\n    var options = this.layout.options;\n\n    var onTransitionEnd = {};\n    var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n    onTransitionEnd[transitionEndProperty] = this.onHideTransitionEnd;\n\n    this.transition({\n      from: options.visibleStyle,\n      to: options.hiddenStyle,\n      // keep hidden stuff hidden\n      isCleaning: true,\n      onTransitionEnd: onTransitionEnd\n    });\n  };\n\n  proto.onHideTransitionEnd = function () {\n    // check if still hidden\n    // during transition, item may have been un-hidden\n    if (this.isHidden) {\n      this.css({ display: 'none' });\n      this.emitEvent('hide');\n    }\n  };\n\n  proto.destroy = function () {\n    this.css({\n      position: '',\n      left: '',\n      right: '',\n      top: '',\n      bottom: '',\n      transition: '',\n      transform: ''\n    });\n  };\n\n  return Item;\n});\n\n/*!\r\n * Outlayer v2.1.1\r\n * the brains and guts of a layout library\r\n * MIT license\r\n */\n\n(function (window, factory) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n\n  if (true) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_1__, __WEBPACK_LOCAL_MODULE_2__, __WEBPACK_LOCAL_MODULE_4__, __WEBPACK_LOCAL_MODULE_5__], __WEBPACK_LOCAL_MODULE_6__ = ((function (EvEmitter, getSize, utils, Item) {\n      return factory(window, EvEmitter, getSize, utils, Item);\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)));\n  } else {}\n})(window, function factory(window, EvEmitter, getSize, utils, Item) {\n  'use strict';\n\n  // ----- vars ----- //\n\n  var console = window.console;\n  var jQuery = window.jQuery;\n  var noop = function noop() {};\n\n  // -------------------------- Outlayer -------------------------- //\n\n  // globally unique identifiers\n  var GUID = 0;\n  // internal store of all Outlayer intances\n  var instances = {};\n\n  /**\r\n   * @param {Element, String} element\r\n   * @param {Object} options\r\n   * @constructor\r\n   */\n  function Outlayer(element, options) {\n    var queryElement = utils.getQueryElement(element);\n    if (!queryElement) {\n      if (console) {\n        console.error('Bad element for ' + this.constructor.namespace + ': ' + (queryElement || element));\n      }\n      return;\n    }\n    this.element = queryElement;\n    // add jQuery\n    if (jQuery) {\n      this.$element = jQuery(this.element);\n    }\n\n    // options\n    this.options = utils.extend({}, this.constructor.defaults);\n    this.option(options);\n\n    // add id for Outlayer.getFromElement\n    var id = ++GUID;\n    this.element.outlayerGUID = id; // expando\n    instances[id] = this; // associate via id\n\n    // kick it off\n    this._create();\n\n    var isInitLayout = this._getOption('initLayout');\n    if (isInitLayout) {\n      this.layout();\n    }\n  }\n\n  // settings are for internal use only\n  Outlayer.namespace = 'outlayer';\n  Outlayer.Item = Item;\n\n  // default options\n  Outlayer.defaults = {\n    containerStyle: {\n      position: 'relative'\n    },\n    initLayout: true,\n    originLeft: true,\n    originTop: true,\n    resize: true,\n    resizeContainer: true,\n    // item options\n    transitionDuration: '0.4s',\n    hiddenStyle: {\n      opacity: 0,\n      transform: 'scale(0.001)'\n    },\n    visibleStyle: {\n      opacity: 1,\n      transform: 'scale(1)'\n    }\n  };\n\n  var proto = Outlayer.prototype;\n  // inherit EvEmitter\n  utils.extend(proto, EvEmitter.prototype);\n\n  /**\r\n   * set options\r\n   * @param {Object} opts\r\n   */\n  proto.option = function (opts) {\n    utils.extend(this.options, opts);\n  };\n\n  /**\r\n   * get backwards compatible option value, check old name\r\n   */\n  proto._getOption = function (option) {\n    var oldOption = this.constructor.compatOptions[option];\n    return oldOption && this.options[oldOption] !== undefined ? this.options[oldOption] : this.options[option];\n  };\n\n  Outlayer.compatOptions = {\n    // currentName: oldName\n    initLayout: 'isInitLayout',\n    horizontal: 'isHorizontal',\n    layoutInstant: 'isLayoutInstant',\n    originLeft: 'isOriginLeft',\n    originTop: 'isOriginTop',\n    resize: 'isResizeBound',\n    resizeContainer: 'isResizingContainer'\n  };\n\n  proto._create = function () {\n    // get items from children\n    this.reloadItems();\n    // elements that affect layout, but are not laid out\n    this.stamps = [];\n    this.stamp(this.options.stamp);\n    // set container style\n    utils.extend(this.element.style, this.options.containerStyle);\n\n    // bind resize method\n    var canBindResize = this._getOption('resize');\n    if (canBindResize) {\n      this.bindResize();\n    }\n  };\n\n  // goes through all children again and gets bricks in proper order\n  proto.reloadItems = function () {\n    // collection of item elements\n    this.items = this._itemize(this.element.children);\n  };\n\n  /**\r\n   * turn elements into Outlayer.Items to be used in layout\r\n   * @param {Array or NodeList or HTMLElement} elems\r\n   * @returns {Array} items - collection of new Outlayer Items\r\n   */\n  proto._itemize = function (elems) {\n\n    var itemElems = this._filterFindItemElements(elems);\n    var Item = this.constructor.Item;\n\n    // create new Outlayer Items for collection\n    var items = [];\n    for (var i = 0; i < itemElems.length; i++) {\n      var elem = itemElems[i];\n      var item = new Item(elem, this);\n      items.push(item);\n    }\n\n    return items;\n  };\n\n  /**\r\n   * get item elements to be used in layout\r\n   * @param {Array or NodeList or HTMLElement} elems\r\n   * @returns {Array} items - item elements\r\n   */\n  proto._filterFindItemElements = function (elems) {\n    return utils.filterFindElements(elems, this.options.itemSelector);\n  };\n\n  /**\r\n   * getter method for getting item elements\r\n   * @returns {Array} elems - collection of item elements\r\n   */\n  proto.getItemElements = function () {\n    return this.items.map(function (item) {\n      return item.element;\n    });\n  };\n\n  // ----- init & layout ----- //\n\n  /**\r\n   * lays out all items\r\n   */\n  proto.layout = function () {\n    this._resetLayout();\n    this._manageStamps();\n\n    // don't animate first layout\n    var layoutInstant = this._getOption('layoutInstant');\n    var isInstant = layoutInstant !== undefined ? layoutInstant : !this._isLayoutInited;\n    this.layoutItems(this.items, isInstant);\n\n    // flag for initalized\n    this._isLayoutInited = true;\n  };\n\n  // _init is alias for layout\n  proto._init = proto.layout;\n\n  /**\r\n   * logic before any new layout\r\n   */\n  proto._resetLayout = function () {\n    this.getSize();\n  };\n\n  proto.getSize = function () {\n    this.size = getSize(this.element);\n  };\n\n  /**\r\n   * get measurement from option, for columnWidth, rowHeight, gutter\r\n   * if option is String -> get element from selector string, & get size of element\r\n   * if option is Element -> get size of element\r\n   * else use option as a number\r\n   *\r\n   * @param {String} measurement\r\n   * @param {String} size - width or height\r\n   * @private\r\n   */\n  proto._getMeasurement = function (measurement, size) {\n    var option = this.options[measurement];\n    var elem;\n    if (!option) {\n      // default to 0\n      this[measurement] = 0;\n    } else {\n      // use option as an element\n      if (typeof option == 'string') {\n        elem = this.element.querySelector(option);\n      } else if (option instanceof HTMLElement) {\n        elem = option;\n      }\n      // use size of element, if element\n      this[measurement] = elem ? getSize(elem)[size] : option;\n    }\n  };\n\n  /**\r\n   * layout a collection of item elements\r\n   * @api public\r\n   */\n  proto.layoutItems = function (items, isInstant) {\n    items = this._getItemsForLayout(items);\n\n    this._layoutItems(items, isInstant);\n\n    this._postLayout();\n  };\n\n  /**\r\n   * get the items to be laid out\r\n   * you may want to skip over some items\r\n   * @param {Array} items\r\n   * @returns {Array} items\r\n   */\n  proto._getItemsForLayout = function (items) {\n    return items.filter(function (item) {\n      return !item.isIgnored;\n    });\n  };\n\n  /**\r\n   * layout items\r\n   * @param {Array} items\r\n   * @param {Boolean} isInstant\r\n   */\n  proto._layoutItems = function (items, isInstant) {\n    this._emitCompleteOnItems('layout', items);\n\n    if (!items || !items.length) {\n      // no items, emit event with empty array\n      return;\n    }\n\n    var queue = [];\n\n    items.forEach(function (item) {\n      // get x/y object from method\n      var position = this._getItemLayoutPosition(item);\n      // enqueue\n      position.item = item;\n      position.isInstant = isInstant || item.isLayoutInstant;\n      queue.push(position);\n    }, this);\n\n    this._processLayoutQueue(queue);\n  };\n\n  /**\r\n   * get item layout position\r\n   * @param {Outlayer.Item} item\r\n   * @returns {Object} x and y position\r\n   */\n  proto._getItemLayoutPosition = function () /* item */{\n    return {\n      x: 0,\n      y: 0\n    };\n  };\n\n  /**\r\n   * iterate over array and position each item\r\n   * Reason being - separating this logic prevents 'layout invalidation'\r\n   * thx @paul_irish\r\n   * @param {Array} queue\r\n   */\n  proto._processLayoutQueue = function (queue) {\n    this.updateStagger();\n    queue.forEach(function (obj, i) {\n      this._positionItem(obj.item, obj.x, obj.y, obj.isInstant, i);\n    }, this);\n  };\n\n  // set stagger from option in milliseconds number\n  proto.updateStagger = function () {\n    var stagger = this.options.stagger;\n    if (stagger === null || stagger === undefined) {\n      this.stagger = 0;\n      return;\n    }\n    this.stagger = getMilliseconds(stagger);\n    return this.stagger;\n  };\n\n  /**\r\n   * Sets position of item in DOM\r\n   * @param {Outlayer.Item} item\r\n   * @param {Number} x - horizontal position\r\n   * @param {Number} y - vertical position\r\n   * @param {Boolean} isInstant - disables transitions\r\n   */\n  proto._positionItem = function (item, x, y, isInstant, i) {\n    if (isInstant) {\n      // if not transition, just set CSS\n      item.goTo(x, y);\n    } else {\n      item.stagger(i * this.stagger);\n      item.moveTo(x, y);\n    }\n  };\n\n  /**\r\n   * Any logic you want to do after each layout,\r\n   * i.e. size the container\r\n   */\n  proto._postLayout = function () {\n    this.resizeContainer();\n  };\n\n  proto.resizeContainer = function () {\n    var isResizingContainer = this._getOption('resizeContainer');\n    if (!isResizingContainer) {\n      return;\n    }\n    var size = this._getContainerSize();\n    if (size) {\n      this._setContainerMeasure(size.width, true);\n      this._setContainerMeasure(size.height, false);\n    }\n  };\n\n  /**\r\n   * Sets width or height of container if returned\r\n   * @returns {Object} size\r\n   *   @param {Number} width\r\n   *   @param {Number} height\r\n   */\n  proto._getContainerSize = noop;\n\n  /**\r\n   * @param {Number} measure - size of width or height\r\n   * @param {Boolean} isWidth\r\n   */\n  proto._setContainerMeasure = function (measure, isWidth) {\n    if (measure === undefined) {\n      return;\n    }\n\n    var elemSize = this.size;\n    // add padding and border width if border box\n    if (elemSize.isBorderBox) {\n      measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight + elemSize.borderLeftWidth + elemSize.borderRightWidth : elemSize.paddingBottom + elemSize.paddingTop + elemSize.borderTopWidth + elemSize.borderBottomWidth;\n    }\n\n    measure = Math.max(measure, 0);\n    this.element.style[isWidth ? 'width' : 'height'] = measure + 'px';\n  };\n\n  /**\r\n   * emit eventComplete on a collection of items events\r\n   * @param {String} eventName\r\n   * @param {Array} items - Outlayer.Items\r\n   */\n  proto._emitCompleteOnItems = function (eventName, items) {\n    var _this = this;\n    function onComplete() {\n      _this.dispatchEvent(eventName + 'Complete', null, [items]);\n    }\n\n    var count = items.length;\n    if (!items || !count) {\n      onComplete();\n      return;\n    }\n\n    var doneCount = 0;\n    function tick() {\n      doneCount++;\n      if (doneCount == count) {\n        onComplete();\n      }\n    }\n\n    // bind callback\n    items.forEach(function (item) {\n      item.once(eventName, tick);\n    });\n  };\n\n  /**\r\n   * emits events via EvEmitter and jQuery events\r\n   * @param {String} type - name of event\r\n   * @param {Event} event - original event\r\n   * @param {Array} args - extra arguments\r\n   */\n  proto.dispatchEvent = function (type, event, args) {\n    // add original event to arguments\n    var emitArgs = event ? [event].concat(args) : args;\n    this.emitEvent(type, emitArgs);\n\n    if (jQuery) {\n      // set this.$element\n      this.$element = this.$element || jQuery(this.element);\n      if (event) {\n        // create jQuery event\n        var $event = jQuery.Event(event);\n        $event.type = type;\n        this.$element.trigger($event, args);\n      } else {\n        // just trigger with type if no event available\n        this.$element.trigger(type, args);\n      }\n    }\n  };\n\n  // -------------------------- ignore & stamps -------------------------- //\n\n\n  /**\r\n   * keep item in collection, but do not lay it out\r\n   * ignored items do not get skipped in layout\r\n   * @param {Element} elem\r\n   */\n  proto.ignore = function (elem) {\n    var item = this.getItem(elem);\n    if (item) {\n      item.isIgnored = true;\n    }\n  };\n\n  /**\r\n   * return item to layout collection\r\n   * @param {Element} elem\r\n   */\n  proto.unignore = function (elem) {\n    var item = this.getItem(elem);\n    if (item) {\n      delete item.isIgnored;\n    }\n  };\n\n  /**\r\n   * adds elements to stamps\r\n   * @param {NodeList, Array, Element, or String} elems\r\n   */\n  proto.stamp = function (elems) {\n    elems = this._find(elems);\n    if (!elems) {\n      return;\n    }\n\n    this.stamps = this.stamps.concat(elems);\n    // ignore\n    elems.forEach(this.ignore, this);\n  };\n\n  /**\r\n   * removes elements to stamps\r\n   * @param {NodeList, Array, or Element} elems\r\n   */\n  proto.unstamp = function (elems) {\n    elems = this._find(elems);\n    if (!elems) {\n      return;\n    }\n\n    elems.forEach(function (elem) {\n      // filter out removed stamp elements\n      utils.removeFrom(this.stamps, elem);\n      this.unignore(elem);\n    }, this);\n  };\n\n  /**\r\n   * finds child elements\r\n   * @param {NodeList, Array, Element, or String} elems\r\n   * @returns {Array} elems\r\n   */\n  proto._find = function (elems) {\n    if (!elems) {\n      return;\n    }\n    // if string, use argument as selector string\n    if (typeof elems == 'string') {\n      elems = this.element.querySelectorAll(elems);\n    }\n    elems = utils.makeArray(elems);\n    return elems;\n  };\n\n  proto._manageStamps = function () {\n    if (!this.stamps || !this.stamps.length) {\n      return;\n    }\n\n    this._getBoundingRect();\n\n    this.stamps.forEach(this._manageStamp, this);\n  };\n\n  // update boundingLeft / Top\n  proto._getBoundingRect = function () {\n    // get bounding rect for container element\n    var boundingRect = this.element.getBoundingClientRect();\n    var size = this.size;\n    this._boundingRect = {\n      left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n      top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n      right: boundingRect.right - (size.paddingRight + size.borderRightWidth),\n      bottom: boundingRect.bottom - (size.paddingBottom + size.borderBottomWidth)\n    };\n  };\n\n  /**\r\n   * @param {Element} stamp\r\n  **/\n  proto._manageStamp = noop;\n\n  /**\r\n   * get x/y position of element relative to container element\r\n   * @param {Element} elem\r\n   * @returns {Object} offset - has left, top, right, bottom\r\n   */\n  proto._getElementOffset = function (elem) {\n    var boundingRect = elem.getBoundingClientRect();\n    var thisRect = this._boundingRect;\n    var size = getSize(elem);\n    var offset = {\n      left: boundingRect.left - thisRect.left - size.marginLeft,\n      top: boundingRect.top - thisRect.top - size.marginTop,\n      right: thisRect.right - boundingRect.right - size.marginRight,\n      bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n    };\n    return offset;\n  };\n\n  // -------------------------- resize -------------------------- //\n\n  // enable event handlers for listeners\n  // i.e. resize -> onresize\n  proto.handleEvent = utils.handleEvent;\n\n  /**\r\n   * Bind layout to window resizing\r\n   */\n  proto.bindResize = function () {\n    window.addEventListener('resize', this);\n    this.isResizeBound = true;\n  };\n\n  /**\r\n   * Unbind layout to window resizing\r\n   */\n  proto.unbindResize = function () {\n    window.removeEventListener('resize', this);\n    this.isResizeBound = false;\n  };\n\n  proto.onresize = function () {\n    this.resize();\n  };\n\n  utils.debounceMethod(Outlayer, 'onresize', 100);\n\n  proto.resize = function () {\n    // don't trigger if size did not change\n    // or if resize was unbound. See #9\n    if (!this.isResizeBound || !this.needsResizeLayout()) {\n      return;\n    }\n\n    this.layout();\n  };\n\n  /**\r\n   * check if layout is needed post layout\r\n   * @returns Boolean\r\n   */\n  proto.needsResizeLayout = function () {\n    var size = getSize(this.element);\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var hasSizes = this.size && size;\n    return hasSizes && size.innerWidth !== this.size.innerWidth;\n  };\n\n  // -------------------------- methods -------------------------- //\n\n  /**\r\n   * add items to Outlayer instance\r\n   * @param {Array or NodeList or Element} elems\r\n   * @returns {Array} items - Outlayer.Items\r\n  **/\n  proto.addItems = function (elems) {\n    var items = this._itemize(elems);\n    // add items to collection\n    if (items.length) {\n      this.items = this.items.concat(items);\n    }\n    return items;\n  };\n\n  /**\r\n   * Layout newly-appended item elements\r\n   * @param {Array or NodeList or Element} elems\r\n   */\n  proto.appended = function (elems) {\n    var items = this.addItems(elems);\n    if (!items.length) {\n      return;\n    }\n    // layout and reveal just the new items\n    this.layoutItems(items, true);\n    this.reveal(items);\n  };\n\n  /**\r\n   * Layout prepended elements\r\n   * @param {Array or NodeList or Element} elems\r\n   */\n  proto.prepended = function (elems) {\n    var items = this._itemize(elems);\n    if (!items.length) {\n      return;\n    }\n    // add items to beginning of collection\n    var previousItems = this.items.slice(0);\n    this.items = items.concat(previousItems);\n    // start new layout\n    this._resetLayout();\n    this._manageStamps();\n    // layout new stuff without transition\n    this.layoutItems(items, true);\n    this.reveal(items);\n    // layout previous items\n    this.layoutItems(previousItems);\n  };\n\n  /**\r\n   * reveal a collection of items\r\n   * @param {Array of Outlayer.Items} items\r\n   */\n  proto.reveal = function (items) {\n    this._emitCompleteOnItems('reveal', items);\n    if (!items || !items.length) {\n      return;\n    }\n    var stagger = this.updateStagger();\n    items.forEach(function (item, i) {\n      item.stagger(i * stagger);\n      item.reveal();\n    });\n  };\n\n  /**\r\n   * hide a collection of items\r\n   * @param {Array of Outlayer.Items} items\r\n   */\n  proto.hide = function (items) {\n    this._emitCompleteOnItems('hide', items);\n    if (!items || !items.length) {\n      return;\n    }\n    var stagger = this.updateStagger();\n    items.forEach(function (item, i) {\n      item.stagger(i * stagger);\n      item.hide();\n    });\n  };\n\n  /**\r\n   * reveal item elements\r\n   * @param {Array}, {Element}, {NodeList} items\r\n   */\n  proto.revealItemElements = function (elems) {\n    var items = this.getItems(elems);\n    this.reveal(items);\n  };\n\n  /**\r\n   * hide item elements\r\n   * @param {Array}, {Element}, {NodeList} items\r\n   */\n  proto.hideItemElements = function (elems) {\n    var items = this.getItems(elems);\n    this.hide(items);\n  };\n\n  /**\r\n   * get Outlayer.Item, given an Element\r\n   * @param {Element} elem\r\n   * @param {Function} callback\r\n   * @returns {Outlayer.Item} item\r\n   */\n  proto.getItem = function (elem) {\n    // loop through items to get the one that matches\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      if (item.element == elem) {\n        // return item\n        return item;\n      }\n    }\n  };\n\n  /**\r\n   * get collection of Outlayer.Items, given Elements\r\n   * @param {Array} elems\r\n   * @returns {Array} items - Outlayer.Items\r\n   */\n  proto.getItems = function (elems) {\n    elems = utils.makeArray(elems);\n    var items = [];\n    elems.forEach(function (elem) {\n      var item = this.getItem(elem);\n      if (item) {\n        items.push(item);\n      }\n    }, this);\n\n    return items;\n  };\n\n  /**\r\n   * remove element(s) from instance and DOM\r\n   * @param {Array or NodeList or Element} elems\r\n   */\n  proto.remove = function (elems) {\n    var removeItems = this.getItems(elems);\n\n    this._emitCompleteOnItems('remove', removeItems);\n\n    // bail if no items to remove\n    if (!removeItems || !removeItems.length) {\n      return;\n    }\n\n    removeItems.forEach(function (item) {\n      item.remove();\n      // remove item from collection\n      utils.removeFrom(this.items, item);\n    }, this);\n  };\n\n  // ----- destroy ----- //\n\n  // remove and disable Outlayer instance\n  proto.destroy = function () {\n    // clean up dynamic styles\n    var style = this.element.style;\n    style.height = '';\n    style.position = '';\n    style.width = '';\n    // destroy items\n    this.items.forEach(function (item) {\n      item.destroy();\n    });\n\n    this.unbindResize();\n\n    var id = this.element.outlayerGUID;\n    delete instances[id]; // remove reference to instance by id\n    delete this.element.outlayerGUID;\n    // remove data for jQuery\n    if (jQuery) {\n      jQuery.removeData(this.element, this.constructor.namespace);\n    }\n  };\n\n  // -------------------------- data -------------------------- //\n\n  /**\r\n   * get Outlayer instance from element\r\n   * @param {Element} elem\r\n   * @returns {Outlayer}\r\n   */\n  Outlayer.data = function (elem) {\n    elem = utils.getQueryElement(elem);\n    var id = elem && elem.outlayerGUID;\n    return id && instances[id];\n  };\n\n  // -------------------------- create Outlayer class -------------------------- //\n\n  /**\r\n   * create a layout class\r\n   * @param {String} namespace\r\n   */\n  Outlayer.create = function (namespace, options) {\n    // sub-class Outlayer\n    var Layout = subclass(Outlayer);\n    // apply new options and compatOptions\n    Layout.defaults = utils.extend({}, Outlayer.defaults);\n    utils.extend(Layout.defaults, options);\n    Layout.compatOptions = utils.extend({}, Outlayer.compatOptions);\n\n    Layout.namespace = namespace;\n\n    Layout.data = Outlayer.data;\n\n    // sub-class Item\n    Layout.Item = subclass(Item);\n\n    // -------------------------- declarative -------------------------- //\n\n    utils.htmlInit(Layout, namespace);\n\n    // -------------------------- jQuery bridge -------------------------- //\n\n    // make into jQuery plugin\n    if (jQuery && jQuery.bridget) {\n      jQuery.bridget(namespace, Layout);\n    }\n\n    return Layout;\n  };\n\n  function subclass(Parent) {\n    function SubClass() {\n      Parent.apply(this, arguments);\n    }\n\n    SubClass.prototype = Object.create(Parent.prototype);\n    SubClass.prototype.constructor = SubClass;\n\n    return SubClass;\n  }\n\n  // ----- helpers ----- //\n\n  // how many milliseconds are in each unit\n  var msUnits = {\n    ms: 1,\n    s: 1000\n  };\n\n  // munge time-like parameter into millisecond number\n  // '0.4s' -> 40\n  function getMilliseconds(time) {\n    if (typeof time == 'number') {\n      return time;\n    }\n    var matches = time.match(/(^\\d*\\.?\\d*)(\\w*)/);\n    var num = matches && matches[1];\n    var unit = matches && matches[2];\n    if (!num.length) {\n      return 0;\n    }\n    num = parseFloat(num);\n    var mult = msUnits[unit] || 1;\n    return num * mult;\n  }\n\n  // ----- fin ----- //\n\n  // back in global\n  Outlayer.Item = Item;\n\n  return Outlayer;\n});\n\n/**\r\n * Isotope Item\r\n**/\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_6__], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_7__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__));\n  } else {}\n})(window, function factory(Outlayer) {\n  'use strict';\n\n  // -------------------------- Item -------------------------- //\n\n  // sub-class Outlayer Item\n\n  function Item() {\n    Outlayer.Item.apply(this, arguments);\n  }\n\n  var proto = Item.prototype = Object.create(Outlayer.Item.prototype);\n\n  var _create = proto._create;\n  proto._create = function () {\n    // assign id, used for original-order sorting\n    this.id = this.layout.itemGUID++;\n    _create.call(this);\n    this.sortData = {};\n  };\n\n  proto.updateSortData = function () {\n    if (this.isIgnored) {\n      return;\n    }\n    // default sorters\n    this.sortData.id = this.id;\n    // for backward compatibility\n    this.sortData['original-order'] = this.id;\n    this.sortData.random = Math.random();\n    // go thru getSortData obj and apply the sorters\n    var getSortData = this.layout.options.getSortData;\n    var sorters = this.layout._sorters;\n    for (var key in getSortData) {\n      var sorter = sorters[key];\n      this.sortData[key] = sorter(this.element, this);\n    }\n  };\n\n  var _destroy = proto.destroy;\n  proto.destroy = function () {\n    // call super\n    _destroy.apply(this, arguments);\n    // reset display, #741\n    this.css({\n      display: ''\n    });\n  };\n\n  return Item;\n});\n\n/**\r\n * Isotope LayoutMode\r\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_2__, __WEBPACK_LOCAL_MODULE_6__], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_8__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__));\n  } else {}\n})(window, function factory(getSize, Outlayer) {\n  'use strict';\n\n  // layout mode class\n\n  function LayoutMode(isotope) {\n    this.isotope = isotope;\n    // link properties\n    if (isotope) {\n      this.options = isotope.options[this.namespace];\n      this.element = isotope.element;\n      this.items = isotope.filteredItems;\n      this.size = isotope.size;\n    }\n  }\n\n  var proto = LayoutMode.prototype;\n\n  /**\r\n   * some methods should just defer to default Outlayer method\r\n   * and reference the Isotope instance as `this`\r\n  **/\n  var facadeMethods = ['_resetLayout', '_getItemLayoutPosition', '_manageStamp', '_getContainerSize', '_getElementOffset', 'needsResizeLayout', '_getOption'];\n\n  facadeMethods.forEach(function (methodName) {\n    proto[methodName] = function () {\n      return Outlayer.prototype[methodName].apply(this.isotope, arguments);\n    };\n  });\n\n  // -----  ----- //\n\n  // for horizontal layout modes, check vertical size\n  proto.needsVerticalResizeLayout = function () {\n    // don't trigger if size did not change\n    var size = getSize(this.isotope.element);\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var hasSizes = this.isotope.size && size;\n    return hasSizes && size.innerHeight != this.isotope.size.innerHeight;\n  };\n\n  // ----- measurements ----- //\n\n  proto._getMeasurement = function () {\n    this.isotope._getMeasurement.apply(this, arguments);\n  };\n\n  proto.getColumnWidth = function () {\n    this.getSegmentSize('column', 'Width');\n  };\n\n  proto.getRowHeight = function () {\n    this.getSegmentSize('row', 'Height');\n  };\n\n  /**\r\n   * get columnWidth or rowHeight\r\n   * segment: 'column' or 'row'\r\n   * size 'Width' or 'Height'\r\n  **/\n  proto.getSegmentSize = function (segment, size) {\n    var segmentName = segment + size;\n    var outerSize = 'outer' + size;\n    // columnWidth / outerWidth // rowHeight / outerHeight\n    this._getMeasurement(segmentName, outerSize);\n    // got rowHeight or columnWidth, we can chill\n    if (this[segmentName]) {\n      return;\n    }\n    // fall back to item of first element\n    var firstItemSize = this.getFirstItemSize();\n    this[segmentName] = firstItemSize && firstItemSize[outerSize] ||\n    // or size of container\n    this.isotope.size['inner' + size];\n  };\n\n  proto.getFirstItemSize = function () {\n    var firstItem = this.isotope.filteredItems[0];\n    return firstItem && firstItem.element && getSize(firstItem.element);\n  };\n\n  // ----- methods that should reference isotope ----- //\n\n  proto.layout = function () {\n    this.isotope.layout.apply(this.isotope, arguments);\n  };\n\n  proto.getSize = function () {\n    this.isotope.getSize();\n    this.size = this.isotope.size;\n  };\n\n  // -------------------------- create -------------------------- //\n\n  LayoutMode.modes = {};\n\n  LayoutMode.create = function (namespace, options) {\n\n    function Mode() {\n      LayoutMode.apply(this, arguments);\n    }\n\n    Mode.prototype = Object.create(proto);\n    Mode.prototype.constructor = Mode;\n\n    // default options\n    if (options) {\n      Mode.options = options;\n    }\n\n    Mode.prototype.namespace = namespace;\n    // register in Isotope\n    LayoutMode.modes[namespace] = Mode;\n\n    return Mode;\n  };\n\n  return LayoutMode;\n});\n\n/*!\r\n * Masonry v4.2.1\r\n * Cascading grid layout library\r\n * https://masonry.desandro.com\r\n * MIT License\r\n * by David DeSandro\r\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_6__, __WEBPACK_LOCAL_MODULE_2__], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_9__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__));\n  } else {}\n})(window, function factory(Outlayer, getSize) {\n\n  // -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  var proto = Masonry.prototype;\n\n  proto._resetLayout = function () {\n    this.getSize();\n    this._getMeasurement('columnWidth', 'outerWidth');\n    this._getMeasurement('gutter', 'outerWidth');\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for (var i = 0; i < this.cols; i++) {\n      this.colYs.push(0);\n    }\n\n    this.maxY = 0;\n    this.horizontalColIndex = 0;\n  };\n\n  proto.measureColumns = function () {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if (!this.columnWidth) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize(firstItemElem).outerWidth ||\n      // if first elem has no width, default to size of container\n      this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[mathMethod](cols);\n    this.cols = Math.max(cols, 1);\n  };\n\n  proto.getContainerWidth = function () {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize(container);\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  proto._getItemLayoutPosition = function (item) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[mathMethod](item.size.outerWidth / this.columnWidth);\n    colSpan = Math.min(colSpan, this.cols);\n    // use horizontal or top column position\n    var colPosMethod = this.options.horizontalOrder ? '_getHorizontalColPosition' : '_getTopColPosition';\n    var colPosition = this[colPosMethod](colSpan, item);\n    // position the brick\n    var position = {\n      x: this.columnWidth * colPosition.col,\n      y: colPosition.y\n    };\n    // apply setHeight to necessary columns\n    var setHeight = colPosition.y + item.size.outerHeight;\n    var setMax = colSpan + colPosition.col;\n    for (var i = colPosition.col; i < setMax; i++) {\n      this.colYs[i] = setHeight;\n    }\n\n    return position;\n  };\n\n  proto._getTopColPosition = function (colSpan) {\n    var colGroup = this._getTopColGroup(colSpan);\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply(Math, colGroup);\n\n    return {\n      col: colGroup.indexOf(minimumY),\n      y: minimumY\n    };\n  };\n\n  /**\r\n   * @param {Number} colSpan - number of columns the element spans\r\n   * @returns {Array} colGroup\r\n   */\n  proto._getTopColGroup = function (colSpan) {\n    if (colSpan < 2) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for (var i = 0; i < groupCount; i++) {\n      colGroup[i] = this._getColGroupY(i, colSpan);\n    }\n    return colGroup;\n  };\n\n  proto._getColGroupY = function (col, colSpan) {\n    if (colSpan < 2) {\n      return this.colYs[col];\n    }\n    // make an array of colY values for that one group\n    var groupColYs = this.colYs.slice(col, col + colSpan);\n    // and get the max value of the array\n    return Math.max.apply(Math, groupColYs);\n  };\n\n  // get column position based on horizontal index. #873\n  proto._getHorizontalColPosition = function (colSpan, item) {\n    var col = this.horizontalColIndex % this.cols;\n    var isOver = colSpan > 1 && col + colSpan > this.cols;\n    // shift to next row if item can't fit on current row\n    col = isOver ? 0 : col;\n    // don't let zero-size items take up space\n    var hasSize = item.size.outerWidth && item.size.outerHeight;\n    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;\n\n    return {\n      col: col,\n      y: this._getColGroupY(col, colSpan)\n    };\n  };\n\n  proto._manageStamp = function (stamp) {\n    var stampSize = getSize(stamp);\n    var offset = this._getElementOffset(stamp);\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor(firstX / this.columnWidth);\n    firstCol = Math.max(0, firstCol);\n    var lastCol = Math.floor(lastX / this.columnWidth);\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min(this.cols - 1, lastCol);\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = (isOriginTop ? offset.top : offset.bottom) + stampSize.outerHeight;\n    for (var i = firstCol; i <= lastCol; i++) {\n      this.colYs[i] = Math.max(stampMaxY, this.colYs[i]);\n    }\n  };\n\n  proto._getContainerSize = function () {\n    this.maxY = Math.max.apply(Math, this.colYs);\n    var size = {\n      height: this.maxY\n    };\n\n    if (this._getOption('fitWidth')) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  proto._getContainerFitWidth = function () {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while (--i) {\n      if (this.colYs[i] !== 0) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return (this.cols - unusedCols) * this.columnWidth - this.gutter;\n  };\n\n  proto.needsResizeLayout = function () {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n});\n\n/*!\r\n * Masonry layout mode\r\n * sub-classes Masonry\r\n * https://masonry.desandro.com\r\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_8__, __WEBPACK_LOCAL_MODULE_9__], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_10__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__));\n  } else {}\n})(window, function factory(LayoutMode, Masonry) {\n  'use strict';\n\n  // -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n\n  var MasonryMode = LayoutMode.create('masonry');\n\n  var proto = MasonryMode.prototype;\n\n  var keepModeMethods = {\n    _getElementOffset: true,\n    layout: true,\n    _getMeasurement: true\n  };\n\n  // inherit Masonry prototype\n  for (var method in Masonry.prototype) {\n    // do not inherit mode methods\n    if (!keepModeMethods[method]) {\n      proto[method] = Masonry.prototype[method];\n    }\n  }\n\n  var measureColumns = proto.measureColumns;\n  proto.measureColumns = function () {\n    // set items, used if measuring first item\n    this.items = this.isotope.filteredItems;\n    measureColumns.call(this);\n  };\n\n  // point to mode options for fitWidth\n  var _getOption = proto._getOption;\n  proto._getOption = function (option) {\n    if (option == 'fitWidth') {\n      return this.options.isFitWidth !== undefined ? this.options.isFitWidth : this.options.fitWidth;\n    }\n    return _getOption.apply(this.isotope, arguments);\n  };\n\n  return MasonryMode;\n});\n\n/**\r\n * fitRows layout mode\r\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_8__], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_11__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__));\n  } else {}\n})(window, function factory(LayoutMode) {\n  'use strict';\n\n  var FitRows = LayoutMode.create('fitRows');\n\n  var proto = FitRows.prototype;\n\n  proto._resetLayout = function () {\n    this.x = 0;\n    this.y = 0;\n    this.maxY = 0;\n    this._getMeasurement('gutter', 'outerWidth');\n  };\n\n  proto._getItemLayoutPosition = function (item) {\n    item.getSize();\n\n    var itemWidth = item.size.outerWidth + this.gutter;\n    // if this element cannot fit in the current row\n    var containerWidth = this.isotope.size.innerWidth + this.gutter;\n    if (this.x !== 0 && itemWidth + this.x > containerWidth) {\n      this.x = 0;\n      this.y = this.maxY;\n    }\n\n    var position = {\n      x: this.x,\n      y: this.y\n    };\n\n    this.maxY = Math.max(this.maxY, this.y + item.size.outerHeight);\n    this.x += itemWidth;\n\n    return position;\n  };\n\n  proto._getContainerSize = function () {\n    return { height: this.maxY };\n  };\n\n  return FitRows;\n});\n\n/**\r\n * vertical layout mode\r\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_8__], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_LOCAL_MODULE_12__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__));\n  } else {}\n})(window, function factory(LayoutMode) {\n  'use strict';\n\n  var Vertical = LayoutMode.create('vertical', {\n    horizontalAlignment: 0\n  });\n\n  var proto = Vertical.prototype;\n\n  proto._resetLayout = function () {\n    this.y = 0;\n  };\n\n  proto._getItemLayoutPosition = function (item) {\n    item.getSize();\n    var x = (this.isotope.size.innerWidth - item.size.outerWidth) * this.options.horizontalAlignment;\n    var y = this.y;\n    this.y += item.size.outerHeight;\n    return { x: x, y: y };\n  };\n\n  proto._getContainerSize = function () {\n    return { height: this.y };\n  };\n\n  return Vertical;\n});\n\n/*!\r\n * Isotope v3.0.6\r\n *\r\n * Licensed GPLv3 for open source use\r\n * or Isotope Commercial License for commercial use\r\n *\r\n * https://isotope.metafizzy.co\r\n * Copyright 2010-2018 Metafizzy\r\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__WEBPACK_LOCAL_MODULE_6__, __WEBPACK_LOCAL_MODULE_2__, __WEBPACK_LOCAL_MODULE_3__, __WEBPACK_LOCAL_MODULE_4__, __WEBPACK_LOCAL_MODULE_7__, __WEBPACK_LOCAL_MODULE_8__,\n    // include default layout modes\n    __WEBPACK_LOCAL_MODULE_10__, __WEBPACK_LOCAL_MODULE_11__, __WEBPACK_LOCAL_MODULE_12__], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Outlayer, getSize, matchesSelector, utils, Item, LayoutMode) {\n      return factory(window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode);\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode) {\n\n  // -------------------------- vars -------------------------- //\n\n  var jQuery = window.jQuery;\n\n  // -------------------------- helpers -------------------------- //\n\n  var trim = String.prototype.trim ? function (str) {\n    return str.trim();\n  } : function (str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  };\n\n  // -------------------------- isotopeDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Isotope = Outlayer.create('isotope', {\n    layoutMode: 'masonry',\n    isJQueryFiltering: true,\n    sortAscending: true\n  });\n\n  Isotope.Item = Item;\n  Isotope.LayoutMode = LayoutMode;\n\n  var proto = Isotope.prototype;\n\n  proto._create = function () {\n    this.itemGUID = 0;\n    // functions that sort items\n    this._sorters = {};\n    this._getSorters();\n    // call super\n    Outlayer.prototype._create.call(this);\n\n    // create layout modes\n    this.modes = {};\n    // start filteredItems with all items\n    this.filteredItems = this.items;\n    // keep of track of sortBys\n    this.sortHistory = ['original-order'];\n    // create from registered layout modes\n    for (var name in LayoutMode.modes) {\n      this._initLayoutMode(name);\n    }\n  };\n\n  proto.reloadItems = function () {\n    // reset item ID counter\n    this.itemGUID = 0;\n    // call super\n    Outlayer.prototype.reloadItems.call(this);\n  };\n\n  proto._itemize = function () {\n    var items = Outlayer.prototype._itemize.apply(this, arguments);\n    // assign ID for original-order\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      item.id = this.itemGUID++;\n    }\n    this._updateItemsSortData(items);\n    return items;\n  };\n\n  // -------------------------- layout -------------------------- //\n\n  proto._initLayoutMode = function (name) {\n    var Mode = LayoutMode.modes[name];\n    // set mode options\n    // HACK extend initial options, back-fill in default options\n    var initialOpts = this.options[name] || {};\n    this.options[name] = Mode.options ? utils.extend(Mode.options, initialOpts) : initialOpts;\n    // init layout mode instance\n    this.modes[name] = new Mode(this);\n  };\n\n  proto.layout = function () {\n    // if first time doing layout, do all magic\n    if (!this._isLayoutInited && this._getOption('initLayout')) {\n      this.arrange();\n      return;\n    }\n    this._layout();\n  };\n\n  // private method to be used in layout() & magic()\n  proto._layout = function () {\n    // don't animate first layout\n    var isInstant = this._getIsInstant();\n    // layout flow\n    this._resetLayout();\n    this._manageStamps();\n    this.layoutItems(this.filteredItems, isInstant);\n\n    // flag for initalized\n    this._isLayoutInited = true;\n  };\n\n  // filter + sort + layout\n  proto.arrange = function (opts) {\n    // set any options pass\n    this.option(opts);\n    this._getIsInstant();\n    // filter, sort, and layout\n\n    // filter\n    var filtered = this._filter(this.items);\n    this.filteredItems = filtered.matches;\n\n    this._bindArrangeComplete();\n\n    if (this._isInstant) {\n      this._noTransition(this._hideReveal, [filtered]);\n    } else {\n      this._hideReveal(filtered);\n    }\n\n    this._sort();\n    this._layout();\n  };\n  // alias to _init for main plugin method\n  proto._init = proto.arrange;\n\n  proto._hideReveal = function (filtered) {\n    this.reveal(filtered.needReveal);\n    this.hide(filtered.needHide);\n  };\n\n  // HACK\n  // Don't animate/transition first layout\n  // Or don't animate/transition other layouts\n  proto._getIsInstant = function () {\n    var isLayoutInstant = this._getOption('layoutInstant');\n    var isInstant = isLayoutInstant !== undefined ? isLayoutInstant : !this._isLayoutInited;\n    this._isInstant = isInstant;\n    return isInstant;\n  };\n\n  // listen for layoutComplete, hideComplete and revealComplete\n  // to trigger arrangeComplete\n  proto._bindArrangeComplete = function () {\n    // listen for 3 events to trigger arrangeComplete\n    var isLayoutComplete, isHideComplete, isRevealComplete;\n    var _this = this;\n    function arrangeParallelCallback() {\n      if (isLayoutComplete && isHideComplete && isRevealComplete) {\n        _this.dispatchEvent('arrangeComplete', null, [_this.filteredItems]);\n      }\n    }\n    this.once('layoutComplete', function () {\n      isLayoutComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once('hideComplete', function () {\n      isHideComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once('revealComplete', function () {\n      isRevealComplete = true;\n      arrangeParallelCallback();\n    });\n  };\n\n  // -------------------------- filter -------------------------- //\n\n  proto._filter = function (items) {\n    var filter = this.options.filter;\n    filter = filter || '*';\n    var matches = [];\n    var hiddenMatched = [];\n    var visibleUnmatched = [];\n\n    var test = this._getFilterTest(filter);\n\n    // test each item\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      if (item.isIgnored) {\n        continue;\n      }\n      // add item to either matched or unmatched group\n      var isMatched = test(item);\n      // item.isFilterMatched = isMatched;\n      // add to matches if its a match\n      if (isMatched) {\n        matches.push(item);\n      }\n      // add to additional group if item needs to be hidden or revealed\n      if (isMatched && item.isHidden) {\n        hiddenMatched.push(item);\n      } else if (!isMatched && !item.isHidden) {\n        visibleUnmatched.push(item);\n      }\n    }\n\n    // return collections of items to be manipulated\n    return {\n      matches: matches,\n      needReveal: hiddenMatched,\n      needHide: visibleUnmatched\n    };\n  };\n\n  // get a jQuery, function, or a matchesSelector test given the filter\n  proto._getFilterTest = function (filter) {\n    if (jQuery && this.options.isJQueryFiltering) {\n      // use jQuery\n      return function (item) {\n        return jQuery(item.element).is(filter);\n      };\n    }\n    if (typeof filter == 'function') {\n      // use filter as function\n      return function (item) {\n        return filter(item.element);\n      };\n    }\n    // default, use filter as selector string\n    return function (item) {\n      return matchesSelector(item.element, filter);\n    };\n  };\n\n  // -------------------------- sorting -------------------------- //\n\n  /**\r\n   * @params {Array} elems\r\n   * @public\r\n   */\n  proto.updateSortData = function (elems) {\n    // get items\n    var items;\n    if (elems) {\n      elems = utils.makeArray(elems);\n      items = this.getItems(elems);\n    } else {\n      // update all items if no elems provided\n      items = this.items;\n    }\n\n    this._getSorters();\n    this._updateItemsSortData(items);\n  };\n\n  proto._getSorters = function () {\n    var getSortData = this.options.getSortData;\n    for (var key in getSortData) {\n      var sorter = getSortData[key];\n      this._sorters[key] = mungeSorter(sorter);\n    }\n  };\n\n  /**\r\n   * @params {Array} items - of Isotope.Items\r\n   * @private\r\n   */\n  proto._updateItemsSortData = function (items) {\n    // do not update if no items\n    var len = items && items.length;\n\n    for (var i = 0; len && i < len; i++) {\n      var item = items[i];\n      item.updateSortData();\n    }\n  };\n\n  // ----- munge sorter ----- //\n\n  // encapsulate this, as we just need mungeSorter\n  // other functions in here are just for munging\n  var mungeSorter = function () {\n    // add a magic layer to sorters for convienent shorthands\n    // `.foo-bar` will use the text of .foo-bar querySelector\n    // `[foo-bar]` will use attribute\n    // you can also add parser\n    // `.foo-bar parseInt` will parse that as a number\n    function mungeSorter(sorter) {\n      // if not a string, return function or whatever it is\n      if (typeof sorter != 'string') {\n        return sorter;\n      }\n      // parse the sorter string\n      var args = trim(sorter).split(' ');\n      var query = args[0];\n      // check if query looks like [an-attribute]\n      var attrMatch = query.match(/^\\[(.+)\\]$/);\n      var attr = attrMatch && attrMatch[1];\n      var getValue = getValueGetter(attr, query);\n      // use second argument as a parser\n      var parser = Isotope.sortDataParsers[args[1]];\n      // parse the value, if there was a parser\n      sorter = parser ? function (elem) {\n        return elem && parser(getValue(elem));\n      } :\n      // otherwise just return value\n      function (elem) {\n        return elem && getValue(elem);\n      };\n\n      return sorter;\n    }\n\n    // get an attribute getter, or get text of the querySelector\n    function getValueGetter(attr, query) {\n      // if query looks like [foo-bar], get attribute\n      if (attr) {\n        return function getAttribute(elem) {\n          return elem.getAttribute(attr);\n        };\n      }\n\n      // otherwise, assume its a querySelector, and get its text\n      return function getChildText(elem) {\n        var child = elem.querySelector(query);\n        return child && child.textContent;\n      };\n    }\n\n    return mungeSorter;\n  }();\n\n  // parsers used in getSortData shortcut strings\n  Isotope.sortDataParsers = {\n    'parseInt': function (_parseInt) {\n      function parseInt(_x) {\n        return _parseInt.apply(this, arguments);\n      }\n\n      parseInt.toString = function () {\n        return _parseInt.toString();\n      };\n\n      return parseInt;\n    }(function (val) {\n      return parseInt(val, 10);\n    }),\n    'parseFloat': function (_parseFloat) {\n      function parseFloat(_x2) {\n        return _parseFloat.apply(this, arguments);\n      }\n\n      parseFloat.toString = function () {\n        return _parseFloat.toString();\n      };\n\n      return parseFloat;\n    }(function (val) {\n      return parseFloat(val);\n    })\n  };\n\n  // ----- sort method ----- //\n\n  // sort filteredItem order\n  proto._sort = function () {\n    if (!this.options.sortBy) {\n      return;\n    }\n    // keep track of sortBy History\n    var sortBys = utils.makeArray(this.options.sortBy);\n    if (!this._getIsSameSortBy(sortBys)) {\n      // concat all sortBy and sortHistory, add to front, oldest goes in last\n      this.sortHistory = sortBys.concat(this.sortHistory);\n    }\n    // sort magic\n    var itemSorter = getItemSorter(this.sortHistory, this.options.sortAscending);\n    this.filteredItems.sort(itemSorter);\n  };\n\n  // check if sortBys is same as start of sortHistory\n  proto._getIsSameSortBy = function (sortBys) {\n    for (var i = 0; i < sortBys.length; i++) {\n      if (sortBys[i] != this.sortHistory[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // returns a function used for sorting\n  function getItemSorter(sortBys, sortAsc) {\n    return function sorter(itemA, itemB) {\n      // cycle through all sortKeys\n      for (var i = 0; i < sortBys.length; i++) {\n        var sortBy = sortBys[i];\n        var a = itemA.sortData[sortBy];\n        var b = itemB.sortData[sortBy];\n        if (a > b || a < b) {\n          // if sortAsc is an object, use the value given the sortBy key\n          var isAscending = sortAsc[sortBy] !== undefined ? sortAsc[sortBy] : sortAsc;\n          var direction = isAscending ? 1 : -1;\n          return (a > b ? 1 : -1) * direction;\n        }\n      }\n      return 0;\n    };\n  }\n\n  // -------------------------- methods -------------------------- //\n\n  // get layout mode\n  proto._mode = function () {\n    var layoutMode = this.options.layoutMode;\n    var mode = this.modes[layoutMode];\n    if (!mode) {\n      // TODO console.error\n      throw new Error('No layout mode: ' + layoutMode);\n    }\n    // HACK sync mode's options\n    // any options set after init for layout mode need to be synced\n    mode.options = this.options[layoutMode];\n    return mode;\n  };\n\n  proto._resetLayout = function () {\n    // trigger original reset layout\n    Outlayer.prototype._resetLayout.call(this);\n    this._mode()._resetLayout();\n  };\n\n  proto._getItemLayoutPosition = function (item) {\n    return this._mode()._getItemLayoutPosition(item);\n  };\n\n  proto._manageStamp = function (stamp) {\n    this._mode()._manageStamp(stamp);\n  };\n\n  proto._getContainerSize = function () {\n    return this._mode()._getContainerSize();\n  };\n\n  proto.needsResizeLayout = function () {\n    return this._mode().needsResizeLayout();\n  };\n\n  // -------------------------- adding & removing -------------------------- //\n\n  // HEADS UP overwrites default Outlayer appended\n  proto.appended = function (elems) {\n    var items = this.addItems(elems);\n    if (!items.length) {\n      return;\n    }\n    // filter, layout, reveal new items\n    var filteredItems = this._filterRevealAdded(items);\n    // add to filteredItems\n    this.filteredItems = this.filteredItems.concat(filteredItems);\n  };\n\n  // HEADS UP overwrites default Outlayer prepended\n  proto.prepended = function (elems) {\n    var items = this._itemize(elems);\n    if (!items.length) {\n      return;\n    }\n    // start new layout\n    this._resetLayout();\n    this._manageStamps();\n    // filter, layout, reveal new items\n    var filteredItems = this._filterRevealAdded(items);\n    // layout previous items\n    this.layoutItems(this.filteredItems);\n    // add to items and filteredItems\n    this.filteredItems = filteredItems.concat(this.filteredItems);\n    this.items = items.concat(this.items);\n  };\n\n  proto._filterRevealAdded = function (items) {\n    var filtered = this._filter(items);\n    this.hide(filtered.needHide);\n    // reveal all new items\n    this.reveal(filtered.matches);\n    // layout new items, no transition\n    this.layoutItems(filtered.matches, true);\n    return filtered.matches;\n  };\n\n  /**\r\n   * Filter, sort, and layout newly-appended item elements\r\n   * @param {Array or NodeList or Element} elems\r\n   */\n  proto.insert = function (elems) {\n    var items = this.addItems(elems);\n    if (!items.length) {\n      return;\n    }\n    // append item elements\n    var i, item;\n    var len = items.length;\n    for (i = 0; i < len; i++) {\n      item = items[i];\n      this.element.appendChild(item.element);\n    }\n    // filter new stuff\n    var filteredInsertItems = this._filter(items).matches;\n    // set flag\n    for (i = 0; i < len; i++) {\n      items[i].isLayoutInstant = true;\n    }\n    this.arrange();\n    // reset flag\n    for (i = 0; i < len; i++) {\n      delete items[i].isLayoutInstant;\n    }\n    this.reveal(filteredInsertItems);\n  };\n\n  var _remove = proto.remove;\n  proto.remove = function (elems) {\n    elems = utils.makeArray(elems);\n    var removeItems = this.getItems(elems);\n    // do regular thing\n    _remove.call(this, elems);\n    // bail if no items to remove\n    var len = removeItems && removeItems.length;\n    // remove elems from filteredItems\n    for (var i = 0; len && i < len; i++) {\n      var item = removeItems[i];\n      // remove item from collection\n      utils.removeFrom(this.filteredItems, item);\n    }\n  };\n\n  proto.shuffle = function () {\n    // update random sortData\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      item.sortData.random = Math.random();\n    }\n    this.options.sortBy = 'random';\n    this._sort();\n    this._layout();\n  };\n\n  /**\r\n   * trigger fn without transition\r\n   * kind of hacky to have this in the first place\r\n   * @param {Function} fn\r\n   * @param {Array} args\r\n   * @returns ret\r\n   * @private\r\n   */\n  proto._noTransition = function (fn, args) {\n    // save transitionDuration before disabling\n    var transitionDuration = this.options.transitionDuration;\n    // disable transition\n    this.options.transitionDuration = 0;\n    // do it\n    var returnValue = fn.apply(this, args);\n    // re-enable transition for reveal\n    this.options.transitionDuration = transitionDuration;\n    return returnValue;\n  };\n\n  // ----- helper methods ----- //\n\n  /**\r\n   * getter method for getting filtered item elements\r\n   * @returns {Array} elems - collection of item elements\r\n   */\n  proto.getFilteredItemElements = function () {\n    return this.filteredItems.map(function (item) {\n      return item.element;\n    });\n  };\n\n  // -----  ----- //\n\n  return Isotope;\n});\n\n//# sourceURL=webpack:///./assets/js/lib/isotope.pkgd.js?");

/***/ }),

/***/ "./assets/js/lib/modernizr.js":
/*!************************************!*\
  !*** ./assets/js/lib/modernizr.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\r\n * modernizr v3.6.0\r\n * Build https://modernizr.com/download?-audio-borderimage-boxshadow-canvas-checked-cookies-csscalc-csscolumns-cubicbezierrange-displaytable-flash-fullscreen-geolocation-hiddenscroll-htmlimports-json-setclasses-dontmin\r\n *\r\n * Copyright (c)\r\n *  Faruk Ates\r\n *  Paul Irish\r\n *  Alex Sexton\r\n *  Ryan Seddon\r\n *  Patrick Kettner\r\n *  Stu Cox\r\n *  Richard Herrera\r\n\r\n * MIT License\r\n */\n\n/*\r\n * Modernizr tests which native CSS3 and HTML5 features are available in the\r\n * current UA and makes the results available to you in two ways: as properties on\r\n * a global `Modernizr` object, and as classes on the `<html>` element. This\r\n * information allows you to progressively enhance your pages with a granular level\r\n * of control over the experience.\r\n*/\n\n;(function (window, document, undefined) {\n  var classes = [];\n\n  var tests = [];\n\n  /**\r\n   *\r\n   * ModernizrProto is the constructor for Modernizr\r\n   *\r\n   * @class\r\n   * @access public\r\n   */\n\n  var ModernizrProto = {\n    // The current version, dummy\n    _version: '3.6.0',\n\n    // Any settings that don't work as separate modules\n    // can go in here as configuration.\n    _config: {\n      'classPrefix': '',\n      'enableClasses': true,\n      'enableJSClass': true,\n      'usePrefixes': true\n    },\n\n    // Queue of tests\n    _q: [],\n\n    // Stub these for people who are listening\n    on: function on(test, cb) {\n      // I don't really think people should do this, but we can\n      // safe guard it a bit.\n      // -- NOTE:: this gets WAY overridden in src/addTest for actual async tests.\n      // This is in case people listen to synchronous tests. I would leave it out,\n      // but the code to *disallow* sync tests in the real version of this\n      // function is actually larger than this.\n      var self = this;\n      setTimeout(function () {\n        cb(self[test]);\n      }, 0);\n    },\n\n    addTest: function addTest(name, fn, options) {\n      tests.push({ name: name, fn: fn, options: options });\n    },\n\n    addAsyncTest: function addAsyncTest(fn) {\n      tests.push({ name: null, fn: fn });\n    }\n  };\n\n  // Fake some of Object.create so we can force non test results to be non \"own\" properties.\n  var Modernizr = function Modernizr() {};\n  Modernizr.prototype = ModernizrProto;\n\n  // Leak modernizr globally when you `require` it rather than force it here.\n  // Overwrite name so constructor name is nicer :D\n  Modernizr = new Modernizr();\n\n  /*!\r\n  {\r\n    \"name\": \"Cookies\",\r\n    \"property\": \"cookies\",\r\n    \"tags\": [\"storage\"],\r\n    \"authors\": [\"tauren\"]\r\n  }\r\n  !*/\n  /* DOC\r\n  Detects whether cookie support is enabled.\r\n  */\n\n  // https://github.com/Modernizr/Modernizr/issues/191\n\n  Modernizr.addTest('cookies', function () {\n    // navigator.cookieEnabled cannot detect custom or nuanced cookie blocking\n    // configurations. For example, when blocking cookies via the Advanced\n    // Privacy Settings in IE9, it always returns true. And there have been\n    // issues in the past with site-specific exceptions.\n    // Don't rely on it.\n\n    // try..catch because some in situations `document.cookie` is exposed but throws a\n    // SecurityError if you try to access it; e.g. documents created from data URIs\n    // or in sandboxed iframes (depending on flags/context)\n    try {\n      // Create cookie\n      document.cookie = 'cookietest=1';\n      var ret = document.cookie.indexOf('cookietest=') != -1;\n      // Delete cookie\n      document.cookie = 'cookietest=1; expires=Thu, 01-Jan-1970 00:00:01 GMT';\n      return ret;\n    } catch (e) {\n      return false;\n    }\n  });\n\n  /*!\r\n  {\r\n    \"name\": \"Geolocation API\",\r\n    \"property\": \"geolocation\",\r\n    \"caniuse\": \"geolocation\",\r\n    \"tags\": [\"media\"],\r\n    \"notes\": [{\r\n      \"name\": \"MDN documentation\",\r\n      \"href\": \"https://developer.mozilla.org/en-US/docs/WebAPI/Using_geolocation\"\r\n    }],\r\n    \"polyfills\": [\r\n      \"joshuabell-polyfill\",\r\n      \"webshims\",\r\n      \"geo-location-javascript\",\r\n      \"geolocation-api-polyfill\"\r\n    ]\r\n  }\r\n  !*/\n  /* DOC\r\n  Detects support for the Geolocation API for users to provide their location to web applications.\r\n  */\n\n  // geolocation is often considered a trivial feature detect...\n  // Turns out, it's quite tricky to get right:\n  //\n  // Using !!navigator.geolocation does two things we don't want. It:\n  //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n  //   2. Disables page caching in WebKit: webk.it/43956\n  //\n  // Meanwhile, in Firefox < 8, an about:config setting could expose\n  // a false positive that would throw an exception: bugzil.la/688158\n\n  Modernizr.addTest('geolocation', 'geolocation' in navigator);\n\n  /*!\r\n  {\r\n    \"name\": \"JSON\",\r\n    \"property\": \"json\",\r\n    \"caniuse\": \"json\",\r\n    \"notes\": [{\r\n      \"name\": \"MDN documentation\",\r\n      \"href\": \"https://developer.mozilla.org/en-US/docs/Glossary/JSON\"\r\n    }],\r\n    \"polyfills\": [\"json2\"]\r\n  }\r\n  !*/\n  /* DOC\r\n  Detects native support for JSON handling functions.\r\n  */\n\n  // this will also succeed if you've loaded the JSON2.js polyfill ahead of time\n  //   ... but that should be obvious. :)\n\n  Modernizr.addTest('json', 'JSON' in window && 'parse' in JSON && 'stringify' in JSON);\n\n  /**\r\n   * is returns a boolean if the typeof an obj is exactly type.\r\n   *\r\n   * @access private\r\n   * @function is\r\n   * @param {*} obj - A thing we want to check the type of\r\n   * @param {string} type - A string to compare the typeof against\r\n   * @returns {boolean}\r\n   */\n\n  function is(obj, type) {\n    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === type;\n  }\n  ;\n\n  /**\r\n   * Run through all tests and detect their support in the current UA.\r\n   *\r\n   * @access private\r\n   */\n\n  function testRunner() {\n    var featureNames;\n    var feature;\n    var aliasIdx;\n    var result;\n    var nameIdx;\n    var featureName;\n    var featureNameSplit;\n\n    for (var featureIdx in tests) {\n      if (tests.hasOwnProperty(featureIdx)) {\n        featureNames = [];\n        feature = tests[featureIdx];\n        // run the test, throw the return value into the Modernizr,\n        // then based on that boolean, define an appropriate className\n        // and push it into an array of classes we'll join later.\n        //\n        // If there is no name, it's an 'async' test that is run,\n        // but not directly added to the object. That should\n        // be done with a post-run addTest call.\n        if (feature.name) {\n          featureNames.push(feature.name.toLowerCase());\n\n          if (feature.options && feature.options.aliases && feature.options.aliases.length) {\n            // Add all the aliases into the names list\n            for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\n              featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\n            }\n          }\n        }\n\n        // Run the test, or use the raw value if it's not a function\n        result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\n\n        // Set each of the names on the Modernizr object\n        for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\n          featureName = featureNames[nameIdx];\n          // Support dot properties as sub tests. We don't do checking to make sure\n          // that the implied parent tests have been added. You must call them in\n          // order (either in the test, or make the parent test a dependency).\n          //\n          // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\n          // hashtag famous last words\n          featureNameSplit = featureName.split('.');\n\n          if (featureNameSplit.length === 1) {\n            Modernizr[featureNameSplit[0]] = result;\n          } else {\n            // cast to a Boolean, if not one already\n            if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n              Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n            }\n\n            Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\n          }\n\n          classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\n        }\n      }\n    }\n  }\n  ;\n\n  /**\r\n   * docElement is a convenience wrapper to grab the root element of the document\r\n   *\r\n   * @access private\r\n   * @returns {HTMLElement|SVGElement} The root element of the document\r\n   */\n\n  var docElement = document.documentElement;\n\n  /**\r\n   * A convenience helper to check if the document we are running in is an SVG document\r\n   *\r\n   * @access private\r\n   * @returns {boolean}\r\n   */\n\n  var isSVG = docElement.nodeName.toLowerCase() === 'svg';\n\n  /**\r\n   * setClasses takes an array of class names and adds them to the root element\r\n   *\r\n   * @access private\r\n   * @function setClasses\r\n   * @param {string[]} classes - Array of class names\r\n   */\n\n  // Pass in an and array of class names, e.g.:\n  //  ['no-webp', 'borderradius', ...]\n  function setClasses(classes) {\n    var className = docElement.className;\n    var classPrefix = Modernizr._config.classPrefix || '';\n\n    if (isSVG) {\n      className = className.baseVal;\n    }\n\n    // Change `no-js` to `js` (independently of the `enableClasses` option)\n    // Handle classPrefix on this too\n    if (Modernizr._config.enableJSClass) {\n      var reJS = new RegExp('(^|\\\\s)' + classPrefix + 'no-js(\\\\s|$)');\n      className = className.replace(reJS, '$1' + classPrefix + 'js$2');\n    }\n\n    if (Modernizr._config.enableClasses) {\n      // Add the new classes\n      className += ' ' + classPrefix + classes.join(' ' + classPrefix);\n      if (isSVG) {\n        docElement.className.baseVal = className;\n      } else {\n        docElement.className = className;\n      }\n    }\n  }\n\n  ;\n\n  /**\r\n   * createElement is a convenience wrapper around document.createElement. Since we\r\n   * use createElement all over the place, this allows for (slightly) smaller code\r\n   * as well as abstracting away issues with creating elements in contexts other than\r\n   * HTML documents (e.g. SVG documents).\r\n   *\r\n   * @access private\r\n   * @function createElement\r\n   * @returns {HTMLElement|SVGElement} An HTML or SVG element\r\n   */\n\n  function createElement() {\n    if (typeof document.createElement !== 'function') {\n      // This is the case in IE7, where the type of createElement is \"object\".\n      // For this reason, we cannot call apply() as Object is not a Function.\n      return document.createElement(arguments[0]);\n    } else if (isSVG) {\n      return document.createElementNS.call(document, 'http://www.w3.org/2000/svg', arguments[0]);\n    } else {\n      return document.createElement.apply(document, arguments);\n    }\n  }\n\n  ;\n  /*!\r\n  {\r\n    \"name\" : \"HTML5 Audio Element\",\r\n    \"property\": \"audio\",\r\n    \"tags\" : [\"html5\", \"audio\", \"media\"]\r\n  }\r\n  !*/\n  /* DOC\r\n  Detects the audio element\r\n  */\n\n  // This tests evaluates support of the audio element, as well as\n  // testing what types of content it supports.\n  //\n  // We're using the Boolean constructor here, so that we can extend the value\n  // e.g.  Modernizr.audio     // true\n  //       Modernizr.audio.ogg // 'probably'\n  //\n  // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n  //                     thx to NielsLeenheer and zcorpan\n\n  // Note: in some older browsers, \"no\" was a return value instead of empty string.\n  //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n  //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n  Modernizr.addTest('audio', function () {\n    var elem = createElement('audio');\n    var bool = false;\n\n    try {\n      bool = !!elem.canPlayType;\n      if (bool) {\n        bool = new Boolean(bool);\n        bool.ogg = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, '');\n        bool.mp3 = elem.canPlayType('audio/mpeg; codecs=\"mp3\"').replace(/^no$/, '');\n        bool.opus = elem.canPlayType('audio/ogg; codecs=\"opus\"') || elem.canPlayType('audio/webm; codecs=\"opus\"').replace(/^no$/, '');\n\n        // Mimetypes accepted:\n        //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n        //   bit.ly/iphoneoscodecs\n        bool.wav = elem.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, '');\n        bool.m4a = (elem.canPlayType('audio/x-m4a;') || elem.canPlayType('audio/aac;')).replace(/^no$/, '');\n      }\n    } catch (e) {}\n\n    return bool;\n  });\n\n  /*!\r\n  {\r\n    \"name\": \"Canvas\",\r\n    \"property\": \"canvas\",\r\n    \"caniuse\": \"canvas\",\r\n    \"tags\": [\"canvas\", \"graphics\"],\r\n    \"polyfills\": [\"flashcanvas\", \"excanvas\", \"slcanvas\", \"fxcanvas\"]\r\n  }\r\n  !*/\n  /* DOC\r\n  Detects support for the `<canvas>` element for 2D drawing.\r\n  */\n\n  // On the S60 and BB Storm, getContext exists, but always returns undefined\n  // so we actually have to call getContext() to verify\n  // github.com/Modernizr/Modernizr/issues/issue/97/\n  Modernizr.addTest('canvas', function () {\n    var elem = createElement('canvas');\n    return !!(elem.getContext && elem.getContext('2d'));\n  });\n\n  /**\r\n   * getBody returns the body of a document, or an element that can stand in for\r\n   * the body if a real body does not exist\r\n   *\r\n   * @access private\r\n   * @function getBody\r\n   * @returns {HTMLElement|SVGElement} Returns the real body of a document, or an\r\n   * artificially created element that stands in for the body\r\n   */\n\n  function getBody() {\n    // After page load injecting a fake body doesn't work so check if body exists\n    var body = document.body;\n\n    if (!body) {\n      // Can't use the real body create a fake one.\n      body = createElement(isSVG ? 'svg' : 'body');\n      body.fake = true;\n    }\n\n    return body;\n  }\n\n  ;\n\n  /**\r\n   * List of property values to set for css tests. See ticket #21\r\n   * http://git.io/vUGl4\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr._prefixes\r\n   * @optionName Modernizr._prefixes\r\n   * @optionProp prefixes\r\n   * @access public\r\n   * @example\r\n   *\r\n   * Modernizr._prefixes is the internal list of prefixes that we test against\r\n   * inside of things like [prefixed](#modernizr-prefixed) and [prefixedCSS](#-code-modernizr-prefixedcss). It is simply\r\n   * an array of kebab-case vendor prefixes you can use within your code.\r\n   *\r\n   * Some common use cases include\r\n   *\r\n   * Generating all possible prefixed version of a CSS property\r\n   * ```js\r\n   * var rule = Modernizr._prefixes.join('transform: rotate(20deg); ');\r\n   *\r\n   * rule === 'transform: rotate(20deg); webkit-transform: rotate(20deg); moz-transform: rotate(20deg); o-transform: rotate(20deg); ms-transform: rotate(20deg);'\r\n   * ```\r\n   *\r\n   * Generating all possible prefixed version of a CSS value\r\n   * ```js\r\n   * rule = 'display:' +  Modernizr._prefixes.join('flex; display:') + 'flex';\r\n   *\r\n   * rule === 'display:flex; display:-webkit-flex; display:-moz-flex; display:-o-flex; display:-ms-flex; display:flex'\r\n   * ```\r\n   */\n\n  // we use ['',''] rather than an empty array in order to allow a pattern of .`join()`ing prefixes to test\n  // values in feature detects to continue to work\n  var prefixes = ModernizrProto._config.usePrefixes ? ' -webkit- -moz- -o- -ms- '.split(' ') : ['', ''];\n\n  // expose these for the plugin API. Look in the source for how to join() them against your input\n  ModernizrProto._prefixes = prefixes;\n\n  /*!\r\n  {\r\n    \"name\": \"CSS Calc\",\r\n    \"property\": \"csscalc\",\r\n    \"caniuse\": \"calc\",\r\n    \"tags\": [\"css\"],\r\n    \"builderAliases\": [\"css_calc\"],\r\n    \"authors\": [\"@calvein\"]\r\n  }\r\n  !*/\n  /* DOC\r\n  Method of allowing calculated values for length units. For example:\r\n  \r\n  ```css\r\n  //lem {\r\n    width: calc(100% - 3em);\r\n  }\r\n  ```\r\n  */\n\n  Modernizr.addTest('csscalc', function () {\n    var prop = 'width:';\n    var value = 'calc(10px);';\n    var el = createElement('a');\n\n    el.style.cssText = prop + prefixes.join(value + prop);\n\n    return !!el.style.length;\n  });\n\n  /*!\r\n  {\r\n    \"name\": \"CSS Cubic Bezier Range\",\r\n    \"property\": \"cubicbezierrange\",\r\n    \"tags\": [\"css\"],\r\n    \"builderAliases\": [\"css_cubicbezierrange\"],\r\n    \"doc\" : null,\r\n    \"authors\": [\"@calvein\"],\r\n    \"warnings\": [\"cubic-bezier values can't be > 1 for Webkit until [bug #45761](https://bugs.webkit.org/show_bug.cgi?id=45761) is fixed\"],\r\n    \"notes\": [{\r\n      \"name\": \"Comprehensive Compat Chart\",\r\n      \"href\": \"http://muddledramblings.com/table-of-css3-border-radius-compliance\"\r\n    }]\r\n  }\r\n  !*/\n\n  Modernizr.addTest('cubicbezierrange', function () {\n    var el = createElement('a');\n    el.style.cssText = prefixes.join('transition-timing-function:cubic-bezier(1,0,0,1.1); ');\n    return !!el.style.length;\n  });\n\n  /**\r\n   * hasOwnProp is a shim for hasOwnProperty that is needed for Safari 2.0 support\r\n   *\r\n   * @author kangax\r\n   * @access private\r\n   * @function hasOwnProp\r\n   * @param {object} object - The object to check for a property\r\n   * @param {string} property - The property to check for\r\n   * @returns {boolean}\r\n   */\n\n  // hasOwnProperty shim by kangax needed for Safari 2.0 support\n  var hasOwnProp;\n\n  (function () {\n    var _hasOwnProperty = {}.hasOwnProperty;\n    /* istanbul ignore else */\n    /* we have no way of testing IE 5.5 or safari 2,\r\n     * so just assume the else gets hit */\n    if (!is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined')) {\n      hasOwnProp = function hasOwnProp(object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    } else {\n      hasOwnProp = function hasOwnProp(object, property) {\n        /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return property in object && is(object.constructor.prototype[property], 'undefined');\n      };\n    }\n  })();\n\n  // _l tracks listeners for async tests, as well as tests that execute after the initial run\n  ModernizrProto._l = {};\n\n  /**\r\n   * Modernizr.on is a way to listen for the completion of async tests. Being\r\n   * asynchronous, they may not finish before your scripts run. As a result you\r\n   * will get a possibly false negative `undefined` value.\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.on\r\n   * @access public\r\n   * @function on\r\n   * @param {string} feature - String name of the feature detect\r\n   * @param {function} cb - Callback function returning a Boolean - true if feature is supported, false if not\r\n   * @example\r\n   *\r\n   * ```js\r\n   * Modernizr.on('flash', function( result ) {\r\n   *   if (result) {\r\n   *    // the browser has flash\r\n   *   } else {\r\n   *     // the browser does not have flash\r\n   *   }\r\n   * });\r\n   * ```\r\n   */\n\n  ModernizrProto.on = function (feature, cb) {\n    // Create the list of listeners if it doesn't exist\n    if (!this._l[feature]) {\n      this._l[feature] = [];\n    }\n\n    // Push this test on to the listener list\n    this._l[feature].push(cb);\n\n    // If it's already been resolved, trigger it on next tick\n    if (Modernizr.hasOwnProperty(feature)) {\n      // Next Tick\n      setTimeout(function () {\n        Modernizr._trigger(feature, Modernizr[feature]);\n      }, 0);\n    }\n  };\n\n  /**\r\n   * _trigger is the private function used to signal test completion and run any\r\n   * callbacks registered through [Modernizr.on](#modernizr-on)\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr._trigger\r\n   * @access private\r\n   * @function _trigger\r\n   * @param {string} feature - string name of the feature detect\r\n   * @param {function|boolean} [res] - A feature detection function, or the boolean =\r\n   * result of a feature detection function\r\n   */\n\n  ModernizrProto._trigger = function (feature, res) {\n    if (!this._l[feature]) {\n      return;\n    }\n\n    var cbs = this._l[feature];\n\n    // Force async\n    setTimeout(function () {\n      var i, cb;\n      for (i = 0; i < cbs.length; i++) {\n        cb = cbs[i];\n        cb(res);\n      }\n    }, 0);\n\n    // Don't trigger these again\n    delete this._l[feature];\n  };\n\n  /**\r\n   * addTest allows you to define your own feature detects that are not currently\r\n   * included in Modernizr (under the covers it's the exact same code Modernizr\r\n   * uses for its own [feature detections](https://github.com/Modernizr/Modernizr/tree/master/feature-detects)). Just like the offical detects, the result\r\n   * will be added onto the Modernizr object, as well as an appropriate className set on\r\n   * the html element when configured to do so\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.addTest\r\n   * @optionName Modernizr.addTest()\r\n   * @optionProp addTest\r\n   * @access public\r\n   * @function addTest\r\n   * @param {string|object} feature - The string name of the feature detect, or an\r\n   * object of feature detect names and test\r\n   * @param {function|boolean} test - Function returning true if feature is supported,\r\n   * false if not. Otherwise a boolean representing the results of a feature detection\r\n   * @example\r\n   *\r\n   * The most common way of creating your own feature detects is by calling\r\n   * `Modernizr.addTest` with a string (preferably just lowercase, without any\r\n   * punctuation), and a function you want executed that will return a boolean result\r\n   *\r\n   * ```js\r\n   * Modernizr.addTest('itsTuesday', function() {\r\n   *  var d = new Date();\r\n   *  return d.getDay() === 2;\r\n   * });\r\n   * ```\r\n   *\r\n   * When the above is run, it will set Modernizr.itstuesday to `true` when it is tuesday,\r\n   * and to `false` every other day of the week. One thing to notice is that the names of\r\n   * feature detect functions are always lowercased when added to the Modernizr object. That\r\n   * means that `Modernizr.itsTuesday` will not exist, but `Modernizr.itstuesday` will.\r\n   *\r\n   *\r\n   *  Since we only look at the returned value from any feature detection function,\r\n   *  you do not need to actually use a function. For simple detections, just passing\r\n   *  in a statement that will return a boolean value works just fine.\r\n   *\r\n   * ```js\r\n   * Modernizr.addTest('hasJquery', 'jQuery' in window);\r\n   * ```\r\n   *\r\n   * Just like before, when the above runs `Modernizr.hasjquery` will be true if\r\n   * jQuery has been included on the page. Not using a function saves a small amount\r\n   * of overhead for the browser, as well as making your code much more readable.\r\n   *\r\n   * Finally, you also have the ability to pass in an object of feature names and\r\n   * their tests. This is handy if you want to add multiple detections in one go.\r\n   * The keys should always be a string, and the value can be either a boolean or\r\n   * function that returns a boolean.\r\n   *\r\n   * ```js\r\n   * var detects = {\r\n   *  'hasjquery': 'jQuery' in window,\r\n   *  'itstuesday': function() {\r\n   *    var d = new Date();\r\n   *    return d.getDay() === 2;\r\n   *  }\r\n   * }\r\n   *\r\n   * Modernizr.addTest(detects);\r\n   * ```\r\n   *\r\n   * There is really no difference between the first methods and this one, it is\r\n   * just a convenience to let you write more readable code.\r\n   */\n\n  function addTest(feature, test) {\n\n    if ((typeof feature === 'undefined' ? 'undefined' : _typeof(feature)) == 'object') {\n      for (var key in feature) {\n        if (hasOwnProp(feature, key)) {\n          addTest(key, feature[key]);\n        }\n      }\n    } else {\n\n      feature = feature.toLowerCase();\n      var featureNameSplit = feature.split('.');\n      var last = Modernizr[featureNameSplit[0]];\n\n      // Again, we don't check for parent test existence. Get that right, though.\n      if (featureNameSplit.length == 2) {\n        last = last[featureNameSplit[1]];\n      }\n\n      if (typeof last != 'undefined') {\n        // we're going to quit if you're trying to overwrite an existing test\n        // if we were to allow it, we'd do this:\n        //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n        //   docElement.className = docElement.className.replace( re, '' );\n        // but, no rly, stuff 'em.\n        return Modernizr;\n      }\n\n      test = typeof test == 'function' ? test() : test;\n\n      // Set the value (this is the magic, right here).\n      if (featureNameSplit.length == 1) {\n        Modernizr[featureNameSplit[0]] = test;\n      } else {\n        // cast to a Boolean, if not one already\n        if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n          Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n        }\n\n        Modernizr[featureNameSplit[0]][featureNameSplit[1]] = test;\n      }\n\n      // Set a single class (either `feature` or `no-feature`)\n      setClasses([(!!test && test != false ? '' : 'no-') + featureNameSplit.join('-')]);\n\n      // Trigger the event\n      Modernizr._trigger(feature, test);\n    }\n\n    return Modernizr; // allow chaining.\n  }\n\n  // After all the tests are run, add self to the Modernizr prototype\n  Modernizr._q.push(function () {\n    ModernizrProto.addTest = addTest;\n  });\n\n  /*!\r\n    {\r\n    \"name\": \"Flash\",\r\n    \"property\": \"flash\",\r\n    \"tags\": [\"flash\"],\r\n    \"polyfills\": [\"shumway\"]\r\n    }\r\n    !*/\n  /* DOC\r\n  Detects Flash support as well as Flash-blocking plugins\r\n  */\n\n  Modernizr.addAsyncTest(function () {\n\n    var attachBody = function attachBody(body) {\n      if (!docElement.contains(body)) {\n        docElement.appendChild(body);\n      }\n    };\n    var removeFakeBody = function removeFakeBody(body) {\n      // If we’re rockin’ an attached fake body, clean it up\n      if (body.fake && body.parentNode) {\n        body.parentNode.removeChild(body);\n      }\n    };\n    var runTest = function runTest(result, embed) {\n      var bool = !!result;\n      if (bool) {\n        bool = new Boolean(bool);\n        bool.blocked = result === 'blocked';\n      }\n      addTest('flash', function () {\n        return bool;\n      });\n\n      if (embed && body.contains(embed)) {\n\n        // in case embed has been wrapped, as with ClickToPlugin\n        while (embed.parentNode !== body) {\n          embed = embed.parentNode;\n        }\n\n        body.removeChild(embed);\n      }\n    };\n    var easy_detect;\n    var activex;\n    // we wrap activex in a try/catch because when Flash is disabled through\n    // ActiveX controls, it throws an error.\n    try {\n      // Pan is an API that exists for Flash objects.\n      activex = 'ActiveXObject' in window && 'Pan' in new window.ActiveXObject('ShockwaveFlash.ShockwaveFlash');\n    } catch (e) {}\n\n    easy_detect = !('plugins' in navigator && 'Shockwave Flash' in navigator.plugins || activex);\n\n    if (easy_detect || isSVG) {\n      runTest(false);\n    } else {\n      // Flash seems to be installed, but it might be blocked. We have to\n      // actually create an element to see what happens to it.\n      var embed = createElement('embed');\n      var body = getBody();\n      var _blockedDetect;\n      var inline_style;\n\n      embed.type = 'application/x-shockwave-flash';\n\n      // Need to do this in the body (fake or otherwise) otherwise IE8 complains\n      body.appendChild(embed);\n\n      // Pan doesn't exist in the embed if its IE (its on the ActiveXObjeect)\n      // so this check is for all other browsers.\n      if (!('Pan' in embed) && !activex) {\n        attachBody(body);\n        runTest('blocked', embed);\n        removeFakeBody(body);\n        return;\n      }\n\n      _blockedDetect = function blockedDetect() {\n        // if we used a fake body originally, we need to restart this test, since\n        // we haven't been attached to the DOM, and therefore none of the blockers\n        // have had time to work.\n        attachBody(body);\n        if (!docElement.contains(body)) {\n          body = document.body || body;\n          embed = createElement('embed');\n          embed.type = 'application/x-shockwave-flash';\n          body.appendChild(embed);\n          return setTimeout(_blockedDetect, 1000);\n        }\n        if (!docElement.contains(embed)) {\n          runTest('blocked');\n        } else {\n          inline_style = embed.style.cssText;\n          if (inline_style !== '') {\n            // the style of the element has changed automatically. This is a\n            // really poor heuristic, but for lower end Flash blocks, it the\n            // only change they can make.\n            runTest('blocked', embed);\n          } else {\n            runTest(true, embed);\n          }\n        }\n        removeFakeBody(body);\n      };\n\n      // If we have got this far, there is still a chance a userland plugin\n      // is blocking us (either changing the styles, or automatically removing\n      // the element). Both of these require us to take a step back for a moment\n      // to allow for them to get time of the thread, hence a setTimeout.\n      //\n      setTimeout(_blockedDetect, 10);\n    }\n  });\n\n  /*!\r\n  {\r\n    \"name\": \"HTML Imports\",\r\n    \"notes\": [\r\n      {\r\n        \"name\": \"W3C HTML Imports Specification\",\r\n        \"href\": \"https://w3c.github.io/webcomponents/spec/imports/\"\r\n      },\r\n      {\r\n        \"name\": \"HTML Imports - #include for the web\",\r\n        \"href\": \"http://www.html5rocks.com/en/tutorials/webcomponents/imports/\"\r\n      }\r\n    ],\r\n    \"polyfills\": [\"polymer-htmlimports\"],\r\n    \"property\": \"htmlimports\",\r\n    \"tags\": [\"html\", \"import\"]\r\n  }\r\n  !*/\n  /* DOC\r\n  Detects support for HTML import, a feature that is used for loading in Web Components.\r\n   */\n\n  addTest('htmlimports', 'import' in createElement('link'));\n\n  /**\r\n   * cssToDOM takes a kebab-case string and converts it to camelCase\r\n   * e.g. box-sizing -> boxSizing\r\n   *\r\n   * @access private\r\n   * @function cssToDOM\r\n   * @param {string} name - String name of kebab-case prop we want to convert\r\n   * @returns {string} The camelCase version of the supplied name\r\n   */\n\n  function cssToDOM(name) {\n    return name.replace(/([a-z])-([a-z])/g, function (str, m1, m2) {\n      return m1 + m2.toUpperCase();\n    }).replace(/^-/, '');\n  }\n  ;\n\n  /**\r\n   * injectElementWithStyles injects an element with style element and some CSS rules\r\n   *\r\n   * @access private\r\n   * @function injectElementWithStyles\r\n   * @param {string} rule - String representing a css rule\r\n   * @param {function} callback - A function that is used to test the injected element\r\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\r\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\r\n   * @returns {boolean}\r\n   */\n\n  function injectElementWithStyles(rule, callback, nodes, testnames) {\n    var mod = 'modernizr';\n    var style;\n    var ret;\n    var node;\n    var docOverflow;\n    var div = createElement('div');\n    var body = getBody();\n\n    if (parseInt(nodes, 10)) {\n      // In order not to give false positives we create a node for each test\n      // This also allows the method to scale for unspecified uses\n      while (nodes--) {\n        node = createElement('div');\n        node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n        div.appendChild(node);\n      }\n    }\n\n    style = createElement('style');\n    style.type = 'text/css';\n    style.id = 's' + mod;\n\n    // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n    // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n    (!body.fake ? div : body).appendChild(style);\n    body.appendChild(div);\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = rule;\n    } else {\n      style.appendChild(document.createTextNode(rule));\n    }\n    div.id = mod;\n\n    if (body.fake) {\n      //avoid crashing IE8, if background image is used\n      body.style.background = '';\n      //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n      body.style.overflow = 'hidden';\n      docOverflow = docElement.style.overflow;\n      docElement.style.overflow = 'hidden';\n      docElement.appendChild(body);\n    }\n\n    ret = callback(div, rule);\n    // If this is done after page load we don't want to remove the body so check if body exists\n    if (body.fake) {\n      body.parentNode.removeChild(body);\n      docElement.style.overflow = docOverflow;\n      // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n      // eslint-disable-next-line\n      docElement.offsetHeight;\n    } else {\n      div.parentNode.removeChild(div);\n    }\n\n    return !!ret;\n  }\n\n  ;\n\n  /**\r\n   * testStyles injects an element with style element and some CSS rules\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.testStyles\r\n   * @optionName Modernizr.testStyles()\r\n   * @optionProp testStyles\r\n   * @access public\r\n   * @function testStyles\r\n   * @param {string} rule - String representing a css rule\r\n   * @param {function} callback - A function that is used to test the injected element\r\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\r\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\r\n   * @returns {boolean}\r\n   * @example\r\n   *\r\n   * `Modernizr.testStyles` takes a CSS rule and injects it onto the current page\r\n   * along with (possibly multiple) DOM elements. This lets you check for features\r\n   * that can not be detected by simply checking the [IDL](https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Interface_development_guide/IDL_interface_rules).\r\n   *\r\n   * ```js\r\n   * Modernizr.testStyles('#modernizr { width: 9px; color: papayawhip; }', function(elem, rule) {\r\n   *   // elem is the first DOM node in the page (by default #modernizr)\r\n   *   // rule is the first argument you supplied - the CSS rule in string form\r\n   *\r\n   *   addTest('widthworks', elem.style.width === '9px')\r\n   * });\r\n   * ```\r\n   *\r\n   * If your test requires multiple nodes, you can include a third argument\r\n   * indicating how many additional div elements to include on the page. The\r\n   * additional nodes are injected as children of the `elem` that is returned as\r\n   * the first argument to the callback.\r\n   *\r\n   * ```js\r\n   * Modernizr.testStyles('#modernizr {width: 1px}; #modernizr2 {width: 2px}', function(elem) {\r\n   *   document.getElementById('modernizr').style.width === '1px'; // true\r\n   *   document.getElementById('modernizr2').style.width === '2px'; // true\r\n   *   elem.firstChild === document.getElementById('modernizr2'); // true\r\n   * }, 1);\r\n   * ```\r\n   *\r\n   * By default, all of the additional elements have an ID of `modernizr[n]`, where\r\n   * `n` is its index (e.g. the first additional, second overall is `#modernizr2`,\r\n   * the second additional is `#modernizr3`, etc.).\r\n   * If you want to have more meaningful IDs for your function, you can provide\r\n   * them as the fourth argument, as an array of strings\r\n   *\r\n   * ```js\r\n   * Modernizr.testStyles('#foo {width: 10px}; #bar {height: 20px}', function(elem) {\r\n   *   elem.firstChild === document.getElementById('foo'); // true\r\n   *   elem.lastChild === document.getElementById('bar'); // true\r\n   * }, 2, ['foo', 'bar']);\r\n   * ```\r\n   *\r\n   */\n\n  var testStyles = ModernizrProto.testStyles = injectElementWithStyles;\n\n  /*!\r\n  {\r\n    \"name\": \"Hidden Scrollbar\",\r\n    \"property\": \"hiddenscroll\",\r\n    \"authors\": [\"Oleg Korsunsky\"],\r\n    \"tags\": [\"overlay\"],\r\n    \"notes\": [{\r\n      \"name\": \"Overlay Scrollbar description\",\r\n      \"href\": \"https://developer.apple.com/library/mac/releasenotes/MacOSX/WhatsNewInOSX/Articles/MacOSX10_7.html#//apple_ref/doc/uid/TP40010355-SW39\"\r\n    },{\r\n      \"name\": \"Video example of overlay scrollbars\",\r\n      \"href\": \"https://gfycat.com/FoolishMeaslyAtlanticsharpnosepuffer\"\r\n    }]\r\n  }\r\n  !*/\n  /* DOC\r\n  Detects overlay scrollbars (when scrollbars on overflowed blocks are visible). This is found most commonly on mobile and OS X.\r\n  */\n\n  Modernizr.addTest('hiddenscroll', function () {\n    return testStyles('#modernizr {width:100px;height:100px;overflow:scroll}', function (elem) {\n      return elem.offsetWidth === elem.clientWidth;\n    });\n  });\n\n  /*!\r\n  {\r\n    \"name\": \"CSS :checked pseudo-selector\",\r\n    \"caniuse\": \"css-sel3\",\r\n    \"property\": \"checked\",\r\n    \"tags\": [\"css\"],\r\n    \"notes\": [{\r\n      \"name\": \"Related Github Issue\",\r\n      \"href\": \"https://github.com/Modernizr/Modernizr/pull/879\"\r\n    }]\r\n  }\r\n  !*/\n\n  Modernizr.addTest('checked', function () {\n    return testStyles('#modernizr {position:absolute} #modernizr input {margin-left:10px} #modernizr :checked {margin-left:20px;display:block}', function (elem) {\n      var cb = createElement('input');\n      cb.setAttribute('type', 'checkbox');\n      cb.setAttribute('checked', 'checked');\n      elem.appendChild(cb);\n      return cb.offsetLeft === 20;\n    });\n  });\n\n  /*!\r\n  {\r\n    \"name\": \"CSS Display table\",\r\n    \"property\": \"displaytable\",\r\n    \"caniuse\": \"css-table\",\r\n    \"authors\": [\"scottjehl\"],\r\n    \"tags\": [\"css\"],\r\n    \"builderAliases\": [\"css_displaytable\"],\r\n    \"notes\": [{\r\n      \"name\": \"Detects for all additional table display values\",\r\n      \"href\": \"http://pastebin.com/Gk9PeVaQ\"\r\n    }]\r\n  }\r\n  !*/\n  /* DOC\r\n  `display: table` and `table-cell` test. (both are tested under one name `table-cell` )\r\n  */\n\n  // If a document is in rtl mode this test will fail so we force ltr mode on the injeced\n  // element https://github.com/Modernizr/Modernizr/issues/716\n  testStyles('#modernizr{display: table; direction: ltr}#modernizr div{display: table-cell; padding: 10px}', function (elem) {\n    var ret;\n    var child = elem.childNodes;\n    ret = child[0].offsetLeft < child[1].offsetLeft;\n    Modernizr.addTest('displaytable', ret, { aliases: ['display-table'] });\n  }, 2);\n\n  /**\r\n   * If the browsers follow the spec, then they would expose vendor-specific styles as:\r\n   *   elem.style.WebkitBorderRadius\r\n   * instead of something like the following (which is technically incorrect):\r\n   *   elem.style.webkitBorderRadius\r\n       * WebKit ghosts their properties in lowercase but Opera & Moz do not.\r\n   * Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\r\n   *   erik.eae.net/archives/2008/03/10/21.48.10/\r\n       * More here: github.com/Modernizr/Modernizr/issues/issue/21\r\n   *\r\n   * @access private\r\n   * @returns {string} The string representing the vendor-specific style properties\r\n   */\n\n  var omPrefixes = 'Moz O ms Webkit';\n\n  var cssomPrefixes = ModernizrProto._config.usePrefixes ? omPrefixes.split(' ') : [];\n  ModernizrProto._cssomPrefixes = cssomPrefixes;\n\n  /**\r\n   * atRule returns a given CSS property at-rule (eg @keyframes), possibly in\r\n   * some prefixed form, or false, in the case of an unsupported rule\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.atRule\r\n   * @optionName Modernizr.atRule()\r\n   * @optionProp atRule\r\n   * @access public\r\n   * @function atRule\r\n   * @param {string} prop - String name of the @-rule to test for\r\n   * @returns {string|boolean} The string representing the (possibly prefixed)\r\n   * valid version of the @-rule, or `false` when it is unsupported.\r\n   * @example\r\n   * ```js\r\n   *  var keyframes = Modernizr.atRule('@keyframes');\r\n   *\r\n   *  if (keyframes) {\r\n   *    // keyframes are supported\r\n   *    // could be `@-webkit-keyframes` or `@keyframes`\r\n   *  } else {\r\n   *    // keyframes === `false`\r\n   *  }\r\n   * ```\r\n   *\r\n   */\n\n  var atRule = function atRule(prop) {\n    var length = prefixes.length;\n    var cssrule = window.CSSRule;\n    var rule;\n\n    if (typeof cssrule === 'undefined') {\n      return undefined;\n    }\n\n    if (!prop) {\n      return false;\n    }\n\n    // remove literal @ from beginning of provided property\n    prop = prop.replace(/^@/, '');\n\n    // CSSRules use underscores instead of dashes\n    rule = prop.replace(/-/g, '_').toUpperCase() + '_RULE';\n\n    if (rule in cssrule) {\n      return '@' + prop;\n    }\n\n    for (var i = 0; i < length; i++) {\n      // prefixes gives us something like -o-, and we want O_\n      var prefix = prefixes[i];\n      var thisRule = prefix.toUpperCase() + '_' + rule;\n\n      if (thisRule in cssrule) {\n        return '@-' + prefix.toLowerCase() + '-' + prop;\n      }\n    }\n\n    return false;\n  };\n\n  ModernizrProto.atRule = atRule;\n\n  /**\r\n   * List of JavaScript DOM values used for tests\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr._domPrefixes\r\n   * @optionName Modernizr._domPrefixes\r\n   * @optionProp domPrefixes\r\n   * @access public\r\n   * @example\r\n   *\r\n   * Modernizr._domPrefixes is exactly the same as [_prefixes](#modernizr-_prefixes), but rather\r\n   * than kebab-case properties, all properties are their Capitalized variant\r\n   *\r\n   * ```js\r\n   * Modernizr._domPrefixes === [ \"Moz\", \"O\", \"ms\", \"Webkit\" ];\r\n   * ```\r\n   */\n\n  var domPrefixes = ModernizrProto._config.usePrefixes ? omPrefixes.toLowerCase().split(' ') : [];\n  ModernizrProto._domPrefixes = domPrefixes;\n\n  /**\r\n   * contains checks to see if a string contains another string\r\n   *\r\n   * @access private\r\n   * @function contains\r\n   * @param {string} str - The string we want to check for substrings\r\n   * @param {string} substr - The substring we want to search the first string for\r\n   * @returns {boolean}\r\n   */\n\n  function contains(str, substr) {\n    return !!~('' + str).indexOf(substr);\n  }\n\n  ;\n\n  /**\r\n   * fnBind is a super small [bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind) polyfill.\r\n   *\r\n   * @access private\r\n   * @function fnBind\r\n   * @param {function} fn - a function you want to change `this` reference to\r\n   * @param {object} that - the `this` you want to call the function with\r\n   * @returns {function} The wrapped version of the supplied function\r\n   */\n\n  function fnBind(fn, that) {\n    return function () {\n      return fn.apply(that, arguments);\n    };\n  }\n\n  ;\n\n  /**\r\n   * testDOMProps is a generic DOM property test; if a browser supports\r\n   *   a certain property, it won't return undefined for it.\r\n   *\r\n   * @access private\r\n   * @function testDOMProps\r\n   * @param {array.<string>} props - An array of properties to test for\r\n   * @param {object} obj - An object or Element you want to use to test the parameters again\r\n   * @param {boolean|object} elem - An Element to bind the property lookup again. Use `false` to prevent the check\r\n   * @returns {false|*} returns false if the prop is unsupported, otherwise the value that is supported\r\n   */\n  function testDOMProps(props, obj, elem) {\n    var item;\n\n    for (var i in props) {\n      if (props[i] in obj) {\n\n        // return the property name as a string\n        if (elem === false) {\n          return props[i];\n        }\n\n        item = obj[props[i]];\n\n        // let's bind a function\n        if (is(item, 'function')) {\n          // bind to obj unless overriden\n          return fnBind(item, elem || obj);\n        }\n\n        // return the unbound function or obj or value\n        return item;\n      }\n    }\n    return false;\n  }\n\n  ;\n\n  /**\r\n   * Create our \"modernizr\" element that we do most feature tests on.\r\n   *\r\n   * @access private\r\n   */\n\n  var modElem = {\n    elem: createElement('modernizr')\n  };\n\n  // Clean up this element\n  Modernizr._q.push(function () {\n    delete modElem.elem;\n  });\n\n  var mStyle = {\n    style: modElem.elem.style\n  };\n\n  // kill ref for gc, must happen before mod.elem is removed, so we unshift on to\n  // the front of the queue.\n  Modernizr._q.unshift(function () {\n    delete mStyle.style;\n  });\n\n  /**\r\n   * domToCSS takes a camelCase string and converts it to kebab-case\r\n   * e.g. boxSizing -> box-sizing\r\n   *\r\n   * @access private\r\n   * @function domToCSS\r\n   * @param {string} name - String name of camelCase prop we want to convert\r\n   * @returns {string} The kebab-case version of the supplied name\r\n   */\n\n  function domToCSS(name) {\n    return name.replace(/([A-Z])/g, function (str, m1) {\n      return '-' + m1.toLowerCase();\n    }).replace(/^ms-/, '-ms-');\n  }\n  ;\n\n  /**\r\n   * wrapper around getComputedStyle, to fix issues with Firefox returning null when\r\n   * called inside of a hidden iframe\r\n   *\r\n   * @access private\r\n   * @function computedStyle\r\n   * @param {HTMLElement|SVGElement} - The element we want to find the computed styles of\r\n   * @param {string|null} [pseudoSelector]- An optional pseudo element selector (e.g. :before), of null if none\r\n   * @returns {CSSStyleDeclaration}\r\n   */\n\n  function computedStyle(elem, pseudo, prop) {\n    var result;\n\n    if ('getComputedStyle' in window) {\n      result = getComputedStyle.call(window, elem, pseudo);\n      var console = window.console;\n\n      if (result !== null) {\n        if (prop) {\n          result = result.getPropertyValue(prop);\n        }\n      } else {\n        if (console) {\n          var method = console.error ? 'error' : 'log';\n          console[method].call(console, 'getComputedStyle returning null, its possible modernizr test results are inaccurate');\n        }\n      }\n    } else {\n      result = !pseudo && elem.currentStyle && elem.currentStyle[prop];\n    }\n\n    return result;\n  }\n\n  ;\n\n  /**\r\n   * nativeTestProps allows for us to use native feature detection functionality if available.\r\n   * some prefixed form, or false, in the case of an unsupported rule\r\n   *\r\n   * @access private\r\n   * @function nativeTestProps\r\n   * @param {array} props - An array of property names\r\n   * @param {string} value - A string representing the value we want to check via @supports\r\n   * @returns {boolean|undefined} A boolean when @supports exists, undefined otherwise\r\n   */\n\n  // Accepts a list of property names and a single value\n  // Returns `undefined` if native detection not available\n  function nativeTestProps(props, value) {\n    var i = props.length;\n    // Start with the JS API: http://www.w3.org/TR/css3-conditional/#the-css-interface\n    if ('CSS' in window && 'supports' in window.CSS) {\n      // Try every prefixed variant of the property\n      while (i--) {\n        if (window.CSS.supports(domToCSS(props[i]), value)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    // Otherwise fall back to at-rule (for Opera 12.x)\n    else if ('CSSSupportsRule' in window) {\n        // Build a condition string for every prefixed variant\n        var conditionText = [];\n        while (i--) {\n          conditionText.push('(' + domToCSS(props[i]) + ':' + value + ')');\n        }\n        conditionText = conditionText.join(' or ');\n        return injectElementWithStyles('@supports (' + conditionText + ') { #modernizr { position: absolute; } }', function (node) {\n          return computedStyle(node, null, 'position') == 'absolute';\n        });\n      }\n    return undefined;\n  }\n  ;\n\n  // testProps is a generic CSS / DOM property test.\n\n  // In testing support for a given CSS property, it's legit to test:\n  //    `elem.style[styleName] !== undefined`\n  // If the property is supported it will return an empty string,\n  // if unsupported it will return undefined.\n\n  // We'll take advantage of this quick test and skip setting a style\n  // on our modernizr element, but instead just testing undefined vs\n  // empty string.\n\n  // Property names can be provided in either camelCase or kebab-case.\n\n  function testProps(props, prefixed, value, skipValueTest) {\n    skipValueTest = is(skipValueTest, 'undefined') ? false : skipValueTest;\n\n    // Try native detect first\n    if (!is(value, 'undefined')) {\n      var result = nativeTestProps(props, value);\n      if (!is(result, 'undefined')) {\n        return result;\n      }\n    }\n\n    // Otherwise do it properly\n    var afterInit, i, propsLength, prop, before;\n\n    // If we don't have a style element, that means we're running async or after\n    // the core tests, so we'll need to create our own elements to use\n\n    // inside of an SVG element, in certain browsers, the `style` element is only\n    // defined for valid tags. Therefore, if `modernizr` does not have one, we\n    // fall back to a less used element and hope for the best.\n    // for strict XHTML browsers the hardly used samp element is used\n    var elems = ['modernizr', 'tspan', 'samp'];\n    while (!mStyle.style && elems.length) {\n      afterInit = true;\n      mStyle.modElem = createElement(elems.shift());\n      mStyle.style = mStyle.modElem.style;\n    }\n\n    // Delete the objects if we created them.\n    function cleanElems() {\n      if (afterInit) {\n        delete mStyle.style;\n        delete mStyle.modElem;\n      }\n    }\n\n    propsLength = props.length;\n    for (i = 0; i < propsLength; i++) {\n      prop = props[i];\n      before = mStyle.style[prop];\n\n      if (contains(prop, '-')) {\n        prop = cssToDOM(prop);\n      }\n\n      if (mStyle.style[prop] !== undefined) {\n\n        // If value to test has been passed in, do a set-and-check test.\n        // 0 (integer) is a valid property value, so check that `value` isn't\n        // undefined, rather than just checking it's truthy.\n        if (!skipValueTest && !is(value, 'undefined')) {\n\n          // Needs a try catch block because of old IE. This is slow, but will\n          // be avoided in most cases because `skipValueTest` will be used.\n          try {\n            mStyle.style[prop] = value;\n          } catch (e) {}\n\n          // If the property value has changed, we assume the value used is\n          // supported. If `value` is empty string, it'll fail here (because\n          // it hasn't changed), which matches how browsers have implemented\n          // CSS.supports()\n          if (mStyle.style[prop] != before) {\n            cleanElems();\n            return prefixed == 'pfx' ? prop : true;\n          }\n        }\n        // Otherwise just return true, or the property name if this is a\n        // `prefixed()` call\n        else {\n            cleanElems();\n            return prefixed == 'pfx' ? prop : true;\n          }\n      }\n    }\n    cleanElems();\n    return false;\n  }\n\n  ;\n\n  /**\r\n   * testPropsAll tests a list of DOM properties we want to check against.\r\n   * We specify literally ALL possible (known and/or likely) properties on\r\n   * the element including the non-vendor prefixed one, for forward-\r\n   * compatibility.\r\n   *\r\n   * @access private\r\n   * @function testPropsAll\r\n   * @param {string} prop - A string of the property to test for\r\n   * @param {string|object} [prefixed] - An object to check the prefixed properties on. Use a string to skip\r\n   * @param {HTMLElement|SVGElement} [elem] - An element used to test the property and value against\r\n   * @param {string} [value] - A string of a css value\r\n   * @param {boolean} [skipValueTest] - An boolean representing if you want to test if value sticks when set\r\n   * @returns {false|string} returns the string version of the property, or false if it is unsupported\r\n   */\n  function testPropsAll(prop, prefixed, elem, value, skipValueTest) {\n\n    var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n        props = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n    // did they call .prefixed('boxSizing') or are we just testing a prop?\n    if (is(prefixed, 'string') || is(prefixed, 'undefined')) {\n      return testProps(props, prefixed, value, skipValueTest);\n\n      // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n    } else {\n      props = (prop + ' ' + domPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n      return testDOMProps(props, prefixed, elem);\n    }\n  }\n\n  // Modernizr.testAllProps() investigates whether a given style property,\n  // or any of its vendor-prefixed variants, is recognized\n  //\n  // Note that the property names must be provided in the camelCase variant.\n  // Modernizr.testAllProps('boxSizing')\n  ModernizrProto.testAllProps = testPropsAll;\n\n  /**\r\n   * prefixed returns the prefixed or nonprefixed property name variant of your input\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.prefixed\r\n   * @optionName Modernizr.prefixed()\r\n   * @optionProp prefixed\r\n   * @access public\r\n   * @function prefixed\r\n   * @param {string} prop - String name of the property to test for\r\n   * @param {object} [obj] - An object to test for the prefixed properties on\r\n   * @param {HTMLElement} [elem] - An element used to test specific properties against\r\n   * @returns {string|false} The string representing the (possibly prefixed) valid\r\n   * version of the property, or `false` when it is unsupported.\r\n   * @example\r\n   *\r\n   * Modernizr.prefixed takes a string css value in the DOM style camelCase (as\r\n   * opposed to the css style kebab-case) form and returns the (possibly prefixed)\r\n   * version of that property that the browser actually supports.\r\n   *\r\n   * For example, in older Firefox...\r\n   * ```js\r\n   * prefixed('boxSizing')\r\n   * ```\r\n   * returns 'MozBoxSizing'\r\n   *\r\n   * In newer Firefox, as well as any other browser that support the unprefixed\r\n   * version would simply return `boxSizing`. Any browser that does not support\r\n   * the property at all, it will return `false`.\r\n   *\r\n   * By default, prefixed is checked against a DOM element. If you want to check\r\n   * for a property on another object, just pass it as a second argument\r\n   *\r\n   * ```js\r\n   * var rAF = prefixed('requestAnimationFrame', window);\r\n   *\r\n   * raf(function() {\r\n   *  renderFunction();\r\n   * })\r\n   * ```\r\n   *\r\n   * Note that this will return _the actual function_ - not the name of the function.\r\n   * If you need the actual name of the property, pass in `false` as a third argument\r\n   *\r\n   * ```js\r\n   * var rAFProp = prefixed('requestAnimationFrame', window, false);\r\n   *\r\n   * rafProp === 'WebkitRequestAnimationFrame' // in older webkit\r\n   * ```\r\n   *\r\n   * One common use case for prefixed is if you're trying to determine which transition\r\n   * end event to bind to, you might do something like...\r\n   * ```js\r\n   * var transEndEventNames = {\r\n   *     'WebkitTransition' : 'webkitTransitionEnd', * Saf 6, Android Browser\r\n   *     'MozTransition'    : 'transitionend',       * only for FF < 15\r\n   *     'transition'       : 'transitionend'        * IE10, Opera, Chrome, FF 15+, Saf 7+\r\n   * };\r\n   *\r\n   * var transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\r\n   * ```\r\n   *\r\n   * If you want a similar lookup, but in kebab-case, you can use [prefixedCSS](#modernizr-prefixedcss).\r\n   */\n\n  var prefixed = ModernizrProto.prefixed = function (prop, obj, elem) {\n    if (prop.indexOf('@') === 0) {\n      return atRule(prop);\n    }\n\n    if (prop.indexOf('-') != -1) {\n      // Convert kebab-case to camelCase\n      prop = cssToDOM(prop);\n    }\n    if (!obj) {\n      return testPropsAll(prop, 'pfx');\n    } else {\n      // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n      return testPropsAll(prop, obj, elem);\n    }\n  };\n\n  /*!\r\n  {\r\n    \"name\": \"Fullscreen API\",\r\n    \"property\": \"fullscreen\",\r\n    \"caniuse\": \"fullscreen\",\r\n    \"notes\": [{\r\n      \"name\": \"MDN documentation\",\r\n      \"href\": \"https://developer.mozilla.org/en/API/Fullscreen\"\r\n    }],\r\n    \"polyfills\": [\"screenfulljs\"],\r\n    \"builderAliases\": [\"fullscreen_api\"]\r\n  }\r\n  !*/\n  /* DOC\r\n  Detects support for the ability to make the current website take over the user's entire screen\r\n  */\n\n  // github.com/Modernizr/Modernizr/issues/739\n  Modernizr.addTest('fullscreen', !!(prefixed('exitFullscreen', document, false) || prefixed('cancelFullScreen', document, false)));\n\n  /**\r\n   * testAllProps determines whether a given CSS property is supported in the browser\r\n   *\r\n   * @memberof Modernizr\r\n   * @name Modernizr.testAllProps\r\n   * @optionName Modernizr.testAllProps()\r\n   * @optionProp testAllProps\r\n   * @access public\r\n   * @function testAllProps\r\n   * @param {string} prop - String naming the property to test (either camelCase or kebab-case)\r\n   * @param {string} [value] - String of the value to test\r\n   * @param {boolean} [skipValueTest=false] - Whether to skip testing that the value is supported when using non-native detection\r\n   * @example\r\n   *\r\n   * testAllProps determines whether a given CSS property, in some prefixed form,\r\n   * is supported by the browser.\r\n   *\r\n   * ```js\r\n   * testAllProps('boxSizing')  // true\r\n   * ```\r\n   *\r\n   * It can optionally be given a CSS value in string form to test if a property\r\n   * value is valid\r\n   *\r\n   * ```js\r\n   * testAllProps('display', 'block') // true\r\n   * testAllProps('display', 'penguin') // false\r\n   * ```\r\n   *\r\n   * A boolean can be passed as a third parameter to skip the value check when\r\n   * native detection (@supports) isn't available.\r\n   *\r\n   * ```js\r\n   * testAllProps('shapeOutside', 'content-box', true);\r\n   * ```\r\n   */\n\n  function testAllProps(prop, value, skipValueTest) {\n    return testPropsAll(prop, undefined, undefined, value, skipValueTest);\n  }\n  ModernizrProto.testAllProps = testAllProps;\n\n  /*!\r\n  {\r\n    \"name\": \"Border Image\",\r\n    \"property\": \"borderimage\",\r\n    \"caniuse\": \"border-image\",\r\n    \"polyfills\": [\"css3pie\"],\r\n     \"knownBugs\": [\"Android < 2.0 is true, but has a broken implementation\"],\r\n    \"tags\": [\"css\"]\r\n  }\r\n  !*/\n\n  Modernizr.addTest('borderimage', testAllProps('borderImage', 'url() 1', true));\n\n  /*!\r\n  {\r\n    \"name\": \"Box Shadow\",\r\n    \"property\": \"boxshadow\",\r\n    \"caniuse\": \"css-boxshadow\",\r\n    \"tags\": [\"css\"],\r\n    \"knownBugs\": [\r\n      \"WebOS false positives on this test.\",\r\n      \"The Kindle Silk browser false positives\"\r\n    ]\r\n  }\r\n  !*/\n\n  Modernizr.addTest('boxshadow', testAllProps('boxShadow', '1px 1px', true));\n\n  /*!\r\n  {\r\n    \"name\": \"CSS Columns\",\r\n    \"property\": \"csscolumns\",\r\n    \"caniuse\": \"multicolumn\",\r\n    \"polyfills\": [\"css3multicolumnjs\"],\r\n    \"tags\": [\"css\"]\r\n  }\r\n  !*/\n\n  (function () {\n\n    Modernizr.addTest('csscolumns', function () {\n      var bool = false;\n      var test = testAllProps('columnCount');\n      try {\n        bool = !!test;\n        if (bool) {\n          bool = new Boolean(bool);\n        }\n      } catch (e) {}\n\n      return bool;\n    });\n\n    var props = ['Width', 'Span', 'Fill', 'Gap', 'Rule', 'RuleColor', 'RuleStyle', 'RuleWidth', 'BreakBefore', 'BreakAfter', 'BreakInside'];\n    var name, test;\n\n    for (var i = 0; i < props.length; i++) {\n      name = props[i].toLowerCase();\n      test = testAllProps('column' + props[i]);\n\n      // break-before, break-after & break-inside are not \"column\"-prefixed in spec\n      if (name === 'breakbefore' || name === 'breakafter' || name == 'breakinside') {\n        test = test || testAllProps(props[i]);\n      }\n\n      Modernizr.addTest('csscolumns.' + name, test);\n    }\n  })();\n\n  // Run each test\n  testRunner();\n\n  // Remove the \"no-js\" class if it exists\n  setClasses(classes);\n\n  delete ModernizrProto.addTest;\n  delete ModernizrProto.addAsyncTest;\n\n  // Run the things that are supposed to run after the tests\n  for (var i = 0; i < Modernizr._q.length; i++) {\n    Modernizr._q[i]();\n  }\n\n  // Leak Modernizr namespace\n  window.Modernizr = Modernizr;\n\n  ;\n})(window, document);\n\n//# sourceURL=webpack:///./assets/js/lib/modernizr.js?");

/***/ }),

/***/ "./assets/js/lib/retina.js":
/*!*********************************!*\
  !*** ./assets/js/lib/retina.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (global, factory) {\n  ( false ? undefined : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n})(undefined, function () {\n  'use strict';\n\n  var hasWindow = typeof window !== 'undefined';\n  var environment = Math.round(hasWindow ? window.devicePixelRatio || 1 : 1);\n  var srcReplace = /(\\.[A-z]{3,4}\\/?(\\?.*)?)$/;\n  var inlineReplace = /url\\(('|\")?([^)'\"]+)('|\")?\\)/i;\n  var selector = '[data-rjs]';\n  var processedAttr = 'data-rjs-processed';\n  function arrayify(object) {\n    return Array.prototype.slice.call(object);\n  }\n  function chooseCap(cap) {\n    var numericCap = parseInt(cap, 10);\n    if (environment < numericCap) {\n      return environment;\n    } else {\n      return numericCap;\n    }\n  }\n  function forceOriginalDimensions(image) {\n    if (!image.hasAttribute('data-no-resize')) {\n      if (image.offsetWidth === 0 && image.offsetHeight === 0) {\n        image.setAttribute('width', image.naturalWidth);\n        image.setAttribute('height', image.naturalHeight);\n      } else {\n        image.setAttribute('width', image.offsetWidth);\n        image.setAttribute('height', image.offsetHeight);\n      }\n    }\n    return image;\n  }\n  function setSourceIfAvailable(image, retinaURL) {\n    var imgType = image.nodeName.toLowerCase();\n    var testImage = document.createElement('img');\n    testImage.addEventListener('load', function () {\n      if (imgType === 'img') {\n        forceOriginalDimensions(image).setAttribute('src', retinaURL);\n      } else {\n        image.style.backgroundImage = 'url(' + retinaURL + ')';\n      }\n    });\n    testImage.setAttribute('src', retinaURL);\n    image.setAttribute(processedAttr, true);\n  }\n  function dynamicSwapImage(image, src) {\n    var rjs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var cap = chooseCap(rjs);\n    if (src && cap > 1) {\n      var newSrc = src.replace(srcReplace, '@' + cap + 'x$1');\n      setSourceIfAvailable(image, newSrc);\n    }\n  }\n  function manualSwapImage(image, src, hdsrc) {\n    if (environment > 1) {\n      setSourceIfAvailable(image, hdsrc);\n    }\n  }\n  function getImages(images) {\n    if (!images) {\n      return typeof document !== 'undefined' ? arrayify(document.querySelectorAll(selector)) : [];\n    } else {\n      return typeof images.forEach === 'function' ? images : arrayify(images);\n    }\n  }\n  function cleanBgImg(img) {\n    return img.style.backgroundImage.replace(inlineReplace, '$2');\n  }\n  function retina(images) {\n    getImages(images).forEach(function (img) {\n      if (!img.getAttribute(processedAttr)) {\n        var isImg = img.nodeName.toLowerCase() === 'img';\n        var src = isImg ? img.getAttribute('src') : cleanBgImg(img);\n        var rjs = img.getAttribute('data-rjs');\n        var rjsIsNumber = !isNaN(parseInt(rjs, 10));\n        if (rjs === null) {\n          return;\n        }\n        if (rjsIsNumber) {\n          dynamicSwapImage(img, src, rjs);\n        } else {\n          manualSwapImage(img, src, rjs);\n        }\n      }\n    });\n  }\n  if (hasWindow) {\n    window.addEventListener('load', function () {\n      retina();\n    });\n    window.retinajs = retina;\n  }\n\n  return retina;\n});\n//# sourceMappingURL=retina.js.map\n\n//# sourceURL=webpack:///./assets/js/lib/retina.js?");

/***/ }),

/***/ "./assets/js/lib/site.js":
/*!*******************************!*\
  !*** ./assets/js/lib/site.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function ($, window, document) {\n\n\t// Global Vars\n\tvar menu = $('#header-container');\n\tvar origOffsetY = menu.offset().top;\n\n\t// Sticky Header\n\tfunction stickyHeader() {\n\t\tfunction scroll() {\n\t\t\tif ($('.jumbotron').length > 0) {\n\t\t\t\tif ($(window).scrollTop() <= origOffsetY) {\n\t\t\t\t\t$('#header-container').removeClass('sticky');\n\t\t\t\t\t$('.jumbotron').removeClass('menu-padding');\n\t\t\t\t} else {\n\t\t\t\t\t$('#header-container').addClass('sticky');\n\t\t\t\t\t$('.jumbotron').addClass('menu-padding');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($(window).scrollTop() <= origOffsetY) {\n\t\t\t\t\t$('#header-container').removeClass('sticky');\n\t\t\t\t\t$('#content').removeClass('menu-padding');\n\t\t\t\t} else {\n\t\t\t\t\t$('#header-container').addClass('sticky');\n\t\t\t\t\t$('#content').addClass('menu-padding');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdocument.onscroll = scroll;\n\t}\n\tstickyHeader();\n\n\t// Transition Navbar\n\tfunction navbarTrans() {\n\t\t$(document).on('scroll', function () {\n\t\t\tif ($(document).scrollTop() > 220) {\n\t\t\t\t$('#trans-menu').removeClass('large').addClass('small');\n\t\t\t\t$('.trans-logo').removeClass('active').addClass('hidden');\n\t\t\t\t$('.regular-logo').removeClass('hidden').addClass('active');\n\t\t\t} else {\n\t\t\t\t$('#trans-menu').removeClass('small').addClass('large');\n\t\t\t\t$('.trans-logo').removeClass('hidden').addClass('active');\n\t\t\t\t$('.regular-logo').removeClass('active').addClass('hidden');\n\t\t\t}\n\t\t});\n\t}\n\tnavbarTrans();\n\n\t// Navbar Dropdown\n\tfunction navbarDropdown() {\n\t\tfunction is_touch_device() {\n\t\t\treturn 'ontouchstart' in window /* Works on most browsers */ || navigator.maxTouchPoints; /* Works on IE10/11 and Surface */\n\t\t}\n\t\tif (!is_touch_device() && $('.navbar-toggle:hidden')) {\n\t\t\t$('.dropdown-menu', this).css('margin-top', 0);\n\t\t\t$('.dropdown').hover(function () {\n\t\t\t\t$('.dropdown-toggle#dropdown-main', this).trigger('click');\n\t\t\t\t// Uncomment below to make the parent item clickable.\n\t\t\t\t$('.dropdown-toggle#dropdown-main', this).toggleClass('disabled');\n\t\t\t});\n\t\t}\n\t\tif (is_touch_device()) {\n\t\t\t$('<a href=\"#\" data-toggle=\"dropdown\" id=\"dropdown-arrow\" aria-haspopup=\"true\" class=\"dropdown-toggle visible-xs\"><i class=\"glyphicon glyphicon-chevron-down\"></i></a>').insertAfter('.dropdown-toggle#dropdown-main');\n\t\t\t$('.dropdown-toggle#dropdown-main', this).toggleClass('disabled');\n\t\t}\n\t}\n\tnavbarDropdown();\n\n\t// Flowtype\n\tfunction flowtypeJS() {\n\t\t$('body').flowtype({\n\t\t\tminimum: 320,\n\t\t\tmaximum: 2560,\n\t\t\tminFont: 14,\n\t\t\tmaxFont: 72,\n\t\t\tfontRatio: 81\n\t\t});\n\t}\n\tflowtypeJS();\n\n\t// Height to Viewport\n\tfunction setHeight() {\n\t\tvar windowHeight = $(window).innerHeight();\n\t\tvar headerHeight = $('#header-container').innerHeight();\n\t\t$('.jumbotron').css('min-height', windowHeight - headerHeight);\n\t\t$('.jumbotron .slider').css('min-height', windowHeight - headerHeight);\n\t\t$('.jumbotron .slider-text #slider-text-inner').css('min-height', windowHeight - headerHeight);\n\t}\n\tsetHeight();\n\t// Window Resize\t\t\t\n\t$(window).resize(function () {\n\t\tsetHeight();\n\t});\n\n\t// To Top Button\n\tfunction toTop() {\n\t\tvar offset = 0;\n\t\t$(window).scroll(function () {\n\t\t\tif (jQuery(this).scrollTop() > offset) {\n\t\t\t\tjQuery('.totop').addClass('fadeIn').removeClass('fadeOut');\n\t\t\t} else {\n\t\t\t\tjQuery('.totop').addClass('fadeOut').removeClass('fadeIn');\n\t\t\t}\n\t\t});\n\t}\n\ttoTop();\n\n\t// Adding Backlist Classes\n\tfunction addBlacklistClass() {\n\t\t$('a').each(function () {\n\t\t\tif (window.location.href.indexOf('/wp-admin') !== -1 || window.location.href.indexOf('/wp-login.php') !== -1 || window.location.href.indexOf('/shop') !== -1) {\n\t\t\t\t$(this).addClass('nosmoothstate');\n\t\t\t}\n\t\t});\n\t}\n\taddBlacklistClass();\n\n\t// Adding Comments Section Hash\n\tfunction addBlacklistHash() {\n\t\tvar $hash = $(window.location.hash);\n\t\tif ($hash.length !== 0) {\n\t\t\tvar offsetTop = $hash.offset().top;\n\t\t\t$('body, html').animate({\n\t\t\t\tscrollTop: offsetTop - 60\n\t\t\t}, {\n\t\t\t\tduration: 280\n\t\t\t});\n\t\t}\n\t}\n\n\t// Facebook API\n\tfunction FacebookAPI() {\n\t\t(function (d, s, id) {\n\t\t\tvar js,\n\t\t\t    fjs = d.getElementsByTagName(s)[0];\n\t\t\tif (d.getElementById(id)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tjs = d.createElement(s);js.id = id;\n\t\t\tjs.src = '//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.8';\n\t\t\tfjs.parentNode.insertBefore(js, fjs);\n\t\t})(document, 'script', 'facebook-jssdk');\n\t}\n\tFacebookAPI();\n\n\t// Twitter API\n\tfunction twitterAPI() {\n\t\t!function (d, s, id) {\n\t\t\tvar js,\n\t\t\t    fjs = d.getElementsByTagName(s)[0],\n\t\t\t    p = /^http:/.test(d.location) ? 'http' : 'https';\n\t\t\tif (!d.getElementById(id)) {\n\t\t\t\tjs = d.createElement(s);js.id = id;\n\t\t\t\tjs.src = p + '://platform.twitter.com/widgets.js';\n\t\t\t\tfjs.parentNode.insertBefore(js, fjs);\n\t\t\t}\n\t\t}(document, 'script', 'twitter-wjs');\n\t}\n\ttwitterAPI();\n\n\t// Detect External Links\n\tfunction externalLinkage() {\n\t\t$('a').click(function () {\n\t\t\tvar href = $(this).attr('href');\n\t\t\tif (href.match(/^https?\\:/i) && !href.match(document.domain)) {\n\t\t\t\tvar extLink = href.replace(/^https?\\:\\/\\//i, '');\n\t\t\t\treturn extLink;\n\t\t\t}\n\t\t});\n\t}\n\texternalLinkage();\n\n\t// Smooth Scroll\n\tvar scroll = new SmoothScroll('a[href*=\"#\"]', {\n\t\t// Selectors\n\t\tignore: '[data-scroll-ignore],[data-toggle]',\n\t\theader: '[data-scroll-header]',\n\t\ttopOnEmptyHash: true,\n\t\t// Speed & Easing\n\t\tspeed: 750,\n\t\tclip: true,\n\t\teasing: 'easeInOutCubic',\n\t\t// History\n\t\tupdateURL: false,\n\t\tpopstate: true\n\t});\n\n\t// BarbaJS\n\tvar FadeTransition = Barba.BaseTransition.extend({\n\t\tstart: function start() {\n\t\t\tPromise.all([this.newContainerLoading, this.fadeOut()]).then(this.fadeIn.bind(this));\n\t\t},\n\t\tfadeOut: function fadeOut() {\n\t\t\treturn $(this.oldContainer).animate({ opacity: 0 }).promise();\n\t\t},\n\t\tfadeIn: function fadeIn() {\n\t\t\tvar _this = this;\n\t\t\tvar $el = $(this.newContainer);\n\t\t\t$(this.oldContainer).hide();\n\t\t\t$el.css({\n\t\t\t\tvisibility: 'visible',\n\t\t\t\topacity: 0\n\t\t\t});\n\t\t\t$el.animate({ opacity: 1 }, 400, function () {\n\t\t\t\t_this.done();\n\t\t\t});\n\t\t}\n\t});\n\tBarba.Pjax.getTransition = function () {\n\t\treturn FadeTransition;\n\t};\n\tBarba.Dispatcher.on('linkClicked', function (oldContainer) {\n\t\tsetTimeout(killSlider);\n\t});\n\tBarba.Dispatcher.on('transitionCompleted', function (newContainer) {\n\t\tsetTimeout(startSlider);\n\t});\n\tvar BarbaContainer = Barba.BaseView.extend({\n\t\tnamespace: 'barba-container',\n\t\tonLeave: function onLeave() {\n\t\t\t// A new Transition toward a new page has just started.\n\t\t},\n\t\tonLeaveCompleted: function onLeaveCompleted() {\n\t\t\t// The Container has just been removed from the DOM.\n\t\t},\n\t\tonEnter: function onEnter() {\n\t\t\t// The new Container is ready and attached to the DOM.\n\t\t\tsetHeight();\n\t\t\tstickyHeader();\n\t\t\tnavbarTrans();\n\t\t\tnavbarDropdown();\n\t\t\tflowtypeJS();\n\t\t\ttoTop();\n\t\t},\n\t\tonEnterCompleted: function onEnterCompleted() {\n\t\t\t// The Transition has just finished.\n\t\t\texternalLinkage();\n\t\t\tFacebookAPI();\n\t\t\ttwitterAPI();\n\t\t}\n\t});\n\tBarbaContainer.init();\n\tBarba.Pjax.start();\n\tBarba.Prefetch.init();\n})(jQuery, window, document);\n\n//# sourceURL=webpack:///./assets/js/lib/site.js?");

/***/ }),

/***/ "./assets/js/lib/smooth-scroll.polyfills.js":
/*!**************************************************!*\
  !*** ./assets/js/lib/smooth-scroll.polyfills.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\r\n * smooth-scroll v14.2.1: Animate scrolling to anchor links\r\n * (c) 2018 Chris Ferdinandi\r\n * MIT License\r\n * http://github.com/cferdinandi/smooth-scroll\r\n */\n\n/**\r\n * closest() polyfill\r\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\r\n */\nif (window.Element && !Element.prototype.closest) {\n\tElement.prototype.closest = function (s) {\n\t\tvar matches = (this.document || this.ownerDocument).querySelectorAll(s),\n\t\t    i,\n\t\t    el = this;\n\t\tdo {\n\t\t\ti = matches.length;\n\t\t\twhile (--i >= 0 && matches.item(i) !== el) {}\n\t\t} while (i < 0 && (el = el.parentElement));\n\t\treturn el;\n\t};\n}\n\n/**\r\n * CustomEvent() polyfill\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\r\n */\n(function () {\n\n\tif (typeof window.CustomEvent === \"function\") return false;\n\n\tfunction CustomEvent(event, params) {\n\t\tparams = params || { bubbles: false, cancelable: false, detail: undefined };\n\t\tvar evt = document.createEvent('CustomEvent');\n\t\tevt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t\treturn evt;\n\t}\n\n\tCustomEvent.prototype = window.Event.prototype;\n\n\twindow.CustomEvent = CustomEvent;\n})();\n/**\r\n * requestAnimationFrame() polyfill\r\n * By Erik Möller. Fixes from Paul Irish and Tino Zijdel.\r\n * @link http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n * @link http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\r\n * @license MIT\r\n */\n(function () {\n\tvar lastTime = 0;\n\tvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\tfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\twindow.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n\t\twindow.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n\t}\n\n\tif (!window.requestAnimationFrame) {\n\t\twindow.requestAnimationFrame = function (callback, element) {\n\t\t\tvar currTime = new Date().getTime();\n\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\tvar id = window.setTimeout(function () {\n\t\t\t\tcallback(currTime + timeToCall);\n\t\t\t}, timeToCall);\n\t\t\tlastTime = currTime + timeToCall;\n\t\t\treturn id;\n\t\t};\n\t}\n\n\tif (!window.cancelAnimationFrame) {\n\t\twindow.cancelAnimationFrame = function (id) {\n\t\t\tclearTimeout(id);\n\t\t};\n\t}\n})();\n\n(function (root, factory) {\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn factory(root);\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : undefined, function (window) {\n\n\t'use strict';\n\n\t//\n\t// Default settings\n\t//\n\n\tvar defaults = {\n\t\t// Selectors\n\t\tignore: '[data-scroll-ignore]',\n\t\theader: null,\n\t\ttopOnEmptyHash: true,\n\n\t\t// Speed & Easing\n\t\tspeed: 500,\n\t\tclip: true,\n\t\toffset: 0,\n\t\teasing: 'easeInOutCubic',\n\t\tcustomEasing: null,\n\n\t\t// History\n\t\tupdateURL: true,\n\t\tpopstate: true,\n\n\t\t// Custom Events\n\t\temitEvents: true\n\t};\n\n\t//\n\t// Utility Methods\n\t//\n\n\t/**\r\n  * Check if browser supports required methods\r\n  * @return {Boolean} Returns true if all required methods are supported\r\n  */\n\tvar supports = function supports() {\n\t\treturn 'querySelector' in document && 'addEventListener' in window && 'requestAnimationFrame' in window && 'closest' in window.Element.prototype;\n\t};\n\n\t/**\r\n  * Merge two or more objects. Returns a new object.\r\n  * @param {Object}   objects  The objects to merge together\r\n  * @returns {Object}          Merged values of defaults and options\r\n  */\n\tvar extend = function extend() {\n\n\t\t// Variables\n\t\tvar extended = {};\n\n\t\t// Merge the object into the extended object\n\t\tvar merge = function merge(obj) {\n\t\t\tfor (var prop in obj) {\n\t\t\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\t\t\textended[prop] = obj[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop through each object and conduct a merge\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tmerge(arguments[i]);\n\t\t}\n\n\t\treturn extended;\n\t};\n\n\t/**\r\n  * Check to see if user prefers reduced motion\r\n  * @param  {Object} settings Script settings\r\n  */\n\tvar reduceMotion = function reduceMotion(settings) {\n\t\tif ('matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\r\n  * Get the height of an element.\r\n  * @param  {Node} elem The element to get the height of\r\n  * @return {Number}    The element's height in pixels\r\n  */\n\tvar getHeight = function getHeight(elem) {\n\t\treturn parseInt(window.getComputedStyle(elem).height, 10);\n\t};\n\n\t/**\r\n  * Decode a URI, with error check\r\n  * @param  {String} hash The URI to decode\r\n  * @return {String}      A decoded URI (or the original string if an error is thrown)\r\n  */\n\tvar decode = function decode(hash) {\n\t\tvar decoded;\n\t\ttry {\n\t\t\tdecoded = decodeURIComponent(hash);\n\t\t} catch (e) {\n\t\t\tdecoded = hash;\n\t\t}\n\t\treturn decoded;\n\t};\n\n\t/**\r\n  * Escape special characters for use with querySelector\r\n  * @author Mathias Bynens\r\n  * @link https://github.com/mathiasbynens/CSS.escape\r\n  * @param {String} id The anchor ID to escape\r\n  */\n\tvar escapeCharacters = function escapeCharacters(id) {\n\n\t\t// Remove leading hash\n\t\tif (id.charAt(0) === '#') {\n\t\t\tid = id.substr(1);\n\t\t}\n\n\t\tvar string = String(id);\n\t\tvar length = string.length;\n\t\tvar index = -1;\n\t\tvar codeUnit;\n\t\tvar result = '';\n\t\tvar firstCodeUnit = string.charCodeAt(0);\n\t\twhile (++index < length) {\n\t\t\tcodeUnit = string.charCodeAt(index);\n\t\t\t// Note: there’s no need to special-case astral symbols, surrogate\n\t\t\t// pairs, or lone surrogates.\n\n\t\t\t// If the character is NULL (U+0000), then throw an\n\t\t\t// `InvalidCharacterError` exception and terminate these steps.\n\t\t\tif (codeUnit === 0x0000) {\n\t\t\t\tthrow new InvalidCharacterError('Invalid character: the input contains U+0000.');\n\t\t\t}\n\n\t\t\tif (\n\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n\t\t\t// U+007F, […]\n\t\t\tcodeUnit >= 0x0001 && codeUnit <= 0x001F || codeUnit == 0x007F ||\n\t\t\t// If the character is the first character and is in the range [0-9]\n\t\t\t// (U+0030 to U+0039), […]\n\t\t\tindex === 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039 ||\n\t\t\t// If the character is the second character and is in the range [0-9]\n\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n\t\t\tindex === 1 && codeUnit >= 0x0030 && codeUnit <= 0x0039 && firstCodeUnit === 0x002D) {\n\t\t\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character-as-code-point\n\t\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the character is not handled by one of the above rules and is\n\t\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n\t\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n\t\t\t// U+005A), or [a-z] (U+0061 to U+007A), […]\n\t\t\tif (codeUnit >= 0x0080 || codeUnit === 0x002D || codeUnit === 0x005F || codeUnit >= 0x0030 && codeUnit <= 0x0039 || codeUnit >= 0x0041 && codeUnit <= 0x005A || codeUnit >= 0x0061 && codeUnit <= 0x007A) {\n\t\t\t\t// the character itself\n\t\t\t\tresult += string.charAt(index);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Otherwise, the escaped character.\n\t\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character\n\t\t\tresult += '\\\\' + string.charAt(index);\n\t\t}\n\n\t\t// Return sanitized hash\n\t\tvar hash;\n\t\ttry {\n\t\t\thash = decodeURIComponent('#' + result);\n\t\t} catch (e) {\n\t\t\thash = '#' + result;\n\t\t}\n\t\treturn hash;\n\t};\n\n\t/**\r\n  * Calculate the easing pattern\r\n  * @link https://gist.github.com/gre/1650294\r\n  * @param {String} type Easing pattern\r\n  * @param {Number} time Time animation should take to complete\r\n  * @returns {Number}\r\n  */\n\tvar easingPattern = function easingPattern(settings, time) {\n\t\tvar pattern;\n\n\t\t// Default Easing Patterns\n\t\tif (settings.easing === 'easeInQuad') pattern = time * time; // accelerating from zero velocity\n\t\tif (settings.easing === 'easeOutQuad') pattern = time * (2 - time); // decelerating to zero velocity\n\t\tif (settings.easing === 'easeInOutQuad') pattern = time < 0.5 ? 2 * time * time : -1 + (4 - 2 * time) * time; // acceleration until halfway, then deceleration\n\t\tif (settings.easing === 'easeInCubic') pattern = time * time * time; // accelerating from zero velocity\n\t\tif (settings.easing === 'easeOutCubic') pattern = --time * time * time + 1; // decelerating to zero velocity\n\t\tif (settings.easing === 'easeInOutCubic') pattern = time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1; // acceleration until halfway, then deceleration\n\t\tif (settings.easing === 'easeInQuart') pattern = time * time * time * time; // accelerating from zero velocity\n\t\tif (settings.easing === 'easeOutQuart') pattern = 1 - --time * time * time * time; // decelerating to zero velocity\n\t\tif (settings.easing === 'easeInOutQuart') pattern = time < 0.5 ? 8 * time * time * time * time : 1 - 8 * --time * time * time * time; // acceleration until halfway, then deceleration\n\t\tif (settings.easing === 'easeInQuint') pattern = time * time * time * time * time; // accelerating from zero velocity\n\t\tif (settings.easing === 'easeOutQuint') pattern = 1 + --time * time * time * time * time; // decelerating to zero velocity\n\t\tif (settings.easing === 'easeInOutQuint') pattern = time < 0.5 ? 16 * time * time * time * time * time : 1 + 16 * --time * time * time * time * time; // acceleration until halfway, then deceleration\n\n\t\t// Custom Easing Patterns\n\t\tif (!!settings.customEasing) pattern = settings.customEasing(time);\n\n\t\treturn pattern || time; // no easing, no acceleration\n\t};\n\n\t/**\r\n  * Determine the document's height\r\n  * @returns {Number}\r\n  */\n\tvar getDocumentHeight = function getDocumentHeight() {\n\t\treturn Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);\n\t};\n\n\t/**\r\n  * Calculate how far to scroll\r\n  * Clip support added by robjtede - https://github.com/cferdinandi/smooth-scroll/issues/405\r\n  * @param {Element} anchor       The anchor element to scroll to\r\n  * @param {Number}  headerHeight Height of a fixed header, if any\r\n  * @param {Number}  offset       Number of pixels by which to offset scroll\r\n  * @param {Boolean} clip         If true, adjust scroll distance to prevent abrupt stops near the bottom of the page\r\n  * @returns {Number}\r\n  */\n\tvar getEndLocation = function getEndLocation(anchor, headerHeight, offset, clip) {\n\t\tvar location = 0;\n\t\tif (anchor.offsetParent) {\n\t\t\tdo {\n\t\t\t\tlocation += anchor.offsetTop;\n\t\t\t\tanchor = anchor.offsetParent;\n\t\t\t} while (anchor);\n\t\t}\n\t\tlocation = Math.max(location - headerHeight - offset, 0);\n\t\tif (clip) {\n\t\t\tlocation = Math.min(location, getDocumentHeight() - window.innerHeight);\n\t\t}\n\t\treturn location;\n\t};\n\n\t/**\r\n  * Get the height of the fixed header\r\n  * @param  {Node}   header The header\r\n  * @return {Number}        The height of the header\r\n  */\n\tvar getHeaderHeight = function getHeaderHeight(header) {\n\t\treturn !header ? 0 : getHeight(header) + header.offsetTop;\n\t};\n\n\t/**\r\n  * Update the URL\r\n  * @param  {Node}    anchor  The anchor that was scrolled to\r\n  * @param  {Boolean} isNum   If true, anchor is a number\r\n  * @param  {Object}  options Settings for Smooth Scroll\r\n  */\n\tvar updateURL = function updateURL(anchor, isNum, options) {\n\n\t\t// Bail if the anchor is a number\n\t\tif (isNum) return;\n\n\t\t// Verify that pushState is supported and the updateURL option is enabled\n\t\tif (!history.pushState || !options.updateURL) return;\n\n\t\t// Update URL\n\t\thistory.pushState({\n\t\t\tsmoothScroll: JSON.stringify(options),\n\t\t\tanchor: anchor.id\n\t\t}, document.title, anchor === document.documentElement ? '#top' : '#' + anchor.id);\n\t};\n\n\t/**\r\n  * Bring the anchored element into focus\r\n  * @param {Node}     anchor      The anchor element\r\n  * @param {Number}   endLocation The end location to scroll to\r\n  * @param {Boolean}  isNum       If true, scroll is to a position rather than an element\r\n  */\n\tvar adjustFocus = function adjustFocus(anchor, endLocation, isNum) {\n\n\t\t// Is scrolling to top of page, blur\n\t\tif (anchor === 0) {\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t\t// Don't run if scrolling to a number on the page\n\t\tif (isNum) return;\n\n\t\t// Otherwise, bring anchor element into focus\n\t\tanchor.focus();\n\t\tif (document.activeElement !== anchor) {\n\t\t\tanchor.setAttribute('tabindex', '-1');\n\t\t\tanchor.focus();\n\t\t\tanchor.style.outline = 'none';\n\t\t}\n\t\twindow.scrollTo(0, endLocation);\n\t};\n\n\t/**\r\n  * Emit a custom event\r\n  * @param  {String} type    The event type\r\n  * @param  {Object} options The settings object\r\n  * @param  {Node}   anchor  The anchor element\r\n  * @param  {Node}   toggle  The toggle element\r\n  */\n\tvar emitEvent = function emitEvent(type, options, anchor, toggle) {\n\t\tif (!options.emitEvents || typeof window.CustomEvent !== 'function') return;\n\t\tvar event = new CustomEvent(type, {\n\t\t\tbubbles: true,\n\t\t\tdetail: {\n\t\t\t\tanchor: anchor,\n\t\t\t\ttoggle: toggle\n\t\t\t}\n\t\t});\n\t\tdocument.dispatchEvent(event);\n\t};\n\n\t//\n\t// SmoothScroll Constructor\n\t//\n\n\tvar SmoothScroll = function SmoothScroll(selector, options) {\n\n\t\t//\n\t\t// Variables\n\t\t//\n\n\t\tvar smoothScroll = {}; // Object for public APIs\n\t\tvar settings, anchor, toggle, fixedHeader, headerHeight, eventTimeout, animationInterval;\n\n\t\t//\n\t\t// Methods\n\t\t//\n\n\t\t/**\r\n   * Cancel a scroll-in-progress\r\n   */\n\t\tsmoothScroll.cancelScroll = function (noEvent) {\n\t\t\tcancelAnimationFrame(animationInterval);\n\t\t\tanimationInterval = null;\n\t\t\tif (noEvent) return;\n\t\t\temitEvent('scrollCancel', settings);\n\t\t};\n\n\t\t/**\r\n   * Start/stop the scrolling animation\r\n   * @param {Node|Number} anchor  The element or position to scroll to\r\n   * @param {Element}     toggle  The element that toggled the scroll event\r\n   * @param {Object}      options\r\n   */\n\t\tsmoothScroll.animateScroll = function (anchor, toggle, options) {\n\n\t\t\t// Local settings\n\t\t\tvar animateSettings = extend(settings || defaults, options || {}); // Merge user options with defaults\n\n\t\t\t// Selectors and variables\n\t\t\tvar isNum = Object.prototype.toString.call(anchor) === '[object Number]' ? true : false;\n\t\t\tvar anchorElem = isNum || !anchor.tagName ? null : anchor;\n\t\t\tif (!isNum && !anchorElem) return;\n\t\t\tvar startLocation = window.pageYOffset; // Current location on the page\n\t\t\tif (animateSettings.header && !fixedHeader) {\n\t\t\t\t// Get the fixed header if not already set\n\t\t\t\tfixedHeader = document.querySelector(animateSettings.header);\n\t\t\t}\n\t\t\tif (!headerHeight) {\n\t\t\t\t// Get the height of a fixed header if one exists and not already set\n\t\t\t\theaderHeight = getHeaderHeight(fixedHeader);\n\t\t\t}\n\t\t\tvar endLocation = isNum ? anchor : getEndLocation(anchorElem, headerHeight, parseInt(typeof animateSettings.offset === 'function' ? animateSettings.offset(anchor, toggle) : animateSettings.offset, 10), animateSettings.clip); // Location to scroll to\n\t\t\tvar distance = endLocation - startLocation; // distance to travel\n\t\t\tvar documentHeight = getDocumentHeight();\n\t\t\tvar timeLapsed = 0;\n\t\t\tvar start, percentage, position;\n\n\t\t\t/**\r\n    * Stop the scroll animation when it reaches its target (or the bottom/top of page)\r\n    * @param {Number} position Current position on the page\r\n    * @param {Number} endLocation Scroll to location\r\n    * @param {Number} animationInterval How much to scroll on this loop\r\n    */\n\t\t\tvar stopAnimateScroll = function stopAnimateScroll(position, endLocation) {\n\n\t\t\t\t// Get the current location\n\t\t\t\tvar currentLocation = window.pageYOffset;\n\n\t\t\t\t// Check if the end location has been reached yet (or we've hit the end of the document)\n\t\t\t\tif (position == endLocation || currentLocation == endLocation || (startLocation < endLocation && window.innerHeight + currentLocation) >= documentHeight) {\n\n\t\t\t\t\t// Clear the animation timer\n\t\t\t\t\tsmoothScroll.cancelScroll(true);\n\n\t\t\t\t\t// Bring the anchored element into focus\n\t\t\t\t\tadjustFocus(anchor, endLocation, isNum);\n\n\t\t\t\t\t// Emit a custom event\n\t\t\t\t\temitEvent('scrollStop', animateSettings, anchor, toggle);\n\n\t\t\t\t\t// Reset start\n\t\t\t\t\tstart = null;\n\t\t\t\t\tanimationInterval = null;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\r\n    * Loop scrolling animation\r\n    */\n\t\t\tvar loopAnimateScroll = function loopAnimateScroll(timestamp) {\n\t\t\t\tif (!start) {\n\t\t\t\t\tstart = timestamp;\n\t\t\t\t}\n\t\t\t\ttimeLapsed += timestamp - start;\n\t\t\t\tpercentage = timeLapsed / parseInt(animateSettings.speed, 10);\n\t\t\t\tpercentage = percentage > 1 ? 1 : percentage;\n\t\t\t\tposition = startLocation + distance * easingPattern(animateSettings, percentage);\n\t\t\t\twindow.scrollTo(0, Math.floor(position));\n\t\t\t\tif (!stopAnimateScroll(position, endLocation)) {\n\t\t\t\t\tanimationInterval = window.requestAnimationFrame(loopAnimateScroll);\n\t\t\t\t\tstart = timestamp;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\r\n    * Reset position to fix weird iOS bug\r\n    * @link https://github.com/cferdinandi/smooth-scroll/issues/45\r\n    */\n\t\t\tif (window.pageYOffset === 0) {\n\t\t\t\twindow.scrollTo(0, 0);\n\t\t\t}\n\n\t\t\t// Update the URL\n\t\t\tupdateURL(anchor, isNum, animateSettings);\n\n\t\t\t// Emit a custom event\n\t\t\temitEvent('scrollStart', animateSettings, anchor, toggle);\n\n\t\t\t// Start scrolling animation\n\t\t\tsmoothScroll.cancelScroll(true);\n\t\t\twindow.requestAnimationFrame(loopAnimateScroll);\n\t\t};\n\n\t\t/**\r\n   * If smooth scroll element clicked, animate scroll\r\n   */\n\t\tvar clickHandler = function clickHandler(event) {\n\n\t\t\t// Don't run if the user prefers reduced motion\n\t\t\tif (reduceMotion(settings)) return;\n\n\t\t\t// Don't run if right-click or command/control + click\n\t\t\tif (event.button !== 0 || event.metaKey || event.ctrlKey) return;\n\n\t\t\t// Check if event.target has closest() method\n\t\t\t// By @totegi - https://github.com/cferdinandi/smooth-scroll/pull/401/\n\t\t\tif (!('closest' in event.target)) return;\n\n\t\t\t// Check if a smooth scroll link was clicked\n\t\t\ttoggle = event.target.closest(selector);\n\t\t\tif (!toggle || toggle.tagName.toLowerCase() !== 'a' || event.target.closest(settings.ignore)) return;\n\n\t\t\t// Only run if link is an anchor and points to the current page\n\t\t\tif (toggle.hostname !== window.location.hostname || toggle.pathname !== window.location.pathname || !/#/.test(toggle.href)) return;\n\n\t\t\t// Get an escaped version of the hash\n\t\t\tvar hash = escapeCharacters(decode(toggle.hash));\n\n\t\t\t// Get the anchored element\n\t\t\tvar anchor = settings.topOnEmptyHash && hash === '#' ? document.documentElement : document.querySelector(hash);\n\t\t\tanchor = !anchor && hash === '#top' ? document.documentElement : anchor;\n\n\t\t\t// If anchored element exists, scroll to it\n\t\t\tif (!anchor) return;\n\t\t\tevent.preventDefault();\n\t\t\tsmoothScroll.animateScroll(anchor, toggle);\n\t\t};\n\n\t\t/**\r\n   * Animate scroll on popstate events\r\n   */\n\t\tvar popstateHandler = function popstateHandler(event) {\n\t\t\t// Stop if history.state doesn't exist (ex. if clicking on a broken anchor link).\n\t\t\t// fixes `Cannot read property 'smoothScroll' of null` error getting thrown.\n\t\t\tif (history.state === null) return;\n\n\t\t\t// Only run if state is a popstate record for this instantiation\n\t\t\tif (!history.state.smoothScroll || history.state.smoothScroll !== JSON.stringify(settings)) return;\n\n\t\t\t// Only run if state includes an anchor\n\t\t\tif (!history.state.anchor) return;\n\n\t\t\t// Get the anchor\n\t\t\tvar anchor = document.querySelector(escapeCharacters(decode(history.state.anchor)));\n\t\t\tif (!anchor) return;\n\n\t\t\t// Animate scroll to anchor link\n\t\t\tsmoothScroll.animateScroll(anchor, null, { updateURL: false });\n\t\t};\n\n\t\t/**\r\n   * On window scroll and resize, only run events at a rate of 15fps for better performance\r\n   */\n\t\tvar resizeThrottler = function resizeThrottler(event) {\n\t\t\tif (!eventTimeout) {\n\t\t\t\teventTimeout = setTimeout(function () {\n\t\t\t\t\teventTimeout = null; // Reset timeout\n\t\t\t\t\theaderHeight = getHeaderHeight(fixedHeader); // Get the height of a fixed header if one exists\n\t\t\t\t}, 66);\n\t\t\t}\n\t\t};\n\n\t\t/**\r\n   * Destroy the current initialization.\r\n   */\n\t\tsmoothScroll.destroy = function () {\n\n\t\t\t// If plugin isn't already initialized, stop\n\t\t\tif (!settings) return;\n\n\t\t\t// Remove event listeners\n\t\t\tdocument.removeEventListener('click', clickHandler, false);\n\t\t\twindow.removeEventListener('resize', resizeThrottler, false);\n\t\t\twindow.removeEventListener('popstate', popstateHandler, false);\n\n\t\t\t// Cancel any scrolls-in-progress\n\t\t\tsmoothScroll.cancelScroll();\n\n\t\t\t// Reset variables\n\t\t\tsettings = null;\n\t\t\tanchor = null;\n\t\t\ttoggle = null;\n\t\t\tfixedHeader = null;\n\t\t\theaderHeight = null;\n\t\t\teventTimeout = null;\n\t\t\tanimationInterval = null;\n\t\t};\n\n\t\t/**\r\n   * Initialize Smooth Scroll\r\n   * @param {Object} options User settings\r\n   */\n\t\tsmoothScroll.init = function (options) {\n\n\t\t\t// feature test\n\t\t\tif (!supports()) throw 'Smooth Scroll: This browser does not support the required JavaScript methods and browser APIs.';\n\n\t\t\t// Destroy any existing initializations\n\t\t\tsmoothScroll.destroy();\n\n\t\t\t// Selectors and variables\n\t\t\tsettings = extend(defaults, options || {}); // Merge user options with defaults\n\t\t\tfixedHeader = settings.header ? document.querySelector(settings.header) : null; // Get the fixed header\n\t\t\theaderHeight = getHeaderHeight(fixedHeader);\n\n\t\t\t// When a toggle is clicked, run the click handler\n\t\t\tdocument.addEventListener('click', clickHandler, false);\n\n\t\t\t// If window is resized and there's a fixed header, recalculate its size\n\t\t\tif (fixedHeader) {\n\t\t\t\twindow.addEventListener('resize', resizeThrottler, false);\n\t\t\t}\n\n\t\t\t// If updateURL and popState are enabled, listen for pop events\n\t\t\tif (settings.updateURL && settings.popstate) {\n\t\t\t\twindow.addEventListener('popstate', popstateHandler, false);\n\t\t\t}\n\t\t};\n\n\t\t//\n\t\t// Initialize plugin\n\t\t//\n\n\t\tsmoothScroll.init(options);\n\n\t\t//\n\t\t// Public APIs\n\t\t//\n\n\t\treturn smoothScroll;\n\t};\n\n\treturn SmoothScroll;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./assets/js/lib/smooth-scroll.polyfills.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = jQuery;\n\n//# sourceURL=webpack:///external_%22jQuery%22?");

/***/ })

/******/ });